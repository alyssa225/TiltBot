[0.000000] (-) TimerEvent: {}
[0.000101] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/src/install/turtle_brick')])}
[0.000227] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/src/install/turtle_brick_interfaces')])}
[0.000271] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.017061] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.099042] (-) TimerEvent: {}
[0.199301] (-) TimerEvent: {}
[0.263083] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/src/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/src/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/src/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/src/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/src/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.276193] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/src/install/turtle_brick_interfaces/lib:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/src/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/src/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/src/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.282782] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.282981] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.283107] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.283323] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.283448] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.283563] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1434 - Experimental\n'}
[0.283680] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.283969] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.284114] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces\n'}
[0.284252] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.284390] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.284527] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.284665] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.284804] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.284941] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.285078] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.285227] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.285365] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.285504] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.285653] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299426] (-) TimerEvent: {}
[0.354763] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.354964] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.399554] (-) TimerEvent: {}
[0.422854] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.423019] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.423109] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.423194] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.432762] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.432975] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.441790] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.16 sec\n'}
[0.442000] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.442140] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.442229] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.442347] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.442442] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.499681] (-) TimerEvent: {}
[0.504410] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.504591] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.583767] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.584064] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.589898] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/src/build/turtle_brick/.pytest_cache\n'}
[0.590167] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.590359] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.599800] (-) TimerEvent: {}
[0.668472] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.668711] (turtle_brick) StdoutLine: {'line': b'collected 5 items                                                              \x1b[0m\n'}
[0.668955] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.695894] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.696113] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.696251] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.699885] (-) TimerEvent: {}
[0.708422] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.708659] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.716881] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.27 sec\n'}
[0.717224] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.717436] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.717579] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.717713] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.717858] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.16 sec*proc (1 test)\n'}
[0.718026] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.43 sec*proc (2 tests)\n'}
[0.718178] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.27 sec*proc (1 test)\n'}
[0.718318] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.718466] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.43 sec\n'}
[0.718614] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.718742] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.718838] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.741132] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.741295] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/src/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.741372] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.742961] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.743404] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.743439] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.799979] (-) TimerEvent: {}
[0.822829] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[31mF\x1b[0m\x1b[31mF\x1b[0m\x1b[31m                                                     [ 40%]\x1b[0m\n'}
[0.823738] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[31m                                                 [ 60%]\x1b[0m\n'}
[0.900101] (-) TimerEvent: {}
[0.995629] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 80%]\x1b[0m\n'}
[1.000201] (-) TimerEvent: {}
[1.057544] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[1.057792] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057894] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[1.058009] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m__________________________ TestMath.test_math_sucsses __________________________\x1b[0m\n'}
[1.058131] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:311: in from_call\n'}
[1.092682] (turtle_brick) StdoutLine: {'line': b'    result: Optional[TResult] = func()\n'}
[1.092906] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:255: in <lambda>\n'}
[1.093068] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mlambda\x1b[39;49;00m: ihook(item=item, **kwds), when=when, reraise=reraise\n'}
[1.093149] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/hooks.py\x1b[0m:286: in __call__\n'}
[1.093473] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._hookexec(\x1b[96mself\x1b[39;49;00m, \x1b[96mself\x1b[39;49;00m.get_hookimpls(), kwargs)\n'}
[1.093817] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:92: in _hookexec\n'}
[1.094043] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._inner_hookexec(hook, methods, kwargs)\n'}
[1.094305] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:83: in <lambda>\n'}
[1.094512] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m._inner_hookexec = \x1b[94mlambda\x1b[39;49;00m hook, methods, kwargs: hook.multicall(\n'}
[1.094692] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:170: in pytest_runtest_call\n'}
[1.094884] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mraise\x1b[39;49;00m e\n'}
[1.095014] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:162: in pytest_runtest_call\n'}
[1.095316] (turtle_brick) StdoutLine: {'line': b'    item.runtest()\n'}
[1.095452] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/python.py\x1b[0m:1641: in runtest\n'}
[1.095620] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m.ihook.pytest_pyfunc_call(pyfuncitem=\x1b[96mself\x1b[39;49;00m)\n'}
[1.095739] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/hooks.py\x1b[0m:286: in __call__\n'}
[1.095950] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._hookexec(\x1b[96mself\x1b[39;49;00m, \x1b[96mself\x1b[39;49;00m.get_hookimpls(), kwargs)\n'}
[1.096122] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:92: in _hookexec\n'}
[1.096305] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._inner_hookexec(hook, methods, kwargs)\n'}
[1.096445] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:83: in <lambda>\n'}
[1.096619] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m._inner_hookexec = \x1b[94mlambda\x1b[39;49;00m hook, methods, kwargs: hook.multicall(\n'}
[1.096708] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/python.py\x1b[0m:183: in pytest_pyfunc_call\n'}
[1.096794] (turtle_brick) StdoutLine: {'line': b'    result = testfunction(**testargs)\n'}
[1.096930] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   TypeError: TestMath.test_math_sucsses() takes 0 positional arguments but 1 was given\x1b[0m\n'}
[1.097020] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m___________________________ TestMath.test_math_fail ____________________________\x1b[0m\n'}
[1.097156] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:311: in from_call\n'}
[1.097245] (turtle_brick) StdoutLine: {'line': b'    result: Optional[TResult] = func()\n'}
[1.097332] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:255: in <lambda>\n'}
[1.097430] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mlambda\x1b[39;49;00m: ihook(item=item, **kwds), when=when, reraise=reraise\n'}
[1.097592] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/hooks.py\x1b[0m:286: in __call__\n'}
[1.097716] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._hookexec(\x1b[96mself\x1b[39;49;00m, \x1b[96mself\x1b[39;49;00m.get_hookimpls(), kwargs)\n'}
[1.097800] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:92: in _hookexec\n'}
[1.097929] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._inner_hookexec(hook, methods, kwargs)\n'}
[1.098016] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:83: in <lambda>\n'}
[1.098098] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m._inner_hookexec = \x1b[94mlambda\x1b[39;49;00m hook, methods, kwargs: hook.multicall(\n'}
[1.098197] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:170: in pytest_runtest_call\n'}
[1.098315] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mraise\x1b[39;49;00m e\n'}
[1.098400] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:162: in pytest_runtest_call\n'}
[1.098483] (turtle_brick) StdoutLine: {'line': b'    item.runtest()\n'}
[1.098564] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/python.py\x1b[0m:1641: in runtest\n'}
[1.098646] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m.ihook.pytest_pyfunc_call(pyfuncitem=\x1b[96mself\x1b[39;49;00m)\n'}
[1.098727] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/hooks.py\x1b[0m:286: in __call__\n'}
[1.098858] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._hookexec(\x1b[96mself\x1b[39;49;00m, \x1b[96mself\x1b[39;49;00m.get_hookimpls(), kwargs)\n'}
[1.098969] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:92: in _hookexec\n'}
[1.099324] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._inner_hookexec(hook, methods, kwargs)\n'}
[1.099435] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:83: in <lambda>\n'}
[1.099991] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m._inner_hookexec = \x1b[94mlambda\x1b[39;49;00m hook, methods, kwargs: hook.multicall(\n'}
[1.100185] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/python.py\x1b[0m:183: in pytest_pyfunc_call\n'}
[1.100272] (-) TimerEvent: {}
[1.100471] (turtle_brick) StdoutLine: {'line': b'    result = testfunction(**testargs)\n'}
[1.100570] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   TypeError: TestMath.test_math_fail() takes 0 positional arguments but 1 was given\x1b[0m\n'}
[1.100654] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[1.100732] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[1.101070] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[1.101444] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 275 code style errors / warnings:\x1b[0m\n'}
[1.101729] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:3:1: F401 'setuptools.find_packages' imported but unused\x1b[0m\n"}
[1.101970] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:14:100: E501 line too long (174 > 99 characters)\x1b[0m\n'}
[1.102204] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:18:43: E231 missing whitespace after ','\x1b[0m\n"}
[1.102502] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:24:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.102820] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\x1b[0m\n"}
[1.103290] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[1.103732] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\x1b[0m\n"}
[1.104129] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[1.104566] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\x1b[0m\n"}
[1.104948] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:12:42: W291 trailing whitespace\x1b[0m\n'}
[1.107100] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\x1b[0m\n"}
[1.109034] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.109174] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.109304] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.109428] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:35:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.109561] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:36:33: W291 trailing whitespace\x1b[0m\n'}
[1.109685] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:41:32: E231 missing whitespace after ','\x1b[0m\n"}
[1.109808] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:42:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.109948] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.110079] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:56:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.110209] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.110340] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:57:64: E231 missing whitespace after ','\x1b[0m\n"}
[1.110471] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:57:84: E231 missing whitespace after ','\x1b[0m\n"}
[1.110604] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.110732] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:59:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.110861] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:59:65: E231 missing whitespace after ','\x1b[0m\n"}
[1.110999] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:60:54: E231 missing whitespace after ','\x1b[0m\n"}
[1.111109] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:60:62: E231 missing whitespace after ','\x1b[0m\n"}
[1.111186] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:61:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.111269] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:61:64: E231 missing whitespace after ','\x1b[0m\n"}
[1.111355] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:64:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.111430] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.111504] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:68:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.111579] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:69:47: E231 missing whitespace after ','\x1b[0m\n"}
[1.111652] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:69:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.111725] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:46: E231 missing whitespace after ','\x1b[0m\n"}
[1.111814] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:54: E231 missing whitespace after ','\x1b[0m\n"}
[1.111890] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.111963] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.112037] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:89:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.112110] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:175:9: E303 too many blank lines (2)\x1b[0m\n'}
[1.112184] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:175:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.112258] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:178:26: W291 trailing whitespace\x1b[0m\n'}
[1.112331] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:191:42: E231 missing whitespace after ','\x1b[0m\n"}
[1.112404] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:193:37: E231 missing whitespace after ','\x1b[0m\n"}
[1.112477] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:194:35: E231 missing whitespace after ','\x1b[0m\n"}
[1.112551] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:194:45: E231 missing whitespace after ','\x1b[0m\n"}
[1.112625] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:197:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.112698] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:198:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.112769] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:205:24: E225 missing whitespace around operator\x1b[0m\n'}
[1.112840] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:48: E231 missing whitespace after ','\x1b[0m\n"}
[1.112928] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:65: E231 missing whitespace after ','\x1b[0m\n"}
[1.113005] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:209:46: E231 missing whitespace after ','\x1b[0m\n"}
[1.113083] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:209:61: E231 missing whitespace after ','\x1b[0m\n"}
[1.113160] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:211:36: E231 missing whitespace after ','\x1b[0m\n"}
[1.113237] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:212:13: E225 missing whitespace around operator\x1b[0m\n'}
[1.113313] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:222:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.113398] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:239:58: E225 missing whitespace around operator\x1b[0m\n'}
[1.113607] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:242:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.113702] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:243:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.113780] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:244:5: E303 too many blank lines (2)\x1b[0m\n'}
[1.113858] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:244:23: E231 missing whitespace after ','\x1b[0m\n"}
[1.113934] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:244:25: E231 missing whitespace after ','\x1b[0m\n"}
[1.114009] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:244:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.114099] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:249:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.114174] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:25: E231 missing whitespace after ','\x1b[0m\n"}
[1.114249] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.114324] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:30: W291 trailing whitespace\x1b[0m\n'}
[1.114399] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:260:42: E225 missing whitespace around operator\x1b[0m\n'}
[1.114474] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:261:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.114550] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:261:66: E262 inline comment should start with '# '\x1b[0m\n"}
[1.114626] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:261:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[1.114702] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:278:9: E225 missing whitespace around operator\x1b[0m\n'}
[1.114778] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:280:19: W291 trailing whitespace\x1b[0m\n'}
[1.114853] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:281:1: W391 blank line at end of file\x1b[0m\n'}
[1.114928] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[1.115029] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[1.115205] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[1.115349] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[1.115432] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[1.115510] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[1.115588] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[1.115664] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[1.115741] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.115841] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.115918] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.116009] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:33: W291 trailing whitespace\x1b[0m\n'}
[1.116087] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:27:32: E231 missing whitespace after ','\x1b[0m\n"}
[1.116165] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.116243] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:38:65: E231 missing whitespace after ','\x1b[0m\n"}
[1.116322] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:38:81: E231 missing whitespace after ','\x1b[0m\n"}
[1.116400] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.116478] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:63: E231 missing whitespace after ','\x1b[0m\n"}
[1.116556] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:51: E231 missing whitespace after ','\x1b[0m\n"}
[1.116634] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:62: E231 missing whitespace after ','\x1b[0m\n"}
[1.116712] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:41:52: E231 missing whitespace after ','\x1b[0m\n"}
[1.116789] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:41:61: E231 missing whitespace after ','\x1b[0m\n"}
[1.116867] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:43:61: E231 missing whitespace after ','\x1b[0m\n"}
[1.116945] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:43:74: E231 missing whitespace after ','\x1b[0m\n"}
[1.117023] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:43:93: E231 missing whitespace after ','\x1b[0m\n"}
[1.117106] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:44:54: E231 missing whitespace after ','\x1b[0m\n"}
[1.117185] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:44:62: E231 missing whitespace after ','\x1b[0m\n"}
[1.117263] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:44:81: E231 missing whitespace after ','\x1b[0m\n"}
[1.117341] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:53: W291 trailing whitespace\x1b[0m\n'}
[1.117419] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:50:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.117498] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.117576] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:19: W291 trailing whitespace\x1b[0m\n'}
[1.117655] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:60:28: W291 trailing whitespace\x1b[0m\n'}
[1.117734] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:81:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.117812] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:87:23: E225 missing whitespace around operator\x1b[0m\n'}
[1.117890] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:94:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.117992] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:97:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.118073] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.118155] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:105:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.118236] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:106:76: E231 missing whitespace after ','\x1b[0m\n"}
[1.118317] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:106:96: E231 missing whitespace after ','\x1b[0m\n"}
[1.118398] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:106:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[1.118479] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:106:120: E202 whitespace before ')'\x1b[0m\n"}
[1.118560] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:115:15: E225 missing whitespace around operator\x1b[0m\n'}
[1.118641] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:115:24: E225 missing whitespace around operator\x1b[0m\n'}
[1.118723] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:115:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.118805] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:115:43: E225 missing whitespace around operator\x1b[0m\n'}
[1.118900] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:125:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.118983] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:131:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.119065] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.119146] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.119226] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:140:9: E303 too many blank lines (2)\x1b[0m\n'}
[1.119308] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:140:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.119388] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:46: E231 missing whitespace after ','\x1b[0m\n"}
[1.119469] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:58: E231 missing whitespace after ','\x1b[0m\n"}
[1.119549] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:144:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.119629] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:145:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.119709] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.119808] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.119893] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:150:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.119974] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:151:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.120055] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:152:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.120147] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:155:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.120228] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:68: W291 trailing whitespace\x1b[0m\n'}
[1.120310] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:68: W291 trailing whitespace\x1b[0m\n'}
[1.120394] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:158:48: W291 trailing whitespace\x1b[0m\n'}
[1.120473] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:160:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.120550] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:56: W291 trailing whitespace\x1b[0m\n'}
[1.120628] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.120709] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:41: E225 missing whitespace around operator\x1b[0m\n'}
[1.120788] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.120868] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:176:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.120949] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:38: E225 missing whitespace around operator\x1b[0m\n'}
[1.121030] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:179:49: E225 missing whitespace around operator\x1b[0m\n'}
[1.121111] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:180:51: E225 missing whitespace around operator\x1b[0m\n'}
[1.121192] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:182:80: E202 whitespace before ')'\x1b[0m\n"}
[1.121274] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:186:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.121355] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:188:52: E225 missing whitespace around operator\x1b[0m\n'}
[1.121436] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:188:57: W291 trailing whitespace\x1b[0m\n'}
[1.121516] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:190:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.121597] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.121678] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.121759] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:198:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.121840] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:200:1: E303 too many blank lines (3)\x1b[0m\n'}
[1.121921] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:202:16: E225 missing whitespace around operator\x1b[0m\n'}
[1.122013] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:204:19: W291 trailing whitespace\x1b[0m\n'}
[1.122091] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:206:1: W391 blank line at end of file\x1b[0m\n'}
[1.122168] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[1.122253] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[1.122333] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[1.122425] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[1.122505] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[1.122583] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[1.122661] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[1.122739] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[1.122817] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[1.122896] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.122985] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.123060] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:29:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.123135] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:30:33: W291 trailing whitespace\x1b[0m\n'}
[1.123210] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:35:32: E231 missing whitespace after ','\x1b[0m\n"}
[1.123284] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:36:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.123358] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:43:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.123434] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:46:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.123514] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:48:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.123590] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:49:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.123665] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:49:64: E231 missing whitespace after ','\x1b[0m\n"}
[1.123739] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:49:84: E231 missing whitespace after ','\x1b[0m\n"}
[1.123829] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:57: E231 missing whitespace after ','\x1b[0m\n"}
[1.123906] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:85: E231 missing whitespace after ','\x1b[0m\n"}
[1.123981] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.124056] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:85: E231 missing whitespace after ','\x1b[0m\n"}
[1.124131] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:52:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.124206] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:53:28: E225 missing whitespace around operator\x1b[0m\n'}
[1.124281] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:53:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.124362] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:53:64: E231 missing whitespace after ','\x1b[0m\n"}
[1.124438] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:54:22: E225 missing whitespace around operator\x1b[0m\n'}
[1.124514] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:54:57: E231 missing whitespace after ','\x1b[0m\n"}
[1.124614] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:54:70: E231 missing whitespace after ','\x1b[0m\n"}
[1.124733] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:55:22: E225 missing whitespace around operator\x1b[0m\n'}
[1.124813] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:55:50: E231 missing whitespace after ','\x1b[0m\n"}
[1.124890] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:55:58: E231 missing whitespace after ','\x1b[0m\n"}
[1.124986] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:56:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.125066] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[1.125145] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:57:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.125224] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:59:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.125304] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:60:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.125383] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:83:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.125462] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:84:5: E303 too many blank lines (3)\x1b[0m\n'}
[1.125544] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:84:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.125626] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:88:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[1.125708] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:94:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.125787] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:95:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.125866] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:105:5: E303 too many blank lines (2)\x1b[0m\n'}
[1.125961] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:105:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.126043] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:110:40: E225 missing whitespace around operator\x1b[0m\n'}
[1.126167] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:112:13: E265 block comment should start with '# '\x1b[0m\n"}
[1.126348] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:112:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[1.126520] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:113:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[1.126678] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:114:28: E225 missing whitespace around operator\x1b[0m\n'}
[1.126820] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:114:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.126963] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:114:40: E262 inline comment should start with '# '\x1b[0m\n"}
[1.127110] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:114:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[1.127246] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:122:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.127382] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:123:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.127518] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.127661] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:1: E303 too many blank lines (6)\x1b[0m\n'}
[1.127822] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:131:21: W292 no newline at end of file\x1b[0m\n'}
[1.127920] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.128016] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:6:25: W292 no newline at end of file\x1b[0m\n'}
[1.128094] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[1.128188] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[1.128278] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[1.128400] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[1.128483] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[1.128561] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[1.128639] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[1.128716] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.128793] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[1.128870] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[1.128963] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[1.129044] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[1.129124] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[1.129204] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:11:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.129283] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:22: E225 missing whitespace around operator\x1b[0m\n'}
[1.129361] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:14:51: E225 missing whitespace around operator\x1b[0m\n'}
[1.129440] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.129520] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:16:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[1.129599] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:18:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[1.129687] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:18:105: E231 missing whitespace after ','\x1b[0m\n"}
[1.129767] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:19:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[1.129847] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:19:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.129942] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:19:92: E262 inline comment should start with '# '\x1b[0m\n"}
[1.130023] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:22:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[1.130105] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:36:89: E231 missing whitespace after ','\x1b[0m\n"}
[1.130186] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:36:96: E231 missing whitespace after ','\x1b[0m\n"}
[1.130267] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:43:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.130349] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:49:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.130430] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:68:7: W292 no newline at end of file\x1b[0m\n'}
[1.130511] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[1.130606] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[1.130688] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[1.130769] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[1.130851] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[1.130932] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[1.131020] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[1.131103] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:40:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.131185] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:40:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.131266] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:40:70: E231 missing whitespace after ','\x1b[0m\n"}
[1.131347] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.131428] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:44:7: W292 no newline at end of file\x1b[0m\n'}
[1.131510] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[1.131592] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[1.131683] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[1.131776] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[1.131867] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[1.131949] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[1.132043] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[1.132120] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:42:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.132196] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:43:7: W292 no newline at end of file\x1b[0m\n'}
[1.132272] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.132349] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.132428] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.132505] (turtle_brick) StdoutLine: {'line': b"./setup.py:3:1: F401 'setuptools.find_packages' imported but unused\n"}
[1.132582] (turtle_brick) StdoutLine: {'line': b'from setuptools import setup, find_packages\n'}
[1.132658] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.132735] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.132812] (turtle_brick) StdoutLine: {'line': b'./setup.py:14:100: E501 line too long (174 > 99 characters)\n'}
[1.132890] (turtle_brick) StdoutLine: {'line': b"        ('share/' + package_name, ['package.xml', 'launch/show_turtle.launch.py', 'config/turtle_urdf.rviz', 'launch/run_turtle.launch.py', 'launch/turtle_arena.launch.py']),\n"}
[1.132969] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.133046] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.133123] (turtle_brick) StdoutLine: {'line': b"./setup.py:18:43: E231 missing whitespace after ','\n"}
[1.133199] (turtle_brick) StdoutLine: {'line': b"    install_requires=['setuptools', 'urdf','rviz'],\n"}
[1.133275] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.133352] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.133428] (turtle_brick) StdoutLine: {'line': b"./setup.py:24:28: E231 missing whitespace after ','\n"}
[1.133504] (turtle_brick) StdoutLine: {'line': b"    tests_require=['pytest','ament_lint_auto'],\n"}
[1.133580] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.133657] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.133735] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\n"}
[1.133813] (turtle_brick) StdoutLine: {'line': b'from xmlrpc.client import Boolean\n'}
[1.133891] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.133967] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.134058] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.134138] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.134217] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.134296] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.134375] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\n"}
[1.134455] (turtle_brick) StdoutLine: {'line': b'from math import pi\n'}
[1.134534] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.134622] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.134699] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.134778] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.134856] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.134960] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.135144] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\n"}
[1.135361] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt\n'}
[1.135459] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.135540] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.135617] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:12:42: W291 trailing whitespace\n'}
[1.135718] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.135849] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.136009] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.136174] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\n"}
[1.136342] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import MarkerArray\n'}
[1.136526] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.136690] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.136855] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\n"}
[1.137028] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[1.137177] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.137323] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.137468] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\n'}
[1.137633] (turtle_brick) StdoutLine: {'line': b'class BState(Enum):\n'}
[1.137781] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.137938] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.138108] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\n'}
[1.138262] (turtle_brick) StdoutLine: {'line': b'class Arena(Node):\n'}
[1.138415] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.138567] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.138718] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:35:9: E265 block comment should start with '# '\n"}
[1.138869] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.139032] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.139179] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.139325] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:36:33: W291 trailing whitespace\n'}
[1.139473] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.139620] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.139780] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.139934] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:41:32: E231 missing whitespace after ','\n"}
[1.140095] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.140238] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.140380] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.140523] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:42:27: E231 missing whitespace after ','\n"}
[1.140666] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.140809] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.140951] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.141093] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\n"}
[1.141235] (turtle_brick) StdoutLine: {'line': b'        #setting state of brick\n'}
[1.141378] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.141520] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.141675] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:56:9: E265 block comment should start with '# '\n"}
[1.141818] (turtle_brick) StdoutLine: {'line': b'        #set up subscribers\n'}
[1.141974] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.142112] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.142249] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:57:55: E231 missing whitespace after ','\n"}
[1.142387] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.142525] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.142665] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.142802] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:57:64: E231 missing whitespace after ','\n"}
[1.142941] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.143080] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.143218] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.143356] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:57:84: E231 missing whitespace after ','\n"}
[1.143494] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.143633] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.143779] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.143935] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:58:9: E265 block comment should start with '# '\n"}
[1.144078] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.144221] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.144365] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.144507] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:59:55: E231 missing whitespace after ','\n"}
[1.144651] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.144794] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.144937] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.145092] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:59:65: E231 missing whitespace after ','\n"}
[1.145230] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.145369] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.145508] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.145645] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:60:54: E231 missing whitespace after ','\n"}
[1.145784] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[1.145936] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.146070] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.146203] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:60:62: E231 missing whitespace after ','\n"}
[1.146336] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[1.146470] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.146603] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.146736] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:61:55: E231 missing whitespace after ','\n"}
[1.146870] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[1.147015] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.147144] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.147273] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:61:64: E231 missing whitespace after ','\n"}
[1.147402] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[1.147543] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.147673] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.147811] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:64:1: W293 blank line contains whitespace\n'}
[1.147942] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.148089] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.148226] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.148362] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:67:1: W293 blank line contains whitespace\n'}
[1.148500] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.148637] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.148773] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.148910] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:68:9: E265 block comment should start with '# '\n"}
[1.149053] (turtle_brick) StdoutLine: {'line': b'        #initialize services\n'}
[1.149182] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.149312] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.149441] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:69:47: E231 missing whitespace after ','\n"}
[1.149570] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[1.149707] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[1.149836] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.149976] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:69:56: E231 missing whitespace after ','\n"}
[1.150100] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[1.150225] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.150350] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.150475] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:46: E231 missing whitespace after ','\n"}
[1.150600] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[1.150725] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.150850] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.150993] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:54: E231 missing whitespace after ','\n"}
[1.151126] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[1.151259] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.151391] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.151524] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:71:1: W293 blank line contains whitespace\n'}
[1.151658] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.151799] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.151935] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.152083] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\n"}
[1.152234] (turtle_brick) StdoutLine: {'line': b'        #creating brick marker\n'}
[1.152372] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.152511] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.152648] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:89:9: E265 block comment should start with '# '\n"}
[1.152786] (turtle_brick) StdoutLine: {'line': b'        #creating wall markers\n'}
[1.152938] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.153092] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.153245] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:175:9: E303 too many blank lines (2)\n'}
[1.153398] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[1.153551] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.153704] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.153856] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:175:9: E265 block comment should start with '# '\n"}
[1.154017] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[1.154170] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.154323] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.154474] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:178:26: W291 trailing whitespace\n'}
[1.154627] (turtle_brick) StdoutLine: {'line': b'        self.brickz = 0.0 \n'}
[1.154780] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[1.154951] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.155132] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:191:42: E231 missing whitespace after ','\n"}
[1.155284] (turtle_brick) StdoutLine: {'line': b'        self.wall = self.create_timer(0.5,self.wall_callback)\n'}
[1.155457] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.155590] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.155715] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:193:37: E231 missing whitespace after ','\n"}
[1.155856] (turtle_brick) StdoutLine: {'line': b'    def place_callback(self, request,response):\n'}
[1.155997] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.156126] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.156254] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:194:35: E231 missing whitespace after ','\n"}
[1.156382] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[1.156511] (turtle_brick) StdoutLine: {'line': b'                                  ^\n'}
[1.156639] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.156767] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:194:45: E231 missing whitespace after ','\n"}
[1.156895] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[1.157060] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.157187] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.157310] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:197:1: W293 blank line contains whitespace\n'}
[1.157435] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.157558] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.157684] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.157822] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:198:28: E231 missing whitespace after ','\n"}
[1.157964] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.158100] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.158220] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.158339] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:205:24: E225 missing whitespace around operator\n'}
[1.158459] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[1.158578] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.158698] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.158817] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:48: E231 missing whitespace after ','\n"}
[1.158952] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[1.159079] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.159203] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.159326] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:65: E231 missing whitespace after ','\n"}
[1.159451] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[1.159575] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.159700] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.159818] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:209:46: E231 missing whitespace after ','\n"}
[1.159898] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[1.160000] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.160074] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.160147] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:209:61: E231 missing whitespace after ','\n"}
[1.160220] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[1.160293] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.160366] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.160439] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:211:36: E231 missing whitespace after ','\n"}
[1.160514] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self, request,response):\n'}
[1.160586] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[1.160660] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.160733] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:212:13: E225 missing whitespace around operator\n'}
[1.160816] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[1.160908] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.161012] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.161092] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:222:9: E265 block comment should start with '# '\n"}
[1.161165] (turtle_brick) StdoutLine: {'line': b'        #publishing wall markers\n'}
[1.161238] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.161310] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.161382] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:239:58: E225 missing whitespace around operator\n'}
[1.161452] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[1.161521] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.161591] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.161663] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:242:1: W293 blank line contains whitespace\n'}
[1.161735] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.161807] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.161878] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.161965] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:243:1: W293 blank line contains whitespace\n'}
[1.162039] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.162114] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.162187] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.162261] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:244:5: E303 too many blank lines (2)\n'}
[1.162334] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.162409] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.162483] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.162556] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:244:23: E231 missing whitespace after ','\n"}
[1.162631] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.162704] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.162778] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.162852] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:244:25: E231 missing whitespace after ','\n"}
[1.162926] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.163000] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.163075] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.163150] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:244:27: E231 missing whitespace after ','\n"}
[1.163226] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.163301] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.163375] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.163449] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:249:1: W293 blank line contains whitespace\n'}
[1.163538] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.163614] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.163691] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.163779] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:256:25: E231 missing whitespace after ','\n"}
[1.163863] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[1.163956] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.164038] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.164119] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:256:27: E231 missing whitespace after ','\n"}
[1.164201] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[1.164282] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.164363] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.164444] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:258:30: W291 trailing whitespace\n'}
[1.164526] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[1.164609] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[1.164690] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.164771] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:260:42: E225 missing whitespace around operator\n'}
[1.164853] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[1.164953] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.165035] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.165115] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:261:65: E261 at least two spaces before inline comment\n'}
[1.165197] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.165281] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.165363] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.165444] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:261:66: E262 inline comment should start with '# '\n"}
[1.165525] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.165606] (turtle_brick) StdoutLine: {'line': b'                                                                 ^\n'}
[1.165686] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.165766] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:261:100: E501 line too long (100 > 99 characters)\n'}
[1.165848] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.165930] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.166024] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.166102] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:278:9: E225 missing whitespace around operator\n'}
[1.166180] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[1.166257] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.166333] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.166411] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:280:19: W291 trailing whitespace\n'}
[1.166490] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.166568] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.166646] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.166724] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:281:1: W391 blank line at end of file\n'}
[1.166802] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.166880] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.166970] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.167044] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[1.167119] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[1.167193] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.167275] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.167349] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[1.167426] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[1.167501] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.167575] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.167648] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[1.167724] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[1.167820] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.167897] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.167988] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[1.168066] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[1.168145] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.168222] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.168299] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[1.168387] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.168466] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.168543] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.168619] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[1.168697] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.168775] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.168853] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.168945] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[1.169026] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[1.169114] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.169252] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.169338] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[1.169421] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.169503] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.169585] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.169668] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[1.169752] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[1.169833] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.169915] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.170014] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[1.170098] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[1.170183] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.170268] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.170350] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:21:9: E265 block comment should start with '# '\n"}
[1.170433] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.170516] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.170601] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.170685] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:33: W291 trailing whitespace\n'}
[1.170769] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.170853] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.170951] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.171031] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:27:32: E231 missing whitespace after ','\n"}
[1.171113] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.171194] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.171287] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.171368] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:28:27: E231 missing whitespace after ','\n"}
[1.171448] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.171530] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.171610] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.171690] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:38:65: E231 missing whitespace after ','\n"}
[1.171785] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.171875] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.171955] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.172046] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:38:81: E231 missing whitespace after ','\n"}
[1.172119] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.172192] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.172264] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.172337] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:55: E231 missing whitespace after ','\n"}
[1.172410] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.172482] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.172555] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.172627] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:63: E231 missing whitespace after ','\n"}
[1.172701] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.172774] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.172847] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.172921] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:40:51: E231 missing whitespace after ','\n"}
[1.173005] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.173076] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.173145] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.173214] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:40:62: E231 missing whitespace after ','\n"}
[1.173285] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.173367] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.173437] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.173506] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:41:52: E231 missing whitespace after ','\n"}
[1.173576] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.173646] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.173716] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.173786] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:41:61: E231 missing whitespace after ','\n"}
[1.173857] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.173927] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.173998] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.174066] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:43:61: E231 missing whitespace after ','\n"}
[1.174136] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.174213] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.174283] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.174352] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:43:74: E231 missing whitespace after ','\n"}
[1.174422] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.174491] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[1.174568] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.174637] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:43:93: E231 missing whitespace after ','\n"}
[1.174707] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.174776] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[1.174846] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.174914] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:44:54: E231 missing whitespace after ','\n"}
[1.174983] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.175052] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.175225] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.175440] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:44:62: E231 missing whitespace after ','\n"}
[1.175524] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.175600] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.175671] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.175742] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:44:81: E231 missing whitespace after ','\n"}
[1.175828] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.175915] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.175989] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.176061] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:46:53: W291 trailing whitespace\n'}
[1.176134] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[1.176207] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.176280] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.176353] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:50:1: W293 blank line contains whitespace\n'}
[1.176428] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.176500] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.176571] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.176642] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:9: E265 block comment should start with '# '\n"}
[1.176715] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.176787] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.176858] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.176929] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:59:19: W291 trailing whitespace\n'}
[1.177003] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.177075] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.177146] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.177216] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:60:28: W291 trailing whitespace\n'}
[1.177287] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[1.177360] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.177432] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.177502] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:81:9: E265 block comment should start with '# '\n"}
[1.177584] (turtle_brick) StdoutLine: {'line': b'        #joint state publisher\n'}
[1.177655] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.177726] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.177797] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:87:23: E225 missing whitespace around operator\n'}
[1.177868] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[1.177942] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.178012] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.178082] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:94:9: E265 block comment should start with '# '\n"}
[1.178154] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel publisher\n'}
[1.178225] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.178296] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.178366] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:97:9: E265 block comment should start with '# '\n"}
[1.178438] (turtle_brick) StdoutLine: {'line': b'        #create pose publisher\n'}
[1.178508] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.178577] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.178647] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:1: W293 blank line contains whitespace\n'}
[1.178718] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.178787] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.178857] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.178926] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:105:27: E231 missing whitespace after ','\n"}
[1.178997] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[1.179067] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.179138] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.179208] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:106:76: E231 missing whitespace after ','\n"}
[1.179278] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.179350] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[1.179421] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.179491] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:106:96: E231 missing whitespace after ','\n"}
[1.179562] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.179633] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.179705] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.179795] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:106:100: E501 line too long (121 > 99 characters)\n'}
[1.179873] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.179946] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.180019] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.180098] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:106:120: E202 whitespace before ')'\n"}
[1.180241] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.180321] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[1.180404] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.180478] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:115:15: E225 missing whitespace around operator\n'}
[1.180557] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.180630] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[1.180705] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.180777] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:115:24: E225 missing whitespace around operator\n'}
[1.180850] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.180921] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.180994] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.181068] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:115:34: E225 missing whitespace around operator\n'}
[1.181143] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.181215] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.181287] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.181358] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:115:43: E225 missing whitespace around operator\n'}
[1.181430] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.181502] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.181577] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.181649] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:125:27: E231 missing whitespace after ','\n"}
[1.181724] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.181796] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.181869] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.181941] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:131:1: W293 blank line contains whitespace\n'}
[1.182013] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.182085] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.182156] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.182227] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:132:9: E265 block comment should start with '# '\n"}
[1.182300] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[1.182373] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.182444] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.182516] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:139:1: W293 blank line contains whitespace\n'}
[1.182589] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.182661] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.182733] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.182803] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:140:9: E303 too many blank lines (2)\n'}
[1.182875] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.182949] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.183020] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.183090] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:140:9: E265 block comment should start with '# '\n"}
[1.183162] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.183233] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.183304] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.183375] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:46: E231 missing whitespace after ','\n"}
[1.183447] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.183518] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.183591] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.183662] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:58: E231 missing whitespace after ','\n"}
[1.183734] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.183833] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.183907] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.183987] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:144:1: W293 blank line contains whitespace\n'}
[1.184059] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.184130] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.184201] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.184271] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:145:9: E265 block comment should start with '# '\n"}
[1.184343] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.184413] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.184487] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.184559] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[1.184631] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.184701] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.184771] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.184840] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[1.184924] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.184993] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.185064] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.185132] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:150:34: E225 missing whitespace around operator\n'}
[1.185201] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.185269] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.185338] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.185406] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:151:34: E225 missing whitespace around operator\n'}
[1.185476] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.185545] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.185615] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.185686] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:152:34: E225 missing whitespace around operator\n'}
[1.185759] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.185829] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.185898] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.185967] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:155:9: E265 block comment should start with '# '\n"}
[1.186036] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.186106] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.186177] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.186246] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:68: W291 trailing whitespace\n'}
[1.186318] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.186387] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.186455] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.186522] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:68: W291 trailing whitespace\n'}
[1.186590] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.186659] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.186728] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.186796] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:158:48: W291 trailing whitespace\n'}
[1.186864] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.186934] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.187025] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.187097] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:160:9: E265 block comment should start with '# '\n"}
[1.187169] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.187249] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.187321] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.187392] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:56: W291 trailing whitespace\n'}
[1.187463] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.187535] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.187606] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.187676] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.187747] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.187842] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.187916] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.187987] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:172:41: E225 missing whitespace around operator\n'}
[1.188059] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.188142] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.188213] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.188283] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:1: W293 blank line contains whitespace\n'}
[1.188354] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.188425] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.188496] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.188566] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:176:9: E265 block comment should start with '# '\n"}
[1.188636] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.188707] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.188777] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.188847] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:177:38: E225 missing whitespace around operator\n'}
[1.188918] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.189003] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.189076] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.189148] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:179:49: E225 missing whitespace around operator\n'}
[1.189220] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.189293] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.189365] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.189436] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:180:51: E225 missing whitespace around operator\n'}
[1.189513] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.189601] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.189678] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.189751] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:182:80: E202 whitespace before ')'\n"}
[1.189823] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.189896] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.189968] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.190039] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:186:9: E265 block comment should start with '# '\n"}
[1.190111] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.190182] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.190254] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.190327] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:188:52: E225 missing whitespace around operator\n'}
[1.190400] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.190479] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.190551] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.190623] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:188:57: W291 trailing whitespace\n'}
[1.190695] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.190766] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.190837] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.190909] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:190:34: E225 missing whitespace around operator\n'}
[1.190997] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.191070] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.191146] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.191280] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:34: E225 missing whitespace around operator\n'}
[1.191362] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.191438] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.191512] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.191587] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:1: W293 blank line contains whitespace\n'}
[1.191661] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.191736] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.191833] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.191910] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:198:1: W293 blank line contains whitespace\n'}
[1.191985] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.192060] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.192134] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.192209] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:200:1: E303 too many blank lines (3)\n'}
[1.192283] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.192358] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.192434] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.192508] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:202:16: E225 missing whitespace around operator\n'}
[1.192583] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.192657] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.192731] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.192806] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:204:19: W291 trailing whitespace\n'}
[1.192882] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.192969] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.193038] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.193107] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:206:1: W391 blank line at end of file\n'}
[1.193175] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.193244] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.193312] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.193381] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.193452] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.193520] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.193590] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.193660] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.193730] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.193810] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.193879] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.193948] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.194017] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.194092] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.194161] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.194229] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.194298] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.194367] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.194434] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.194501] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.194570] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.194639] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.194706] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.194773] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.194841] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.194923] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.194993] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.195077] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.195255] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.195449] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.195532] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.195607] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.195680] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.195752] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.195840] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.195913] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.195986] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.196058] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.196129] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.196200] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.196272] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.196344] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.196415] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.196487] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.196559] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.196631] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.196702] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.196773] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:29:9: E265 block comment should start with '# '\n"}
[1.196846] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.196917] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.197001] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.197069] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:30:33: W291 trailing whitespace\n'}
[1.197139] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.197223] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.197294] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.197364] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:35:32: E231 missing whitespace after ','\n"}
[1.197435] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.197504] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.197574] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.197642] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:36:27: E231 missing whitespace after ','\n"}
[1.197712] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.197788] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.197857] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.197925] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:43:9: E265 block comment should start with '# '\n"}
[1.197995] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.198063] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.198132] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.198200] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:46:9: E265 block comment should start with '# '\n"}
[1.198269] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.198337] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.198405] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.198473] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:48:9: E265 block comment should start with '# '\n"}
[1.198541] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.199386] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.199719] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.200011] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:49:55: E231 missing whitespace after ','\n"}
[1.200139] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.200262] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.200380] (-) TimerEvent: {}
[1.200489] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.200616] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:49:64: E231 missing whitespace after ','\n"}
[1.200739] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.200860] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.200981] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.201101] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:49:84: E231 missing whitespace after ','\n"}
[1.201222] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.201342] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.201463] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.201606] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:57: E231 missing whitespace after ','\n"}
[1.201727] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.201848] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.201978] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.202084] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:85: E231 missing whitespace after ','\n"}
[1.202219] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.202366] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.202528] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.202660] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:55: E231 missing whitespace after ','\n"}
[1.202767] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.202874] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.202989] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.203103] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:85: E231 missing whitespace after ','\n"}
[1.203203] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.203303] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.203408] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.203509] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:52:9: E265 block comment should start with '# '\n"}
[1.203608] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.203708] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.203824] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.203925] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:53:28: E225 missing whitespace around operator\n'}
[1.204026] (turtle_brick) StdoutLine: {'line': b"        self.brick_land_pub= self.create_publisher(Pose,'/land',10)\n"}
[1.204126] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.204226] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.204334] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:53:56: E231 missing whitespace after ','\n"}
[1.204434] (turtle_brick) StdoutLine: {'line': b"        self.brick_land_pub= self.create_publisher(Pose,'/land',10)\n"}
[1.204533] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.204633] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.204732] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:53:64: E231 missing whitespace after ','\n"}
[1.204833] (turtle_brick) StdoutLine: {'line': b"        self.brick_land_pub= self.create_publisher(Pose,'/land',10)\n"}
[1.204933] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.205033] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.205132] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:54:22: E225 missing whitespace around operator\n'}
[1.205232] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.205332] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.205432] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.205562] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:54:57: E231 missing whitespace after ','\n"}
[1.205677] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.205797] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.205879] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.205971] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:54:70: E231 missing whitespace after ','\n"}
[1.206039] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.206105] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.206171] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.206235] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:55:22: E225 missing whitespace around operator\n'}
[1.206301] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.206366] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.206430] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.206495] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:55:50: E231 missing whitespace after ','\n"}
[1.206560] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.206638] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.206699] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.206760] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:55:58: E231 missing whitespace after ','\n"}
[1.206821] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.206881] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.206956] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.207019] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:56:55: E231 missing whitespace after ','\n"}
[1.207090] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.207164] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.207228] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.207290] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:56:65: E231 missing whitespace after ','\n"}
[1.207353] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.207416] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.207485] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.207548] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:57:9: E265 block comment should start with '# '\n"}
[1.207612] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.207675] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.207739] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.207815] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:59:1: W293 blank line contains whitespace\n'}
[1.207880] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.207943] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.208019] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.208080] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:60:9: E265 block comment should start with '# '\n"}
[1.208142] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.208203] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.208265] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.208326] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:83:1: W293 blank line contains whitespace\n'}
[1.208388] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.208448] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.208510] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.208570] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:84:5: E303 too many blank lines (3)\n'}
[1.208631] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.208692] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.208753] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.208813] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:84:28: E231 missing whitespace after ','\n"}
[1.208874] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.208947] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.209006] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.209066] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:88:100: E501 line too long (100 > 99 characters)\n'}
[1.209127] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.209187] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.209247] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.209310] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:94:1: W293 blank line contains whitespace\n'}
[1.209371] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.209430] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.209489] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.209564] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:95:28: E231 missing whitespace after ','\n"}
[1.209625] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.209684] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.209743] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.209802] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:105:5: E303 too many blank lines (2)\n'}
[1.209862] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.209921] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.209980] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.210039] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:105:27: E231 missing whitespace after ','\n"}
[1.210125] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.210191] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.210258] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.210324] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:110:40: E225 missing whitespace around operator\n'}
[1.210391] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.210458] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.210525] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.210591] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:112:13: E265 block comment should start with '# '\n"}
[1.210658] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.210725] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.210792] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.210858] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:112:100: E501 line too long (142 > 99 characters)\n'}
[1.210926] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.210993] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.211060] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.211125] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:113:100: E501 line too long (155 > 99 characters)\n'}
[1.211191] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.211258] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.211324] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.211389] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:114:28: E225 missing whitespace around operator\n'}
[1.211455] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.211521] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.211587] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.211652] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:114:39: E261 at least two spaces before inline comment\n'}
[1.211718] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.211798] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.211867] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.211933] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:114:40: E262 inline comment should start with '# '\n"}
[1.211999] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.212065] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.212131] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.212197] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:114:100: E501 line too long (106 > 99 characters)\n'}
[1.212264] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.212330] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.212396] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.212462] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:122:1: W293 blank line contains whitespace\n'}
[1.212536] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.212602] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.212668] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.212734] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:123:1: W293 blank line contains whitespace\n'}
[1.212801] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.212867] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.212934] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.213000] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:1: W293 blank line contains whitespace\n'}
[1.213080] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.213146] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.213261] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.213361] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:1: E303 too many blank lines (6)\n'}
[1.213431] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.213496] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.213579] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.213642] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:131:21: W292 no newline at end of file\n'}
[1.213707] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.213786] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.213851] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.213928] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.213992] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.214057] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.214121] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:6:25: W292 no newline at end of file\n'}
[1.214186] (turtle_brick) StdoutLine: {'line': b'        assert 5+6 == 20                        ^\n'}
[1.214251] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.214315] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.214381] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.214445] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.214510] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.214574] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.214639] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.214704] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.214768] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.214832] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.214897] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.214968] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.215046] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.215109] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.215172] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.215236] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.215374] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.215489] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.215595] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.215701] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.215802] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.215869] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.215935] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.216016] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.216084] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.216152] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.216220] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.216288] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.216356] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.216423] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.216499] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.216567] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.216634] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.216700] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.216768] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.216835] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.216903] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.216978] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.217040] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.217103] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.217164] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.217227] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.217290] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.217353] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.217415] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.217478] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.217560] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.217625] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.217688] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.217752] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.217815] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.217878] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.217953] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:11:1: E302 expected 2 blank lines, found 1\n'}
[1.218014] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.218075] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.218136] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.218196] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:22: E225 missing whitespace around operator\n'}
[1.218257] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.218318] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.218379] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.218439] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:14:51: E225 missing whitespace around operator\n'}
[1.218501] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.218563] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.218624] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.218685] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:1: W293 blank line contains whitespace\n'}
[1.218747] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.218808] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.218868] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.218929] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:16:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.218991] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.219052] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.219112] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.219172] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:18:100: E501 line too long (115 > 99 characters)\n'}
[1.219239] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.219301] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.219362] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.219421] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:18:105: E231 missing whitespace after ','\n"}
[1.219482] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.219542] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.219603] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.219662] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:19:37: E128 continuation line under-indented for visual indent\n'}
[1.219723] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.219794] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.219859] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.219920] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:19:92: E261 at least two spaces before inline comment\n'}
[1.219981] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.220042] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.220103] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.220163] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:19:92: E262 inline comment should start with '# '\n"}
[1.220232] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.220294] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.220356] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.220417] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:22:100: E501 line too long (100 > 99 characters)\n'}
[1.220489] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.220551] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.220613] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.220674] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:36:89: E231 missing whitespace after ','\n"}
[1.220736] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.220798] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.220860] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.220920] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:36:96: E231 missing whitespace after ','\n"}
[1.220982] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.221044] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.221105] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.221166] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:43:56: E231 missing whitespace after ','\n"}
[1.221227] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.221294] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.221356] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.221416] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:49:56: E231 missing whitespace after ','\n"}
[1.221478] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.221538] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.221616] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.221676] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:68:7: W292 no newline at end of file\n'}
[1.221737] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.221798] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.221858] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.221919] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.222007] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.222066] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.222126] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.222187] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.222247] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.222307] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.222367] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.222428] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.222488] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.222548] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.222608] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.222670] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.222731] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.222792] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.222852] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.222913] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.222974] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.223034] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.223095] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.223156] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.223217] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.223278] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.223338] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.223399] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.223461] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.223521] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.223580] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:40:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.223642] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.223703] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.223772] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.223837] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:40:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.223906] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.223967] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.224028] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.224088] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:40:70: E231 missing whitespace after ','\n"}
[1.224149] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.224211] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.224325] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.224427] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:1: W293 blank line contains whitespace\n'}
[1.224530] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.224606] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.224669] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.224730] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:44:7: W292 no newline at end of file\n'}
[1.224799] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.224861] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.224922] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.224984] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.225045] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.225106] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.225167] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.225229] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.225291] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.225351] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.225412] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.225474] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.225534] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.225612] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.225674] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.225737] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.225800] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.225862] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.225924] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.225988] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.226064] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.226128] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.226191] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.226257] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.226321] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.226385] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.226447] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.226511] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.226574] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.226636] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.226698] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:42:1: W293 blank line contains whitespace\n'}
[1.226766] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.226828] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.226891] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.226966] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:43:7: W292 no newline at end of file\n'}
[1.227030] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.227094] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.227157] (turtle_brick) StdoutLine: {'line': b'1     E128 continuation line under-indented for visual indent\n'}
[1.227221] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.227285] (turtle_brick) StdoutLine: {'line': b'28    E225 missing whitespace around operator\n'}
[1.227347] (turtle_brick) StdoutLine: {'line': b"81    E231 missing whitespace after ','\n"}
[1.227411] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.227474] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.227537] (turtle_brick) StdoutLine: {'line': b"3     E262 inline comment should start with '# '\n"}
[1.227599] (turtle_brick) StdoutLine: {'line': b"34    E265 block comment should start with '# '\n"}
[1.227662] (turtle_brick) StdoutLine: {'line': b'6     E302 expected 2 blank lines, found 1\n'}
[1.227724] (turtle_brick) StdoutLine: {'line': b'7     E303 too many blank lines (2)\n'}
[1.227798] (turtle_brick) StdoutLine: {'line': b'10    E501 line too long (115 > 99 characters)\n'}
[1.227864] (turtle_brick) StdoutLine: {'line': b"41    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.227928] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.228015] (turtle_brick) StdoutLine: {'line': b'22    W291 trailing whitespace\n'}
[1.228087] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.228159] (turtle_brick) StdoutLine: {'line': b'26    W293 blank line contains whitespace\n'}
[1.228233] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.228305] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.228377] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.228449] (turtle_brick) StdoutLine: {'line': b'275 errors\n'}
[1.228522] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.228594] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 177\n"}
[1.228667] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 42\n"}
[1.228740] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 56\n"}
[1.228813] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.228886] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.228970] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.229041] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.229111] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.229182] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.229253] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.229325] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.229395] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.229465] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.229534] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.229623] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.229693] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.229763] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.229834] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.229922] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.230007] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.230070] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.230140] (turtle_brick) StderrLine: {'line': b'\n'}
[1.230202] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.230265] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.230329] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.230392] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.230456] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.230521] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.230590] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.230655] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.230720] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.230785] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.230849] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.230913] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.230989] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.231051] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.231113] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.231175] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.231238] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.231300] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.231362] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.231425] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.231487] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.231549] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.231612] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.231675] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.231738] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.231815] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.231880] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.231958] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.232023] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.232088] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.232153] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.232225] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.232290] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.232367] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.232431] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.232495] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.232558] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.232622] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.232686] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.232750] (turtle_brick) StdoutLine: {'line': b'10 errors\n'}
[1.232814] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/src/build/turtle_brick/pytest.xml -\n'}
[1.232878] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.232942] (turtle_brick) StdoutLine: {'line': b'FAILED test/math_test.py::TestMath::test_math_sucsses - TypeError: TestMath.t...\n'}
[1.233006] (turtle_brick) StdoutLine: {'line': b'FAILED test/math_test.py::TestMath::test_math_fail - TypeError: TestMath.test...\n'}
[1.233070] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 275 code styl...\n'}
[1.233133] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.233197] (turtle_brick) StdoutLine: {'line': b'\x1b[31m=================== \x1b[31m\x1b[1m4 failed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.53s\x1b[0m\x1b[31m ===================\x1b[0m\n'}
[1.233264] (turtle_brick) CommandEnded: {'returncode': 1}
[1.233556] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.233584] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.233890] (-) EventReactorShutdown: {}
