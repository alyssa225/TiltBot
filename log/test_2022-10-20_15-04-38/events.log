[0.000000] (-) TimerEvent: {}
[0.000175] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000263] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000315] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.010506] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.099475] (-) TimerEvent: {}
[0.199752] (-) TimerEvent: {}
[0.251312] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.264695] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.271054] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.271580] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.271835] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.271996] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.272236] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.272506] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-2004 - Experimental\n'}
[0.272632] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.272788] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.272941] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.273092] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.273243] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.273394] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.273548] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.273686] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.273823] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.273962] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.274111] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.274245] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.274380] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.274529] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299906] (-) TimerEvent: {}
[0.327560] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.327850] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.396990] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.397218] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.397367] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.397506] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.399998] (-) TimerEvent: {}
[0.411730] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.412013] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.423123] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.15 sec\n'}
[0.423407] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.423569] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.423677] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.423812] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.423968] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.485439] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.485707] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.500079] (-) TimerEvent: {}
[0.545248] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.545525] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.550101] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.550278] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.550391] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.600185] (-) TimerEvent: {}
[0.629220] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.629374] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.629504] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.639241] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.640291] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.673182] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.673332] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.673412] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.683869] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.684036] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.692500] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.27 sec\n'}
[0.692962] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.693113] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.693259] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.693378] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.693490] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.15 sec*proc (1 test)\n'}
[0.693609] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.42 sec*proc (2 tests)\n'}
[0.693720] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.27 sec*proc (1 test)\n'}
[0.693831] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.693940] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.42 sec\n'}
[0.694049] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.694159] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.694269] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.702359] (-) TimerEvent: {}
[0.714400] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.714958] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.715367] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.718346] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.719125] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.719220] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.802490] (-) TimerEvent: {}
[0.877560] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.902578] (-) TimerEvent: {}
[0.947548] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.947856] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948021] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.948130] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.948450] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.986277] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.987249] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 70 code style errors / warnings:\x1b[0m\n'}
[0.989136] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:42: W291 trailing whitespace\x1b[0m\n'}
[0.989299] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:12: W291 trailing whitespace\x1b[0m\n'}
[0.989459] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.989618] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:4: W291 trailing whitespace\x1b[0m\n'}
[0.989763] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:24:69: W291 trailing whitespace\x1b[0m\n'}
[0.989906] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:30:82: W291 trailing whitespace\x1b[0m\n'}
[0.990050] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:41:33: W291 trailing whitespace\x1b[0m\n'}
[0.990193] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.990336] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.990483] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:95:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.990599] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:101:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.990712] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:118:100: E501 line too long (103 > 99 characters)\x1b[0m\n'}
[0.990824] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:118:104: W291 trailing whitespace\x1b[0m\n'}
[0.990935] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:121:24: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.991047] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:122:43: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.991160] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:122:100: E501 line too long (111 > 99 characters)\x1b[0m\n'}
[0.991272] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:137:21: W292 no newline at end of file\x1b[0m\n'}
[0.991380] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.991487] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.991651] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.991822] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.991974] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.992109] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.992223] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.992334] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.992445] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.992557] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.992668] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.992780] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.992899] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.993013] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.993125] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.993410] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.993527] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.993640] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.993751] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.993875] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.994028] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.994153] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.994276] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.994399] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.994534] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.994658] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.994781] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.994904] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.995027] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.995150] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.995273] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.995396] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.995539] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.995669] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.995799] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.995894] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.995969] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.996054] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.996126] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.996198] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.996271] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.996349] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.996422] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.996506] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.996575] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.996643] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.996711] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.996779] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.996847] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.996915] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.996983] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.997050] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.997118] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.997186] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.997254] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.997325] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997395] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:6:42: W291 trailing whitespace\n'}
[0.997463] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.997532] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.997600] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997669] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:7:12: W291 trailing whitespace\n'}
[0.997749] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.997819] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.997888] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997957] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:1: E302 expected 2 blank lines, found 1\n'}
[0.998026] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[0.998095] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.998166] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998236] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:4: W291 trailing whitespace\n'}
[0.998305] (turtle_brick) StdoutLine: {'line': b'    """ \n'}
[0.998375] (turtle_brick) StdoutLine: {'line': b'    Current state of the robot\n'}
[0.998490] (turtle_brick) StdoutLine: {'line': b'        WAITING: waiting for robot\n'}
[0.998565] (turtle_brick) StdoutLine: {'line': b'        TILT: tilt the platform\n'}
[0.998637] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.998709] (turtle_brick) StdoutLine: {'line': b'   ^\n'}
[0.998798] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998887] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:24:69: W291 trailing whitespace\n'}
[0.998962] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.999036] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[0.999109] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[0.999183] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[0.999256] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[0.999328] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[0.999400] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.999471] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[0.999543] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[0.999616] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[0.999689] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.999759] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[0.999845] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[0.999920] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[0.999991] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.000062] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.000132] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.000201] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000271] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:30:82: W291 trailing whitespace\n'}
[1.000342] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.000411] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.000496] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.000570] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.000642] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.000714] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.000786] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.000859] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.000932] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.001005] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.001077] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.001150] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.001223] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.001297] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.001371] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.001444] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.001517] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.001601] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.001682] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001756] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:41:33: W291 trailing whitespace\n'}
[1.001828] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.001953] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.002106] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002278] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:64:22: E225 missing whitespace around operator\n'}
[1.002408] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped, '/goal_pose', 10)\n"}
[1.002523] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.002649] (-) TimerEvent: {}
[1.002771] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002899] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:65:22: E225 missing whitespace around operator\n'}
[1.003022] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt, '/tilt', 10)\n"}
[1.003145] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.003266] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003388] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:95:100: E501 line too long (100 > 99 characters)\n'}
[1.003518] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.003633] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.003747] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003853] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:101:1: W293 blank line contains whitespace\n'}
[1.003928] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.003999] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.004067] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004136] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:118:100: E501 line too long (103 > 99 characters)\n'}
[1.004205] (turtle_brick) StdoutLine: {'line': b'            # calc time takes robot to move to x,y position from current position in max velocity speed \n'}
[1.004276] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.004346] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004415] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:118:104: W291 trailing whitespace\n'}
[1.004501] (turtle_brick) StdoutLine: {'line': b'            # calc time takes robot to move to x,y position from current position in max velocity speed \n'}
[1.004574] (turtle_brick) StdoutLine: {'line': b'                                                                                                       ^\n'}
[1.004646] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004717] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:121:24: E128 continuation line under-indented for visual indent\n'}
[1.004789] (turtle_brick) StdoutLine: {'line': b'                       + (abs(self.brick_pose.position.y - self.platformy) - 0.3)**2) / self.vmax\n'}
[1.004860] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.004932] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005004] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:122:43: E261 at least two spaces before inline comment\n'}
[1.005078] (turtle_brick) StdoutLine: {'line': b'            if timerobo + 1.0 <= timefall: # 1.0 is to give some time for message to be revieved and acted upon\n'}
[1.005151] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.005222] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005294] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:122:100: E501 line too long (111 > 99 characters)\n'}
[1.005365] (turtle_brick) StdoutLine: {'line': b'            if timerobo + 1.0 <= timefall: # 1.0 is to give some time for message to be revieved and acted upon\n'}
[1.005461] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.005545] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005614] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:137:21: W292 no newline at end of file\n'}
[1.005682] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.005751] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005818] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.005888] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.005957] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006025] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[1.006094] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.006162] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006230] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.006299] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.006368] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.006449] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006546] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.006619] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.006690] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.006760] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006830] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.006900] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.006970] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.007038] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007107] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.007177] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.007248] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.007502] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007705] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.007787] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.007876] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.007949] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008018] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.008088] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.008158] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.008226] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008294] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.008363] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.008444] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.008513] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008583] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.008653] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.008725] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.008796] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008866] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.008938] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.009020] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.009093] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009163] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.009234] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.009311] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009381] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.009453] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.009523] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.009639] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009743] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.009820] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.009894] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.009965] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010036] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.010108] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.010180] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.010250] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010320] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.010392] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.010481] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.010557] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.010629] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.010700] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.010770] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.010841] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.010912] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.010982] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.011054] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.011124] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.011197] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.011266] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.011335] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.011421] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.011504] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011571] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.011639] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.011705] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.011773] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.011855] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.011924] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.011990] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.012057] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.012126] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.012193] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.012260] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.012334] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.012400] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.012481] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.012549] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.012617] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012684] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.012753] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.012825] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.012894] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012962] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.013042] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.013137] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.013211] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013283] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.013354] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.013424] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.013494] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013564] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.013634] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.013703] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.013773] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013842] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.013925] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.014003] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.014073] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014142] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.014212] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.014283] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.014352] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014437] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.014546] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.014635] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.014715] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014792] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.014870] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.014947] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.015025] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015101] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.015179] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.015256] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.015342] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015419] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.015509] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.015576] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.015641] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015706] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.015771] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.015853] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.015922] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015987] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.016053] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.016118] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.016183] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016248] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.016314] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.016380] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.016459] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016530] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.016601] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.016673] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.016744] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016814] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.016886] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.016958] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.017028] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017100] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.017174] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.017245] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.017316] (turtle_brick) StderrLine: {'line': b'\n'}
[1.017386] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.017476] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.017553] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.017680] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017802] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.017885] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.017963] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.018042] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018118] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.018207] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.018284] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.018359] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018448] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.018546] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.018619] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.018692] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018763] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.018835] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.018907] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.018977] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019049] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.019121] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.019193] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.019264] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019335] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.019407] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.019491] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.019567] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019698] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.019830] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.019912] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.019983] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020052] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.020122] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.020192] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.020269] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.020340] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.020409] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.020477] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.020547] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020616] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.020685] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.020754] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.020823] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020892] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.020961] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.021031] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.021099] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021167] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.021236] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.021305] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.021374] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021458] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.021543] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.021619] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.021695] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021770] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.021847] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.021923] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.021998] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022073] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.022149] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.022225] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022300] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.022376] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.022472] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.022558] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022629] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.022699] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.022770] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.022840] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.022910] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.022982] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.023052] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.023122] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.023192] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023262] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.023333] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.023405] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.023489] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.023557] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.023625] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.023695] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.023763] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.023866] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023973] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.024104] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.024237] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.024369] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024501] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.024633] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.024765] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.024897] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025029] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.025163] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.025296] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025428] (turtle_brick) StdoutLine: {'line': b'2     E128 continuation line under-indented for visual indent\n'}
[1.025564] (turtle_brick) StdoutLine: {'line': b'4     E225 missing whitespace around operator\n'}
[1.025708] (turtle_brick) StdoutLine: {'line': b"7     E231 missing whitespace after ','\n"}
[1.025835] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.025951] (turtle_brick) StdoutLine: {'line': b'2     E261 at least two spaces before inline comment\n'}
[1.026081] (turtle_brick) StdoutLine: {'line': b"1     E262 inline comment should start with '# '\n"}
[1.026197] (turtle_brick) StdoutLine: {'line': b"1     E265 block comment should start with '# '\n"}
[1.026313] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.026443] (turtle_brick) StdoutLine: {'line': b'4     E302 expected 2 blank lines, found 0\n'}
[1.026578] (turtle_brick) StdoutLine: {'line': b'6     E501 line too long (115 > 99 characters)\n'}
[1.026702] (turtle_brick) StdoutLine: {'line': b"16    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.026826] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.026950] (turtle_brick) StdoutLine: {'line': b'12    W291 trailing whitespace\n'}
[1.027073] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.027196] (turtle_brick) StdoutLine: {'line': b'5     W293 blank line contains whitespace\n'}
[1.027532] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027711] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.027836] (turtle_brick) StdoutLine: {'line': b'70 errors\n'}
[1.027913] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027982] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 30\n"}
[1.028049] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 17\n"}
[1.028116] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 23\n"}
[1.028185] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028254] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.028321] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028400] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.028470] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.028540] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.028622] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.028694] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.028765] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.028835] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.028905] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.028975] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.029045] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.029115] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.029186] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.029258] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.029328] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.029403] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.029485] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.029554] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.029620] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.029687] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.029752] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.029825] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.029892] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.029960] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.030032] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.030097] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.030163] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.030228] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.030301] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.030367] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.030486] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.030615] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.030762] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.030916] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.031073] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.031225] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D208: Docstring is over-indented\n'}
[1.031362] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.031498] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.031632] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.031765] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.031917] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.032051] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.032188] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.032323] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.032465] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:12 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.032582] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:12 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.032698] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:22 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.032815] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:22 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.032930] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:22 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.033046] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.033164] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:14 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.033295] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:14 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.033459] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.033643] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.033826] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.034027] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.034204] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.034387] (turtle_brick) StdoutLine: {'line': b'17 errors\n'}
[1.034520] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.034653] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.034771] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 70 code style...\n'}
[1.034887] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.035004] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.44s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.071681] (turtle_brick) CommandEnded: {'returncode': 1}
[1.072404] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.072580] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.073181] (-) EventReactorShutdown: {}
