[0.000000] (-) TimerEvent: {}
[0.000680] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.001243] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.001302] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.010669] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.099998] (-) TimerEvent: {}
[0.200285] (-) TimerEvent: {}
[0.249083] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.262377] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.268748] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.269123] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.269349] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.269559] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.269716] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.269887] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-2005 - Experimental\n'}
[0.270068] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.270277] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.270424] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.270573] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.270735] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.270892] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.271049] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.271202] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.271351] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.271510] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.271656] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.271803] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.271949] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.272116] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.300380] (-) TimerEvent: {}
[0.325276] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.325527] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.388429] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.388743] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.388953] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.389099] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.396984] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.397230] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.400480] (-) TimerEvent: {}
[0.405921] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.14 sec\n'}
[0.406354] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.406549] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.406770] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.406985] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.407152] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.460234] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.460433] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.500563] (-) TimerEvent: {}
[0.527038] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.527406] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.532210] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.532513] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.532678] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.600668] (-) TimerEvent: {}
[0.601704] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.601964] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.602243] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.608657] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.609929] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.639761] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.640099] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.640320] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.652852] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.653198] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.661475] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.26 sec\n'}
[0.661914] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.662162] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.662374] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.662539] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.662729] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.14 sec*proc (1 test)\n'}
[0.662899] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.39 sec*proc (2 tests)\n'}
[0.663058] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.26 sec*proc (1 test)\n'}
[0.663220] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.663393] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.39 sec\n'}
[0.663551] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.663712] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.663809] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.684190] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.684489] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.684661] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.686807] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.687608] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.687714] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.700775] (-) TimerEvent: {}
[0.801140] (-) TimerEvent: {}
[0.805330] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.866894] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.867104] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.867234] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.867323] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.867416] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.901290] (-) TimerEvent: {}
[0.903057] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.904177] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 67 code style errors / warnings:\x1b[0m\n'}
[0.904342] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:13:4: W291 trailing whitespace\x1b[0m\n'}
[0.904973] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:69: W291 trailing whitespace\x1b[0m\n'}
[0.905234] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:31:82: W291 trailing whitespace\x1b[0m\n'}
[0.905386] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:42:33: W291 trailing whitespace\x1b[0m\n'}
[0.905508] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.905574] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.905636] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:96:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.905698] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.905759] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:100: E501 line too long (103 > 99 characters)\x1b[0m\n'}
[0.905822] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:104: W291 trailing whitespace\x1b[0m\n'}
[0.905907] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:122:24: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.905987] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:123:43: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.906049] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:123:100: E501 line too long (111 > 99 characters)\x1b[0m\n'}
[0.906112] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:21: W292 no newline at end of file\x1b[0m\n'}
[0.906174] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.906236] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.906299] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.906362] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.906424] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.906487] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.906557] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.906624] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.906688] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.906751] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.906815] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.906878] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.906942] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.907006] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.907069] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.907138] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.907201] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.907263] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.907337] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.907401] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.907464] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.907527] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.907590] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.907654] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.907716] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.907779] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.907841] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.907904] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.907966] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.908030] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.908093] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.908156] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.908218] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.908281] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.908345] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.908414] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.908484] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.908547] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.908609] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.908672] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.908739] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.908802] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.908864] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.908931] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.908995] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.909057] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.909119] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.909237] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.909309] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.909373] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.909464] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.909549] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.909612] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.909675] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.909738] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.909804] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.909902] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:13:4: W291 trailing whitespace\n'}
[0.909986] (turtle_brick) StdoutLine: {'line': b'    """ \n'}
[0.910047] (turtle_brick) StdoutLine: {'line': b'    Current state of the robot\n'}
[0.910108] (turtle_brick) StdoutLine: {'line': b'        WAITING: waiting for robot\n'}
[0.910170] (turtle_brick) StdoutLine: {'line': b'        TILT: tilt the platform\n'}
[0.910232] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.910294] (turtle_brick) StdoutLine: {'line': b'   ^\n'}
[0.910355] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.910416] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:69: W291 trailing whitespace\n'}
[0.910478] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.910540] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[0.910603] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[0.910664] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[0.910739] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[0.910801] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[0.910862] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.910923] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[0.910985] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[0.911053] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[0.911113] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.911173] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[0.911234] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[0.911295] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[0.911357] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.911418] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.911480] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.911544] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.911664] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:31:82: W291 trailing whitespace\n'}
[0.911769] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.911869] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[0.911977] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[0.912081] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[0.912185] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[0.912288] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[0.912391] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.912483] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[0.912549] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[0.912613] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[0.912676] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.912738] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[0.912814] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[0.912881] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[0.912950] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.913017] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.913083] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[0.913150] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.913216] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.913281] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:42:33: W291 trailing whitespace\n'}
[0.913347] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.913411] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.913502] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.913570] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:65:22: E225 missing whitespace around operator\n'}
[0.913637] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped, '/goal_pose', 10)\n"}
[0.913702] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.913768] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.913848] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:66:22: E225 missing whitespace around operator\n'}
[0.913917] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt, '/tilt', 10)\n"}
[0.913984] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.914052] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.914122] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:96:100: E501 line too long (100 > 99 characters)\n'}
[0.914328] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[0.914411] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.914482] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.914550] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:1: W293 blank line contains whitespace\n'}
[0.914618] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.914722] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.914908] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.915045] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:100: E501 line too long (103 > 99 characters)\n'}
[0.915176] (turtle_brick) StdoutLine: {'line': b'            # calc time takes robot to move to x,y position from current position in max velocity speed \n'}
[0.915245] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.915312] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.915378] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:104: W291 trailing whitespace\n'}
[0.915444] (turtle_brick) StdoutLine: {'line': b'            # calc time takes robot to move to x,y position from current position in max velocity speed \n'}
[0.915510] (turtle_brick) StdoutLine: {'line': b'                                                                                                       ^\n'}
[0.915577] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.915643] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:122:24: E128 continuation line under-indented for visual indent\n'}
[0.915720] (turtle_brick) StdoutLine: {'line': b'                       + (abs(self.brick_pose.position.y - self.platformy) - 0.3)**2) / self.vmax\n'}
[0.915784] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.915849] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.915913] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:123:43: E261 at least two spaces before inline comment\n'}
[0.915979] (turtle_brick) StdoutLine: {'line': b'            if timerobo + 1.0 <= timefall: # 1.0 is to give some time for message to be revieved and acted upon\n'}
[0.916043] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[0.916106] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.916171] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:123:100: E501 line too long (111 > 99 characters)\n'}
[0.916235] (turtle_brick) StdoutLine: {'line': b'            if timerobo + 1.0 <= timefall: # 1.0 is to give some time for message to be revieved and acted upon\n'}
[0.916299] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.916363] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.916427] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:21: W292 no newline at end of file\n'}
[0.916491] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[0.916555] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.916618] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[0.916683] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.916746] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.916810] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[0.916873] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[0.916937] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.916999] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[0.917063] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[0.917126] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.917190] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.917253] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[0.917316] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[0.917391] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.917483] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.917591] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[0.917708] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[0.917810] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.917928] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.918010] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[0.918079] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[0.918177] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.918290] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.918365] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[0.918433] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[0.918500] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.918565] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.918630] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[0.918697] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[0.918763] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.918829] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.918894] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[0.918960] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[0.919037] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.919100] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.919163] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[0.919227] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[0.919292] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.919354] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.919418] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[0.919481] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[0.919546] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.919610] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.919673] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[0.919738] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[0.919802] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.919866] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[0.919932] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[0.919996] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.920062] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.920125] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[0.920190] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[0.920262] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[0.920327] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.920391] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[0.920456] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[0.920520] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.920583] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.920649] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[0.920719] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.920784] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[0.920848] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[0.920913] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[0.920977] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[0.921041] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[0.921105] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[0.921168] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[0.921232] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[0.921295] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[0.921359] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[0.921423] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.921503] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.921579] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[0.921646] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.921711] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[0.921776] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.921842] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[0.921906] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[0.921970] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[0.922035] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[0.922098] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[0.922162] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[0.922226] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[0.922293] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[0.922358] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[0.922423] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[0.922487] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.922553] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.922617] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[0.922681] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.922745] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[0.922810] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[0.922889] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.922955] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.923020] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[0.923087] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[0.923153] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.923219] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.923287] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[0.923354] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[0.923421] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[0.923488] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.923554] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[0.923629] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.923696] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.923762] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.923828] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[0.923907] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[0.923970] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.924032] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.924094] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[0.924156] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[0.924220] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.924283] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.924344] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[0.924407] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[0.924486] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.924550] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.924619] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[0.924693] (turtle_brick) StderrLine: {'line': b'\n'}
[0.924753] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[0.924812] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[0.924889] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[0.924958] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.925020] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[0.925081] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[0.925143] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.925211] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.925273] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[0.925335] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[0.925397] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[0.925477] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.925541] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[0.925604] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[0.925666] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[0.925727] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.925803] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[0.925871] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[0.925939] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.926014] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.926082] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[0.926151] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[0.926220] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[0.926289] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.926357] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[0.926426] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[0.926495] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[0.926564] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.926631] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[0.926700] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[0.926768] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.926848] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.926913] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[0.926978] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[0.927043] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.927107] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.927172] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[0.927237] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[0.927302] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.927373] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[0.927439] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[0.927529] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.927679] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.927845] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[0.928014] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[0.928177] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.928312] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.928467] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[0.928620] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[0.928767] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.928924] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.929092] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[0.929288] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[0.929448] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.929590] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.929731] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[0.929881] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[0.930005] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.930101] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.930197] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[0.930309] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[0.930414] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.930521] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.930638] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[0.930744] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[0.930846] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.930950] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.931055] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[0.931159] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.931261] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[0.931364] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[0.931467] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.931572] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.931679] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.931783] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.931903] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[0.932022] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[0.932115] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.932184] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.932249] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[0.932322] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[0.932388] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.932452] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.932515] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[0.932580] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[0.932653] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.932717] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.932781] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[0.932862] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[0.932932] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[0.933003] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.933072] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[0.933144] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.933214] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.933285] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.933355] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[0.933465] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[0.933543] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.933616] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[0.933689] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[0.933761] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.933833] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.933904] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[0.933977] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.934059] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[0.934131] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[0.934201] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[0.934344] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.934500] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.934593] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.934669] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.934743] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[0.934816] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.934888] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[0.934962] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[0.935034] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[0.935106] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.935177] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.935248] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[0.935320] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.935392] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[0.935465] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[0.935537] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.935608] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.935679] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[0.935751] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.935822] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.935904] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.935968] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[0.936031] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[0.936095] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.936158] (turtle_brick) StdoutLine: {'line': b'2     E128 continuation line under-indented for visual indent\n'}
[0.936222] (turtle_brick) StdoutLine: {'line': b'4     E225 missing whitespace around operator\n'}
[0.936285] (turtle_brick) StdoutLine: {'line': b"7     E231 missing whitespace after ','\n"}
[0.936348] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[0.936412] (turtle_brick) StdoutLine: {'line': b'2     E261 at least two spaces before inline comment\n'}
[0.936476] (turtle_brick) StdoutLine: {'line': b"1     E262 inline comment should start with '# '\n"}
[0.936540] (turtle_brick) StdoutLine: {'line': b"1     E265 block comment should start with '# '\n"}
[0.936604] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[0.936668] (turtle_brick) StdoutLine: {'line': b'3     E302 expected 2 blank lines, found 0\n'}
[0.936731] (turtle_brick) StdoutLine: {'line': b'6     E501 line too long (115 > 99 characters)\n'}
[0.936795] (turtle_brick) StdoutLine: {'line': b"16    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[0.936859] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[0.936922] (turtle_brick) StdoutLine: {'line': b'10    W291 trailing whitespace\n'}
[0.936996] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[0.937061] (turtle_brick) StdoutLine: {'line': b'5     W293 blank line contains whitespace\n'}
[0.937125] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.937189] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[0.937255] (turtle_brick) StdoutLine: {'line': b'67 errors\n'}
[0.937320] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.937386] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 29\n"}
[0.937468] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 17\n"}
[0.937551] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 21\n"}
[0.937617] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.937683] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[0.937749] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.937814] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[0.937879] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[0.937944] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[0.938009] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[0.938075] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[0.938152] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[0.938216] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[0.938280] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[0.938344] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[0.938407] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[0.938471] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[0.938535] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[0.938598] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[0.938661] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[0.938726] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.938790] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[0.938861] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[0.938926] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[0.938990] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[0.939053] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.939116] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.939178] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[0.939241] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[0.939303] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[0.939366] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[0.939428] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[0.939491] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[0.939553] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[0.939615] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[0.939678] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[0.939740] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[0.939802] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[0.939864] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[0.939935] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.940001] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D208: Docstring is over-indented\n'}
[0.940064] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[0.940138] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[0.940203] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[0.940266] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.940330] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[0.940393] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:13 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[0.940457] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:13 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.940521] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:13 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[0.940585] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:13 in public class `State`: D400: First line should end with a period (not 't')\n"}
[0.940648] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:13 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[0.940713] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:23 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.940777] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:23 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[0.940840] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:23 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[0.940904] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[0.940967] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:14 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[0.941032] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:14 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.941095] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[0.941158] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[0.941221] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[0.941284] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[0.941347] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[0.941410] (turtle_brick) StdoutLine: {'line': b'17 errors\n'}
[0.941482] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[0.941547] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[0.941610] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 67 code style...\n'}
[0.941673] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[0.941737] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.38s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[0.981139] (turtle_brick) CommandEnded: {'returncode': 1}
[0.982036] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[0.982100] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[0.982640] (-) EventReactorShutdown: {}
