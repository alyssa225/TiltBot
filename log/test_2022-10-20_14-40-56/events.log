[0.000000] (-) TimerEvent: {}
[0.000689] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000806] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.001412] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.010265] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.099977] (-) TimerEvent: {}
[0.200269] (-) TimerEvent: {}
[0.250345] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.263132] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.270021] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.270261] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.270381] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.270488] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.270887] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.271013] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1940 - Experimental\n'}
[0.271131] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.271230] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.271571] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.271713] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.271836] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.271976] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.272099] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.272220] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.272341] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.272461] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.272581] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.272703] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.272801] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.272894] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.300352] (-) TimerEvent: {}
[0.326097] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.326297] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.389011] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.389218] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.389396] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.389579] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.397435] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.397659] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.400438] (-) TimerEvent: {}
[0.406486] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.406824] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.406993] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.407153] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.407311] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.407481] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.461424] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.461619] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.500564] (-) TimerEvent: {}
[0.526617] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.527032] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.531310] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.531587] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.531762] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.538435] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.538594] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.538679] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.550328] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.550620] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.559369] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.15 sec\n'}
[0.559773] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.559929] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.560005] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.560073] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.560137] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.560210] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.29 sec*proc (2 tests)\n'}
[0.560278] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.15 sec*proc (1 test)\n'}
[0.560344] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.560409] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.29 sec\n'}
[0.560474] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.560538] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.560602] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.577169] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.577371] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.577503] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.578860] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.579344] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.579389] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.600686] (-) TimerEvent: {}
[0.608142] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.608325] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.608520] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.615768] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.617079] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.700789] (-) TimerEvent: {}
[0.801124] (-) TimerEvent: {}
[0.815112] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.877384] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.877690] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.877792] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.877875] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.877962] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.901201] (-) TimerEvent: {}
[0.911757] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.912470] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 210 code style errors / warnings:\x1b[0m\n'}
[0.912782] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:284:19: W292 no newline at end of file\x1b[0m\n'}
[0.913085] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.913348] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.913628] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[0.913873] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.914134] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.914403] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.914688] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[0.916126] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[0.917413] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.919434] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.919559] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[0.919636] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[0.919735] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[0.919806] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[0.919888] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[0.919993] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[0.920068] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[0.920181] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[0.920302] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[0.920419] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.920502] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[0.920576] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.920647] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.920737] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.920821] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.920889] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.920957] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.921033] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.921101] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.921169] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.921251] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.921320] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.921388] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.921456] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.921524] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.921592] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.921659] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.921727] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[0.921803] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.921865] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.921928] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[0.921990] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[0.922052] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.922114] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.922176] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.922238] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.922300] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.922362] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.922428] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.922492] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.922554] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.922616] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[0.922678] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[0.922740] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.922809] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.922871] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[0.922933] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.922995] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.923058] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.923125] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.923188] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.923251] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.923313] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.923376] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.923446] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.923509] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.923572] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.923633] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.923695] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.923757] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.923819] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.923895] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.923962] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[0.924025] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[0.924099] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[0.924160] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.924222] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[0.924283] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.924344] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[0.924406] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.924473] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.924534] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[0.924596] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[0.924672] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.924811] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[0.924895] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.924995] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[0.925182] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[0.925296] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.925366] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.925429] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.925492] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.925555] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[0.925617] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.925679] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[0.925741] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[0.925802] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.925862] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.925932] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.925994] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.926055] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.926115] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.926176] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.926236] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.926297] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.926357] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.926423] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.926483] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.926543] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.926603] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.926663] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.926722] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.926794] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.926850] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.926907] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.926964] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.927022] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.927080] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.927152] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.927209] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.927267] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.927324] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.927382] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.927439] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.927497] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.927554] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.927652] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.927812] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.928009] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.928206] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.928349] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.928484] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.928625] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.928841] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.928966] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.929101] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.929234] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.929364] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.929482] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.929611] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.929994] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.930098] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.930193] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.930312] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.930429] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.930533] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.930637] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.930754] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.930858] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.930963] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.931069] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.931176] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.931282] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.931387] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.931494] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.931604] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.931713] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.931822] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.931951] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.932064] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.932179] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.932260] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.932326] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.932392] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.932457] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.932534] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.932600] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.932665] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.932777] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.932846] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.932915] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.932986] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.933054] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.933122] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.933190] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.933258] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.933337] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.933418] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.933487] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.933555] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.933622] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.933697] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.933783] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.933854] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.933926] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.933997] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.934069] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.934147] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.934219] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.934290] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.934363] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.934434] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.934506] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.934577] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.934648] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.934719] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.934800] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.934858] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.934917] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.934976] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.935035] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.935094] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.935153] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.935234] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.935310] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.935369] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.935439] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.935500] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.935561] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.935621] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.935693] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.935753] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.935812] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:284:19: W292 no newline at end of file\n'}
[0.935901] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown                  ^\n'}
[0.935980] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.936047] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[0.936150] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.936271] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.936355] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.936424] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[0.936493] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.936561] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.936628] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.936695] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[0.936785] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[0.936852] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.936920] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.936987] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[0.937055] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[0.937121] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.937187] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.937253] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[0.937328] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.937397] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.937475] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.937539] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[0.937603] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.937667] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.937730] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.937794] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[0.937858] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[0.937924] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.937988] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.938053] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[0.938145] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.938322] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.938421] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.938483] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[0.938544] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.938603] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.938662] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.938720] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[0.938778] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[0.938836] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.938895] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.938953] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[0.939014] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.939072] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.939130] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.939188] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.939246] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.939312] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.939371] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.939428] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.939486] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.939543] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.939601] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.939671] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.939731] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.939790] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.939849] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.939956] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.940016] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.940074] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.940132] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.940190] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.940248] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.940306] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[0.940363] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.940420] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[0.940478] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.940536] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.940593] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.940651] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.940729] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.940788] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.940846] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.940905] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.940963] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.941022] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.941080] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.941139] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.941197] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.941255] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.941312] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.941371] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.941429] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.941488] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.941547] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.941606] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.941665] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.941744] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[0.941822] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.941888] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[0.941969] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.942036] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.942102] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.942168] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.942234] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.942299] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.942366] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.942433] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.942505] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.942573] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.942639] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.942718] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.942781] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.942845] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.942908] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.942972] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.943036] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.943100] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.943163] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.943226] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.943290] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.943353] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[0.943416] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.943480] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[0.943544] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.943607] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.943669] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.943746] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.943808] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.943884] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.943953] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.944017] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.944079] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.944156] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.944258] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.944355] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.944421] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.944484] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.944547] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.944618] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.944681] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.944767] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.944830] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.944893] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.944955] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.945016] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.945078] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.945140] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[0.945202] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.945263] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.945325] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.945386] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.945448] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.945510] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.945572] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.945633] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.945695] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.945769] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.945829] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.945890] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.945950] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.946010] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.946070] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.946130] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.946190] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.946250] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.946312] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.946372] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.946433] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.946493] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[0.946553] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.946614] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[0.946674] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.946748] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.946811] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.946873] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.946935] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.946998] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.947060] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.947122] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.947184] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.947247] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.947318] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.947381] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.947449] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.947511] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.947573] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.947635] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.947697] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.947759] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.947833] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.947912] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.947977] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.948039] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[0.948103] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948165] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[0.948227] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.948289] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.948351] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.948414] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.948476] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.948538] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.948600] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.948661] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.948762] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.948831] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.948899] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.948969] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.949088] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.949166] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.949237] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.949312] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.949384] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.949458] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.949530] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.949603] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.949677] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.949748] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[0.949823] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949895] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[0.949966] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.950036] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.950107] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.950177] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.950261] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.950331] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.950399] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.950467] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.950536] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.950605] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.950675] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.950761] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.950824] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.950886] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.950949] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.951013] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.951076] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.951138] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.951201] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.951262] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.951324] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.951388] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[0.951451] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951512] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[0.951574] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.951636] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.951699] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.951761] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.951822] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.951894] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.951959] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.952021] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.952083] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.952144] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.952270] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.952379] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.952484] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.952575] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.952642] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.952741] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.952807] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.952869] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.952932] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.952995] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.953057] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.953127] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.953190] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953252] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[0.953316] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.953378] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.953441] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953504] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[0.953567] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.953630] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.953692] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953766] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[0.953827] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.953887] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.953947] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954006] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[0.954066] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.954126] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.954186] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954245] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[0.954306] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[0.954367] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.954439] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954500] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[0.954561] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[0.954621] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[0.954681] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954756] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[0.954818] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[0.954881] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.954943] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955007] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[0.955069] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[0.955131] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[0.955194] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955256] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[0.955318] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[0.955380] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[0.955450] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955511] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[0.955573] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[0.955635] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.955696] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955764] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[0.955825] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[0.955904] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[0.955970] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956031] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[0.956092] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[0.956153] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.956214] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956275] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[0.956335] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[0.956397] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.956458] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956518] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[0.956579] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[0.956640] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[0.956802] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956908] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[0.956976] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[0.957104] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[0.957229] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957329] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[0.957391] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[0.957450] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.957510] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957576] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[0.957634] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[0.957707] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.957767] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957846] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[0.957917] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[0.958047] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[0.958176] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958285] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[0.958350] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[0.958412] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[0.958474] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958535] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[0.958596] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.958665] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.958742] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958808] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[0.958876] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[0.958942] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.959008] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959074] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[0.959141] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[0.959207] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.959274] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959339] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[0.959405] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[0.959471] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.959537] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959602] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[0.959668] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[0.959745] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.959805] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959893] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[0.959964] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[0.960026] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.960088] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960157] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[0.960283] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[0.960401] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.960507] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960589] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[0.960650] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[0.960730] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.960792] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960852] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[0.960912] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.960972] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.961031] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961091] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[0.961169] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[0.961230] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.961290] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961350] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[0.961410] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.961472] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[0.961532] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961591] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[0.961652] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.961712] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[0.961790] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961851] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[0.961919] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.961981] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.962042] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962104] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[0.962166] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.962229] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[0.962290] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962351] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[0.962413] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.962474] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[0.962535] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962598] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[0.962660] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.962722] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.962784] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962848] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[0.962910] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.962973] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.963042] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963104] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[0.963166] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.963228] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[0.963290] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963352] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[0.963414] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[0.963476] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.963538] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963600] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[0.963664] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.963725] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.963797] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963853] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[0.963961] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[0.964020] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.964076] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964133] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[0.964190] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.964247] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.964303] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964359] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[0.964416] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[0.964473] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.964529] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964584] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[0.964649] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[0.964743] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.964812] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964878] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[0.964945] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[0.965011] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.965078] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965144] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[0.965209] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[0.965275] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.965342] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965407] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[0.965473] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.965539] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.965604] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965670] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[0.965749] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[0.965813] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.965877] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965940] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[0.966005] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.966069] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.966133] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966197] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[0.966262] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[0.966325] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.966389] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966453] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[0.966517] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[0.966581] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.966645] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966708] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[0.966783] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[0.966842] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.966902] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966961] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[0.967021] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[0.967081] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.967141] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967200] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[0.967260] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[0.967319] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.967378] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967437] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[0.967496] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[0.967574] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[0.967639] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967698] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[0.967757] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[0.967817] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[0.967888] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967952] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[0.968012] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[0.968072] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.968132] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968191] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[0.968250] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[0.968310] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.968370] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968429] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[0.968488] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[0.968547] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.968605] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968664] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[0.968762] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[0.968825] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.968888] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968958] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[0.969022] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[0.969085] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[0.969147] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969210] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[0.969272] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.969334] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.969396] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969458] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[0.969521] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[0.969583] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.969647] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969721] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[0.969780] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[0.969839] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[0.969899] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969957] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[0.970016] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[0.970075] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[0.970133] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970191] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[0.970251] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[0.970309] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[0.970374] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970433] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[0.970493] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[0.970553] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[0.970612] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970671] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[0.970731] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[0.970790] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.970849] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970908] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[0.970967] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[0.971026] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[0.971085] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971144] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[0.971204] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[0.971263] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.971323] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971382] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[0.971441] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[0.971501] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.971560] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971619] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[0.971680] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[0.971739] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.971799] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971858] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[0.971925] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.971986] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.972046] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972106] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[0.972166] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.972227] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.972286] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972346] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[0.972406] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[0.972466] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.972526] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972586] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[0.972646] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[0.972741] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[0.972807] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972871] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[0.972936] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.973000] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.973064] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973128] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[0.973205] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973269] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.973332] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973395] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[0.973459] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[0.973524] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.973588] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973651] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[0.973729] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[0.973791] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.973852] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973914] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[0.973978] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[0.974041] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.974103] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974165] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[0.974229] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[0.974291] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.974353] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974415] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[0.974491] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.974559] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.974621] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974681] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[0.974755] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.974815] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.974874] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974932] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[0.974991] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.975051] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.975110] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975169] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[0.975228] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.975287] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.975346] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975405] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[0.975464] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[0.975523] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.975581] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975639] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[0.975698] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[0.975758] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.975816] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975893] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[0.975956] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[0.976015] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.976073] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976131] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[0.976190] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.976255] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[0.976354] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[0.976458] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[0.976526] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[0.976588] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[0.976657] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.976781] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[0.976917] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[0.976990] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[0.977057] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.977120] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[0.977185] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[0.977255] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[0.977405] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.977522] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.977596] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.977664] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977748] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[0.977820] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.977891] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[0.977962] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[0.978034] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[0.978104] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[0.978174] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[0.978246] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.978317] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[0.978387] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[0.978457] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[0.978528] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.978598] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[0.978669] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[0.978739] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[0.978819] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.978885] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.978950] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[0.979016] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.979081] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979146] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[0.979211] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.979277] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.979341] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979406] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[0.979488] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.979588] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.979715] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979839] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[0.979975] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.980100] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.980225] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980349] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[0.980473] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.980597] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.980765] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980883] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[0.981001] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[0.981117] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.981234] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981350] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[0.981467] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[0.981584] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.981700] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981832] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[0.981953] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[0.982072] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.982191] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982318] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[0.982440] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.982561] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.982681] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982815] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[0.982939] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.983063] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.983186] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983310] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[0.983433] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.983557] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[0.983680] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983803] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[0.983939] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[0.984078] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.984202] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984348] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[0.984469] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[0.984575] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[0.984680] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984834] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[0.984956] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[0.985071] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.985184] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985308] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[0.985418] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[0.985528] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[0.985638] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985746] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[0.985856] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[0.985965] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.986074] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986183] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[0.986292] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.986401] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.986511] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986619] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[0.986728] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.986851] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.986969] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987088] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[0.987192] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.987296] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[0.987399] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987502] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[0.987604] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[0.987708] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.987812] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987927] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[0.988033] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[0.988135] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[0.988237] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988340] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[0.988442] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[0.988544] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.988647] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988769] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[0.988872] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.988975] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.989077] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989179] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[0.989281] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.989392] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.989495] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989597] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[0.989708] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[0.989805] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.989916] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990019] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[0.990121] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.990223] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.990324] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990426] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[0.990533] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[0.990636] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.990738] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990841] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[0.990944] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.991044] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.991159] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991261] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[0.991362] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.991474] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.991575] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991693] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[0.991798] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.991916] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.992023] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992128] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[0.992234] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[0.992343] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.992450] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992553] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[0.992620] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.992684] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.992830] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992929] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[0.993007] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[0.993131] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.993227] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993295] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[0.993360] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[0.993425] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.993488] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993551] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[0.993615] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[0.993679] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.993743] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993806] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[0.993881] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[0.993954] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[0.994015] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994075] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[0.994136] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[0.994210] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.994271] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994331] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[0.994392] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[0.994454] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.994515] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994576] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[0.994637] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[0.994700] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.995199] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995680] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[0.996016] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.996394] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.996509] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996619] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[0.996743] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.996902] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[0.997013] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997123] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[0.997251] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.997385] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[0.997554] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997691] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[0.997815] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.997913] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.998012] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998109] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[0.998207] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.998304] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.998401] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998497] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[0.998595] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.998691] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.998788] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998893] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[0.998990] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.999087] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.999184] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999280] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[0.999383] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[0.999480] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.999577] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999673] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[0.999771] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[0.999900] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000022] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.000120] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.000217] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000395] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[1.000526] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.000650] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000785] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.000916] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.001027] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.001137] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001243] (-) TimerEvent: {}
[1.001365] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.001508] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.001644] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.001792] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001903] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.002014] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.002125] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.002235] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002345] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.002456] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.002567] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.002677] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002787] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.002899] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.003009] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.003119] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003229] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.003341] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.003451] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.003562] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003672] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.003783] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.003933] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.004045] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004155] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.004266] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.004377] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.004487] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004597] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.004708] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.004869] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.004980] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005090] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.005201] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.005311] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005421] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.005532] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.005642] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.005752] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005862] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.005972] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.006082] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.006193] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006302] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.006413] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.006523] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.006633] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006754] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.006863] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.006963] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.007063] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.007162] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.007262] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.007361] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.007460] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.007559] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.007659] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.007758] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.007892] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.008020] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.008118] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.008216] (turtle_brick) StderrLine: {'line': b'\n'}
[1.008347] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.008446] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.008547] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.008647] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.008764] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.008897] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.008996] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009095] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.009194] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.009299] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.009398] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.009502] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.009601] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.009700] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.009799] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.009898] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.009997] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.010096] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.010195] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.010294] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.010392] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.010490] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.010589] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010687] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.010786] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.010885] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.010983] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011081] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.011180] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.011279] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.011378] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011495] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.011632] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.011771] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.011890] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012004] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.012113] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.012223] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.012332] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012440] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.012551] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.012661] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.012770] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012879] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.012988] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.013098] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.013208] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013316] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.013431] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.013541] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.013658] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013767] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.013876] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.013986] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.014095] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014204] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.014313] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.014423] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.014532] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014641] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.014750] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.014859] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.014969] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015078] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.015187] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.015297] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.015406] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015515] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.015624] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.015739] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.015849] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015968] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.016078] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.016195] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.016356] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016460] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.016584] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.016709] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.016839] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016965] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.017090] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.017214] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.017359] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017485] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.017610] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.017736] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017860] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.017993] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.018118] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.018242] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018366] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.018490] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.018615] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.018739] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018863] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.018988] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.019113] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.019236] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019360] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.019485] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.019609] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.019733] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019856] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.019993] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.020118] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.020243] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020367] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.020492] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.020617] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.020740] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020865] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.020990] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.021114] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.021238] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021363] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.021487] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.021611] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.021736] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.021861] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.021985] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.022109] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.022234] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022358] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.022483] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.022608] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.022732] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022856] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.022981] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.023107] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.023231] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023355] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.023489] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.023614] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.023738] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023868] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.023998] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.024122] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.024248] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024411] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.024537] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.024661] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.024786] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024910] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.025034] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.025157] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025280] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.025405] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.025529] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.025654] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025778] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.025902] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.026026] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.026150] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.026275] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.026399] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.026523] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.026645] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.026782] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026892] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.027002] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.027112] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.027222] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.027333] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.027450] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.027562] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.027672] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.027783] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027928] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.028043] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.028155] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.028267] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028377] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.028496] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.028608] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.028720] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028865] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.028977] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.029089] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029199] (turtle_brick) StdoutLine: {'line': b'1     E128 continuation line under-indented for visual indent\n'}
[1.029316] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.029426] (turtle_brick) StdoutLine: {'line': b'22    E225 missing whitespace around operator\n'}
[1.029542] (turtle_brick) StdoutLine: {'line': b"47    E231 missing whitespace after ','\n"}
[1.029652] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.029763] (turtle_brick) StdoutLine: {'line': b'2     E261 at least two spaces before inline comment\n'}
[1.029873] (turtle_brick) StdoutLine: {'line': b"2     E262 inline comment should start with '# '\n"}
[1.029984] (turtle_brick) StdoutLine: {'line': b"24    E265 block comment should start with '# '\n"}
[1.030112] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.030238] (turtle_brick) StdoutLine: {'line': b'6     E302 expected 2 blank lines, found 0\n'}
[1.030349] (turtle_brick) StdoutLine: {'line': b'5     E303 too many blank lines (3)\n'}
[1.030461] (turtle_brick) StdoutLine: {'line': b'8     E501 line too long (115 > 99 characters)\n'}
[1.030573] (turtle_brick) StdoutLine: {'line': b"27    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.030685] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.030797] (turtle_brick) StdoutLine: {'line': b'33    W291 trailing whitespace\n'}
[1.030909] (turtle_brick) StdoutLine: {'line': b'7     W292 no newline at end of file\n'}
[1.031019] (turtle_brick) StdoutLine: {'line': b'19    W293 blank line contains whitespace\n'}
[1.031164] (turtle_brick) StdoutLine: {'line': b'1     W391 blank line at end of file\n'}
[1.031274] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031384] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.031494] (turtle_brick) StdoutLine: {'line': b'210 errors\n'}
[1.031615] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031739] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 122\n"}
[1.031835] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 28\n"}
[1.031989] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 60\n"}
[1.032085] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032180] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.032327] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032479] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.032609] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.032749] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.032885] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.032993] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.033101] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.033208] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.033316] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.033424] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.033543] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.033643] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.033742] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.033842] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.033941] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.034042] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.034142] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.034243] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.034343] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.034451] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.034551] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.034651] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.034750] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.034868] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.034992] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.035106] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.035205] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.035305] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.035404] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.035503] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.035602] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.035701] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.035800] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.035932] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.036052] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.036152] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D208: Docstring is over-indented\n'}
[1.036252] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.036351] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.036451] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.036556] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.036657] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.036783] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.036908] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.037011] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.037113] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.037287] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.037434] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.037574] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.037773] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.037893] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.038013] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.038127] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.038252] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.038361] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.038471] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.038580] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.038690] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.038799] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.038907] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.039016] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.039125] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.039233] (turtle_brick) StdoutLine: {'line': b'21 errors\n'}
[1.039342] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.039451] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.039560] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 210 code styl...\n'}
[1.039670] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.039779] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.39s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.039901] (turtle_brick) CommandEnded: {'returncode': 1}
[1.040416] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.040457] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.040934] (-) EventReactorShutdown: {}
