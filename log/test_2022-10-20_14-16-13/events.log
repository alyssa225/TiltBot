[0.000000] (-) TimerEvent: {}
[0.000144] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000236] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000265] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.009546] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.098946] (-) TimerEvent: {}
[0.199298] (-) TimerEvent: {}
[0.254226] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.266803] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.272810] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.273211] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.273434] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.273604] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.273768] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.273968] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1916 - Experimental\n'}
[0.274135] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.274275] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.274419] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.274558] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.274707] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.274840] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.274973] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.275101] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.275229] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.275362] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.275506] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.275647] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.275788] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.275958] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299392] (-) TimerEvent: {}
[0.327572] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.327817] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.389243] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.389512] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.389692] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.389869] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.397947] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.398264] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.399467] (-) TimerEvent: {}
[0.405725] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.406064] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.406307] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.406415] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.406526] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.406649] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.462763] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.463039] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.499564] (-) TimerEvent: {}
[0.527907] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.528226] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.532837] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.533135] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.533298] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.599656] (-) TimerEvent: {}
[0.607020] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.607217] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.607413] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.614559] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.615470] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.646972] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.647267] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.647421] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.657121] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.657495] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.667159] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.26 sec\n'}
[0.667729] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.667929] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.668063] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.668188] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.668343] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.668494] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.39 sec*proc (2 tests)\n'}
[0.668631] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.26 sec*proc (1 test)\n'}
[0.668773] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.668911] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.39 sec\n'}
[0.669049] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.669185] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.669335] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.700845] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.701065] (-) TimerEvent: {}
[0.701206] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.701414] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.701679] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.702330] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.702428] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.801184] (-) TimerEvent: {}
[0.835925] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.898595] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.898800] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.898916] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.899005] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.899117] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.901279] (-) TimerEvent: {}
[0.932444] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.932981] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 283 code style errors / warnings:\x1b[0m\n'}
[0.933540] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:15:25: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.933800] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:16:25: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.934156] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\x1b[0m\n"}
[0.934545] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.934808] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\x1b[0m\n"}
[0.935105] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.935463] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\x1b[0m\n"}
[0.935745] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:12:42: W291 trailing whitespace\x1b[0m\n'}
[0.936032] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\x1b[0m\n"}
[0.936279] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.936528] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.937709] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.942076] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:39:53: W291 trailing whitespace\x1b[0m\n'}
[0.942254] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.942400] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:50:33: W291 trailing whitespace\x1b[0m\n'}
[0.942564] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.942703] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.942827] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.942959] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.943084] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.943207] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.943330] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.943453] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.943575] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.943698] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.943820] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.943942] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.944064] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.944193] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.944315] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.944460] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.944602] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.944731] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\x1b[0m\n"}
[0.944861] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.944990] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.945164] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.945297] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.945468] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.945597] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.945722] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.945849] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.945975] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:192:26: W291 trailing whitespace\x1b[0m\n'}
[0.946113] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\x1b[0m\n"}
[0.946233] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\x1b[0m\n"}
[0.946352] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\x1b[0m\n"}
[0.946480] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\x1b[0m\n"}
[0.946596] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.946725] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.946844] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.946970] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\x1b[0m\n"}
[0.947095] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.947214] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.947323] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.947448] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\x1b[0m\n"}
[0.947576] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\x1b[0m\n'}
[0.947687] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.947833] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\x1b[0m\n'}
[0.947949] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.948061] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.948174] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.948287] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\x1b[0m\n"}
[0.948435] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.948575] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.948681] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.948787] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.948892] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.948998] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:272:30: W291 trailing whitespace\x1b[0m\n'}
[0.949104] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\x1b[0m\n'}
[0.949209] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.949315] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\x1b[0m\n"}
[0.949451] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.949553] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\x1b[0m\n'}
[0.949653] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:294:19: W291 trailing whitespace\x1b[0m\n'}
[0.949752] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:295:1: W391 blank line at end of file\x1b[0m\n'}
[0.949857] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.949956] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.950060] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[0.950133] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.950213] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.950273] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.950333] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[0.950392] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[0.950475] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.950558] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.950617] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[0.950676] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[0.950734] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[0.950792] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[0.950850] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[0.950909] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[0.950967] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[0.951025] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[0.951084] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[0.951142] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.951200] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[0.951260] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.951319] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.951379] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.951436] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.951494] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.951552] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.951609] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.951667] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.951725] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.951789] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.951849] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.951907] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.951966] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.952024] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.952101] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.952180] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.952244] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[0.952307] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.952370] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.952434] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[0.952507] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[0.952565] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.952623] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.952680] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.952738] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.952796] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.952854] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.952912] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.952971] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.953193] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.953257] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[0.953316] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[0.953416] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.953497] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.953554] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[0.953610] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.953666] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.953722] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.953778] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.953833] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.953889] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.953945] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.954011] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.954067] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.954124] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.954180] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.954237] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.954308] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.954367] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.954432] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.954492] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.954551] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[0.954611] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[0.954670] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[0.954729] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.954789] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[0.954848] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.954925] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[0.955000] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.955099] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.955219] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[0.955311] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[0.955401] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.955478] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[0.955540] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.955600] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[0.955659] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[0.955718] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.955785] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.955845] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.955905] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.955965] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[0.956036] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.956098] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[0.956158] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[0.956220] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.956294] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.956359] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.956421] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.956482] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.956544] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.956606] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.956667] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.956729] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.956790] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.956851] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.956913] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.956975] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.957041] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.957104] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.957166] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.957227] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.957301] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.957360] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.957509] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.957611] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.957712] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.957813] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.957942] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.958025] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.958087] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.958149] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.958211] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.958272] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.958348] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.958406] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.958464] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.958522] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.958581] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.958639] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.958696] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.958754] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.958813] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.958871] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.958928] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.958984] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.959041] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.959098] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.959165] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.959222] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.959278] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.959356] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.959414] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.959472] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.959530] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.959587] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.959645] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.959703] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.959761] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.959819] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.959881] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.959963] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.960040] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.960098] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.960156] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.960213] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.960270] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.960365] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.960428] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.960504] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.960564] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.960624] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.960684] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.960744] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.960803] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.960862] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.960921] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.960982] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.961042] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.961108] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.961168] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.961228] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.961287] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.961359] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.961469] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.961530] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.961589] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.961649] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.961708] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.961766] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.961825] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.961883] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.961952] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.962011] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.962069] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.962126] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.962185] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.962242] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.962300] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.962357] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.962420] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.962479] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.962537] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.962595] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.962660] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.962717] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.962774] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.962830] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.962887] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.962963] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.963064] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.963170] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.963299] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.963406] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.963470] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.963531] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.963591] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.963651] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.963711] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.963772] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.963834] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963894] (turtle_brick) StdoutLine: {'line': b'./setup.py:15:25: E128 continuation line under-indented for visual indent\n'}
[0.963954] (turtle_brick) StdoutLine: {'line': b"                        'config/turtle_urdf.rviz', 'launch/run_turtle.launch.py',\n"}
[0.964014] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.964072] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964132] (turtle_brick) StdoutLine: {'line': b'./setup.py:16:25: E128 continuation line under-indented for visual indent\n'}
[0.964192] (turtle_brick) StdoutLine: {'line': b"                        'launch/turtle_arena.launch.py']),\n"}
[0.964252] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.964312] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964393] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\n"}
[0.964467] (turtle_brick) StdoutLine: {'line': b'from xmlrpc.client import Boolean\n'}
[0.964527] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.964587] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964647] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[0.964710] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[0.964770] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.964830] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964975] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\n"}
[0.965133] (turtle_brick) StdoutLine: {'line': b'from math import pi\n'}
[0.965292] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.965401] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965475] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[0.965543] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.965609] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.965677] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965743] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\n"}
[0.965809] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt\n'}
[0.965874] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.965939] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966004] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:12:42: W291 trailing whitespace\n'}
[0.966069] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.966186] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.966261] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966341] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\n"}
[0.966407] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import MarkerArray\n'}
[0.966473] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.966537] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966600] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\n"}
[0.966681] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.966746] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.966809] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966873] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\n'}
[0.966936] (turtle_brick) StdoutLine: {'line': b'class BState(Enum):\n'}
[0.967000] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.967063] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967126] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\n'}
[0.967194] (turtle_brick) StdoutLine: {'line': b'class Arena(Node):\n'}
[0.967258] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.967337] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967404] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:39:53: W291 trailing whitespace\n'}
[0.967472] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.967539] (turtle_brick) StdoutLine: {'line': b'    Creates the arena and places brick when called in command line.\n'}
[0.967607] (turtle_brick) StdoutLine: {'line': b'    Will drop the robot when called in command line.\n'}
[0.967675] (turtle_brick) StdoutLine: {'line': b'        -if robot is underneath the brick, the brick will land on the robot\n'}
[0.967743] (turtle_brick) StdoutLine: {'line': b'        -if nothing is under brick, brick will land on ground\n'}
[0.967811] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.967879] (turtle_brick) StdoutLine: {'line': b'        -robot_sub: continuous robot position\n'}
[0.967947] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.968014] (turtle_brick) StdoutLine: {'line': b'        -marker_pub: publishes walls and brick\n'}
[0.968081] (turtle_brick) StdoutLine: {'line': b'        -drop_pub: sends placement, drop coordinates  \n'}
[0.968148] (turtle_brick) StdoutLine: {'line': b'        -platform_pub: sends true if platform is under brick\n'}
[0.968216] (turtle_brick) StdoutLine: {'line': b'    SERVICES:\n'}
[0.968293] (turtle_brick) StdoutLine: {'line': b'        -Place: place brick at x, y, z location\n'}
[0.968424] (turtle_brick) StdoutLine: {'line': b'        -Drop: Empty drops brick\n'}
[0.968526] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.968651] (turtle_brick) StdoutLine: {'line': b'        -world_brick: connects brick to world\n'}
[0.968752] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.968871] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.968978] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.969084] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969190] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\n"}
[0.969297] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.969445] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.969568] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969688] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:50:33: W291 trailing whitespace\n'}
[0.969808] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.969928] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.970049] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970192] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\n"}
[0.970306] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.970419] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.970533] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970646] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\n"}
[0.970759] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.970873] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.970986] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971120] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\n"}
[0.971247] (turtle_brick) StdoutLine: {'line': b'        #setting state of brick\n'}
[0.971356] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.971466] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971589] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\n"}
[0.971709] (turtle_brick) StdoutLine: {'line': b'        #set up subscribers\n'}
[0.971816] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.971924] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972029] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\n"}
[0.972138] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.972244] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.972373] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972472] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\n"}
[0.972573] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.972674] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.972775] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972874] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\n"}
[0.972974] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.973075] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[0.973213] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973332] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\n"}
[0.973511] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[0.973644] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.973778] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973929] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\n"}
[0.974009] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.974071] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.974130] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974189] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\n"}
[0.974248] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.974320] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.974380] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974439] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\n"}
[0.974499] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.974559] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.974619] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974678] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\n"}
[0.974739] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.974798] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.974858] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974916] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\n"}
[0.974976] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.975035] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.975094] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975153] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\n"}
[0.975218] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.975293] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.975358] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975423] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\n'}
[0.975488] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.975554] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.975620] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975685] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\n'}
[0.975751] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.975817] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.975881] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975947] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\n"}
[0.976012] (turtle_brick) StdoutLine: {'line': b'        #initialize services\n'}
[0.976078] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.976143] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976209] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\n"}
[0.976275] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.976353] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[0.976419] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976484] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\n"}
[0.976550] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.976615] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.976680] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976751] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\n"}
[0.976817] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.976883] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.976948] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977013] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\n"}
[0.977078] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.977144] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.977209] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977359] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\n'}
[0.977507] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.977622] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.977735] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977848] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\n"}
[0.977961] (turtle_brick) StdoutLine: {'line': b'        #creating brick marker\n'}
[0.978075] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.978188] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978300] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\n"}
[0.978423] (turtle_brick) StdoutLine: {'line': b'        #creating wall markers\n'}
[0.978530] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.978636] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978743] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\n'}
[0.978850] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.978957] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.979059] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979212] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\n"}
[0.979352] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.979452] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.979548] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979643] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:192:26: W291 trailing whitespace\n'}
[0.979738] (turtle_brick) StdoutLine: {'line': b'        self.brickz = 0.0 \n'}
[0.979833] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[0.979929] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980023] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\n"}
[0.980118] (turtle_brick) StdoutLine: {'line': b'        self.wall = self.create_timer(0.5,self.wall_callback)\n'}
[0.980213] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.980308] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980442] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\n"}
[0.980537] (turtle_brick) StdoutLine: {'line': b'    def place_callback(self, request,response):\n'}
[0.980632] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.980727] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980822] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\n"}
[0.980917] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.981013] (turtle_brick) StdoutLine: {'line': b'                                  ^\n'}
[0.981108] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981202] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\n"}
[0.981309] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.981448] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.981560] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981652] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\n'}
[0.981759] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.981854] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.981948] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982043] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\n"}
[0.982138] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.982233] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.982327] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982421] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\n'}
[0.982517] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[0.982612] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.982707] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982801] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\n"}
[0.982896] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.982992] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.983087] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983181] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\n"}
[0.983305] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.983375] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.983440] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983501] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\n"}
[0.983570] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.983632] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.983693] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983753] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\n"}
[0.983815] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.983876] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.983936] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983995] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\n"}
[0.984056] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self, request,response):\n'}
[0.984115] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[0.984175] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984235] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\n'}
[0.984310] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[0.984413] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.984560] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984756] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\n"}
[0.984898] (turtle_brick) StdoutLine: {'line': b'        #publishing wall markers\n'}
[0.985035] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.985141] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985247] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\n'}
[0.985353] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[0.985440] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.985515] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985580] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\n'}
[0.985644] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.985708] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.985771] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985834] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\n'}
[0.985897] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.985960] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.986022] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986097] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\n'}
[0.986160] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.986221] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.986296] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986359] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\n"}
[0.986422] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.986485] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.986548] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986611] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\n"}
[0.986675] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.986752] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.986816] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986879] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\n"}
[0.986942] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.987004] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.987067] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987129] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\n'}
[0.987228] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.987324] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.987422] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987523] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\n"}
[0.987593] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.987659] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.987723] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987786] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\n"}
[0.987850] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.987914] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.987977] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988040] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:272:30: W291 trailing whitespace\n'}
[0.988104] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[0.988167] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[0.988230] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988306] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\n'}
[0.988365] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[0.988427] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.988488] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988550] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\n'}
[0.988613] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.988675] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.988745] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988806] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\n"}
[0.988869] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.988931] (turtle_brick) StdoutLine: {'line': b'                                                                 ^\n'}
[0.988992] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989053] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\n'}
[0.989114] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.989175] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.989236] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989297] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\n'}
[0.989374] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[0.989455] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.989518] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989580] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:294:19: W291 trailing whitespace\n'}
[0.989643] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.989706] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.989769] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989831] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:295:1: W391 blank line at end of file\n'}
[0.989894] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989957] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.990019] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990082] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[0.990153] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.990218] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.990281] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990344] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[0.990408] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.990472] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.990535] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990597] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[0.990660] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[0.990724] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.990787] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990850] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[0.990914] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[0.990977] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.991040] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991105] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[0.991168] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.991232] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.991295] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991370] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[0.991432] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.991494] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.991556] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991617] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[0.991687] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[0.991748] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.991809] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991869] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[0.991931] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.991991] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.992051] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992112] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[0.992173] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.992234] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.992294] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992357] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[0.992414] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[0.992472] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.992532] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992590] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[0.992650] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.992711] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.992771] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.992832] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.992893] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.992954] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.993015] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.993075] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.993136] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.993197] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.993257] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.993318] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.993389] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.993459] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.993521] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.993583] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.993645] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.993707] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.993769] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.993843] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.993906] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.993967] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[0.994030] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994091] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[0.994153] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.994215] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.994277] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.994339] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.994406] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.994467] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.994528] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.994590] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.994651] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.994712] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.994775] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.994836] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.994898] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.994960] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.995021] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.995083] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.995140] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.995212] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.995314] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.995428] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.995499] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.995563] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[0.995628] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995692] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[0.995756] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.995821] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.995888] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.995965] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.996027] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.996089] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.996151] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.996212] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.996273] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.996335] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.996409] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.996469] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.996530] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.996589] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.996649] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.996710] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.996769] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.996847] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.996923] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.996987] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.997048] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.997171] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[0.997328] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997437] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[0.997507] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.997573] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.997662] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.997753] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.997823] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.997892] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.997958] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.998026] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.998095] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.998161] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.998228] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.998295] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.998362] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.998428] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.998495] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.998562] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.998630] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.998697] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.998764] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.998830] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.998896] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.998962] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.999028] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999092] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[0.999158] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.999223] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.999289] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.999367] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.999428] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.999489] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.999551] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.999612] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.999673] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.999736] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.999798] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.999861] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.999923] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.999984] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.000046] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.000129] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.000192] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.000254] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.000350] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.000490] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.000563] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.000676] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.000812] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000925] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[1.001032] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.001147] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.001255] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.001386] (-) TimerEvent: {}
[1.001491] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.001572] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.001640] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.001705] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.001770] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.001834] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.001897] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.001960] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.002024] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.002086] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.002153] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.002219] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.002300] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.002363] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.002425] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.002487] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.002549] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.002611] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.002673] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.002736] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002798] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[1.002861] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.002922] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.002984] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.003046] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.003108] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.003183] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.003259] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.003379] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.003476] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.003555] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.003620] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.003685] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.003750] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.003813] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.003876] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.003940] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.004016] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.004077] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.004138] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.004299] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.004501] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.004711] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.004785] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004852] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[1.004919] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.004986] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.005054] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.005121] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.005187] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.005266] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.005339] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.005418] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.005492] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.005549] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.005604] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.005660] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.005715] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.005771] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.005827] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.005883] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.005938] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.005994] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.006050] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.006105] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.006160] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.006215] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[1.006272] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006327] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[1.006383] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.006439] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.006494] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.006558] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.006622] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.006680] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.006736] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.006792] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.006848] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.006915] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.006971] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.007029] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.007084] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.007140] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.007195] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.007251] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.007328] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.007395] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.007465] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.007533] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.007600] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.007667] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.007734] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007801] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[1.007869] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.007936] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.008004] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008070] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[1.008137] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.008204] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.008270] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008346] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[1.008408] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.008469] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.008529] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008591] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[1.008653] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.008715] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.008776] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008838] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[1.008900] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.008963] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.009025] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009087] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[1.009148] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.009210] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.009278] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009352] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[1.009433] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.009497] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.009559] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009620] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[1.009681] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.009741] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.009802] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009863] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[1.009923] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.009984] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.010045] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010105] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[1.010166] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.010227] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.010302] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010365] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[1.010430] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.010495] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.010559] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010623] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[1.010688] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.010752] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.010817] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010881] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[1.010946] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.011010] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.011074] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011138] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[1.011202] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.011347] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[1.011418] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011482] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[1.011545] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.011608] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[1.011670] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011733] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[1.011801] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.011864] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.011926] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011988] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[1.012050] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.012112] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.012174] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012248] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[1.012327] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.012407] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.012474] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012540] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[1.012609] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[1.012689] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.012758] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012825] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[1.012890] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.012955] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.013021] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013084] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[1.013151] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.013216] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.013294] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013356] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[1.013438] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.013501] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.013563] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013626] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[1.013688] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[1.013750] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.013812] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013874] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[1.013936] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[1.013998] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.014059] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014121] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[1.014183] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[1.014246] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.014320] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014378] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[1.014437] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[1.014495] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.014553] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014611] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[1.014669] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[1.014736] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.014794] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014852] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[1.014911] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.014969] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.015027] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015085] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[1.015143] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[1.015202] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.015273] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015333] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[1.015392] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.015454] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[1.015514] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015575] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[1.015634] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.015695] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.015770] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015851] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[1.015915] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.015979] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.016041] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016102] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[1.016163] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.016225] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[1.016294] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016356] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[1.016417] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.016478] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[1.016538] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016599] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[1.016661] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.016723] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.016784] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016845] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[1.016907] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.016969] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.017030] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017092] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[1.017153] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.017220] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.017282] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017343] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[1.017424] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.017489] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.017551] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017612] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[1.017674] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.017736] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.017797] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017859] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[1.017922] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[1.017983] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.018044] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018106] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[1.018168] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.018231] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.018293] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018371] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[1.018436] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.018500] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.018563] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018636] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[1.018693] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.018750] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.018806] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018862] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[1.018919] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.018976] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.019033] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019089] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[1.019156] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.019232] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.019351] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019518] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[1.019633] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.019740] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.019835] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019899] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[1.019959] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.020019] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.020078] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020137] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[1.020195] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.020254] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.020326] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020404] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.020481] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.020537] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.020600] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020657] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[1.020714] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.020770] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.020827] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020883] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[1.020940] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.020997] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.021055] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021111] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[1.021168] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.021225] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.021311] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021476] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[1.021558] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.021653] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.021746] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021838] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[1.021901] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.021964] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.022026] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022088] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[1.022150] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.022213] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.022288] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022362] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[1.022423] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.022491] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.022554] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022615] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[1.022677] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.022738] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.022799] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022859] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[1.022920] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.022981] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.023042] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023102] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[1.023163] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.023224] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.023285] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023359] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[1.023420] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.023481] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.023550] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023611] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[1.023673] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.023923] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.024211] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024833] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[1.025076] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.025476] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.025541] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025599] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[1.025657] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.025714] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.025770] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025826] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[1.025883] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.025939] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.025995] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026050] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[1.026106] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.026162] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.026217] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026273] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[1.026329] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.026385] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.026441] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026496] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[1.026552] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.026607] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.026662] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026717] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[1.026773] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.026828] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.026883] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026938] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[1.026993] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.027048] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.027103] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027158] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[1.027213] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.027266] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.027334] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027441] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[1.027563] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.027629] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.027685] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027741] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[1.027797] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.027853] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.027908] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027964] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[1.028020] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.028075] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.028130] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028183] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[1.028240] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.028295] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.028384] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028453] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[1.028548] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.028617] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.028687] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028759] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[1.028818] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.028875] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.028932] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028989] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[1.029048] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029104] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.029162] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029218] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.029276] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.029334] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.029430] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029512] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.029580] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.029640] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.029698] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029755] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.029815] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.029873] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.029931] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029988] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.030047] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.030105] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.030162] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030220] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.030280] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.030338] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.030396] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030455] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.030514] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.030572] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.030635] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030693] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.030752] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.030810] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.030869] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030927] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.030984] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.031042] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.031100] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031158] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.031216] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.031274] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.031331] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031388] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.031446] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.031503] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.031620] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031748] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[1.031895] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.032039] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.032179] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032314] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[1.032493] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.032594] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.032693] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.032756] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.032817] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.032877] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.032936] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.032995] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.033054] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.033138] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.033209] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.033278] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.033361] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.033441] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.033507] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.033570] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.033633] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.033697] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033760] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[1.033824] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.033888] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.033952] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.034015] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.034079] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.034151] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.034214] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.034277] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.034339] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.034402] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.034466] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.034529] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.034591] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.034653] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.034715] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.034777] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.034838] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.034900] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.034961] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035023] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[1.035085] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.035146] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.035207] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035268] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[1.035329] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.035391] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.035469] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035581] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[1.035684] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.035755] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.035819] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035883] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[1.035947] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.036011] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.036074] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036138] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[1.036201] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.036264] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.036338] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036467] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[1.036596] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.036720] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.036791] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036887] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[1.036952] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.037015] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.037077] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037139] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[1.037200] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.037262] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.037323] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037408] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[1.037480] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.037545] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.037608] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037672] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[1.037735] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.037798] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.037861] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037923] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[1.037986] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.038049] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.038111] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038174] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[1.038237] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.038299] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.038374] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038430] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[1.038485] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.038541] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.038596] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038652] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[1.038707] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.038762] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.038817] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038872] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.038927] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.038983] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.039040] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039096] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[1.039152] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.039208] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.039262] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039318] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[1.039374] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.039429] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.039484] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039540] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[1.039594] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.039650] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.039711] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039767] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[1.039821] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.039877] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.039931] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039987] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[1.040043] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.040098] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.040154] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040209] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.040264] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.040319] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.040399] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040476] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.040531] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.040592] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.040649] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040705] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.040761] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.040816] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.040872] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040927] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.040983] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.041039] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.041093] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041148] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.041203] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.041259] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041313] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041368] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.041462] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.041532] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.041587] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041642] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.041707] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.041763] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041817] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041872] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.041927] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.041981] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.042035] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042090] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.042145] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.042200] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.042255] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042310] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.042373] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.042428] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.042484] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042538] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.042593] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.042648] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.042702] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042757] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.042812] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.042868] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.042922] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042977] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.043031] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.043086] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.043141] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043195] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.043250] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.043318] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.043395] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043530] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.043621] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.043766] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.043926] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044102] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.044210] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.044319] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.044463] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044591] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.044729] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.044860] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.044975] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045099] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.045170] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.045240] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.045307] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045374] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.045469] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.045529] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.045588] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045647] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.045713] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.045772] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.045831] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045890] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.045949] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.046008] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.046070] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046165] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.046262] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.046363] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.046465] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046574] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.046685] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.046794] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.046930] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047039] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.047181] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.047341] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.047408] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047468] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.047530] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.047590] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.047649] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047708] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.047768] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.047828] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.047890] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047951] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.048013] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.048088] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048145] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.048203] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.048260] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048317] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[1.048434] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.048528] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048590] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.048649] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.048707] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.048764] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048820] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.048876] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.048933] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.048989] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049045] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.049101] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.049157] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.049213] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049270] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.049340] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.049444] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.049514] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049579] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.049645] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.049728] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.049810] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049865] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.049922] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.049987] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.050043] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050098] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.050154] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.050235] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.050316] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050386] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.050437] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.050488] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.050539] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050589] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.050640] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.050692] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.050744] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050794] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.050845] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.050895] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050945] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.050996] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.051047] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.051098] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051148] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.051199] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.051250] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.051301] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051366] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.051436] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.051530] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.051608] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051680] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.051756] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.051843] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.051932] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.052003] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.052151] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.052280] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.052379] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.052452] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.052527] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.052586] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.052645] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.052704] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.052762] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.052820] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.052886] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052945] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.053004] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.053063] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.053148] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.053219] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.053313] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.053384] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.053457] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.053520] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.053583] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.053647] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.053710] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.053773] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.053834] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.053896] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.053958] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054019] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.054082] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.054144] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.054206] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054267] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.054329] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.054391] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.054452] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054514] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.054576] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.054639] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.054701] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054763] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.054826] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.054887] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.054949] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055011] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.055074] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.055142] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.055205] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055267] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.055330] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.055393] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.055456] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055518] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.055580] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.055643] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.055706] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055767] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.055830] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.055903] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.055965] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056027] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.056089] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.056152] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.056215] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056277] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.056339] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.056402] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.056463] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056524] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.056586] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.056647] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.056709] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056770] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.056833] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.056894] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.056956] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057017] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.057079] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.057141] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.057208] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057276] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.057338] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.057414] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.057481] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057542] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.057605] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.057666] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.057727] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057788] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.057850] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.057912] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057973] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.058035] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.058097] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.058159] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058220] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.058282] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.058353] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.058407] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058461] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.058516] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.058570] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.058624] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058678] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.058732] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.058786] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.058840] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058894] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.058948] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.059003] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.059057] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059111] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.059164] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.059218] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.059272] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059324] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.059378] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.059451] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.059564] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059671] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.059734] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.059790] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.059846] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.059907] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.059961] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.060015] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.060070] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060124] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.060178] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.060232] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.060286] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060359] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.060420] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.060488] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.060542] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060596] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.060651] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.060705] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.060758] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060813] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.060867] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.060921] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.060987] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061042] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.061097] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.061151] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.061205] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061260] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.061314] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.061369] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061475] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.061531] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.061586] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.061640] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061694] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.061749] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.061804] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.061858] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.061912] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.061967] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.062021] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.062075] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.062135] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062190] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.062243] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.062296] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.062350] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.062404] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.062462] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.062515] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.062569] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.062623] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062676] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.062730] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.062784] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.062838] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062892] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.062946] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.062999] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.063053] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063106] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.063160] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.063214] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063267] (turtle_brick) StdoutLine: {'line': b'3     E128 continuation line under-indented for visual indent\n'}
[1.063321] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.063388] (turtle_brick) StdoutLine: {'line': b'27    E225 missing whitespace around operator\n'}
[1.063438] (turtle_brick) StdoutLine: {'line': b"77    E231 missing whitespace after ','\n"}
[1.063488] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.063538] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.063588] (turtle_brick) StdoutLine: {'line': b"3     E262 inline comment should start with '# '\n"}
[1.063638] (turtle_brick) StdoutLine: {'line': b"34    E265 block comment should start with '# '\n"}
[1.063805] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.064005] (turtle_brick) StdoutLine: {'line': b'8     E302 expected 2 blank lines, found 0\n'}
[1.064090] (turtle_brick) StdoutLine: {'line': b'7     E303 too many blank lines (2)\n'}
[1.064152] (turtle_brick) StdoutLine: {'line': b'9     E501 line too long (115 > 99 characters)\n'}
[1.064211] (turtle_brick) StdoutLine: {'line': b"33    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.064271] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.064331] (turtle_brick) StdoutLine: {'line': b'39    W291 trailing whitespace\n'}
[1.064389] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.064476] (turtle_brick) StdoutLine: {'line': b'26    W293 blank line contains whitespace\n'}
[1.064533] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.064589] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064646] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.064703] (turtle_brick) StdoutLine: {'line': b'283 errors\n'}
[1.064760] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064815] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 176\n"}
[1.064872] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 34\n"}
[1.064928] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 73\n"}
[1.064984] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065040] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.065108] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065162] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.065215] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.065269] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.065323] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.065400] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.065488] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.065543] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.065603] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.065657] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.065711] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.065765] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.065820] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.065874] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.065928] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.065983] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.066039] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.066093] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.066147] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.066203] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.066257] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.066311] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.066365] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.066419] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.066472] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.066526] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.066579] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.066632] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.066685] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.066738] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.066802] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.066891] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.066995] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.067098] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.067202] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.067305] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.067431] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.067610] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.067753] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.067864] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.067960] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.068057] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.068158] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.068254] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.068389] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.068525] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.068661] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.068822] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.068954] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.069070] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.069186] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.069301] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.069430] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.069547] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.069632] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.069718] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.069802] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.069887] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.069971] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.070056] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.070140] (turtle_brick) StdoutLine: {'line': b'20 errors\n'}
[1.070224] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.070321] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.070404] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 283 code styl...\n'}
[1.070486] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.070569] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.41s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.070653] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.070751] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.070833] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.070914] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.070995] (turtle_brick) StderrLine: {'line': b'\n'}
[1.071076] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.071163] (turtle_brick) CommandEnded: {'returncode': 1}
[1.071525] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.071554] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.071913] (-) EventReactorShutdown: {}
