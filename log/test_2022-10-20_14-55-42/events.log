[0.000000] (-) TimerEvent: {}
[0.000989] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.001053] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.001086] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.011339] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.099500] (-) TimerEvent: {}
[0.199855] (-) TimerEvent: {}
[0.254826] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.267324] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.274652] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.274921] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.275113] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.275449] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.275616] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.275759] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1955 - Experimental\n'}
[0.275925] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.276205] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.276367] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.276524] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.276650] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.276749] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.276879] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.277011] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.277152] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.277288] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.277406] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.277536] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.277669] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.277817] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299926] (-) TimerEvent: {}
[0.333620] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.333817] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.394208] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.394407] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.394499] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.394615] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.400018] (-) TimerEvent: {}
[0.402235] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.402547] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.410137] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.410630] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.410830] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.411021] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.411174] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.411263] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.466354] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.466574] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.500122] (-) TimerEvent: {}
[0.537978] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.538194] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.542366] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.542613] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.542769] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.600231] (-) TimerEvent: {}
[0.642736] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.643017] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.643276] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.647606] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.647843] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.647962] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.656056] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.657668] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.659307] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.659533] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.673442] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.26 sec\n'}
[0.673844] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.674039] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.674201] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.674361] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.674511] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.674678] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.40 sec*proc (2 tests)\n'}
[0.674820] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.26 sec*proc (1 test)\n'}
[0.674953] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.675088] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.40 sec\n'}
[0.675225] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.675357] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.675490] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.693150] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.693369] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.693485] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.695016] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.695378] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.695418] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.700356] (-) TimerEvent: {}
[0.800617] (-) TimerEvent: {}
[0.864867] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.900739] (-) TimerEvent: {}
[0.923316] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.923845] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.923961] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.924055] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.924136] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.960945] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.962857] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 124 code style errors / warnings:\x1b[0m\n'}
[0.964282] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:113:31: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.964782] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:31: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.964951] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:54: E202 whitespace before ')'\x1b[0m\n"}
[0.965145] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:158:68: W291 trailing whitespace\x1b[0m\n'}
[0.965303] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:68: W291 trailing whitespace\x1b[0m\n'}
[0.965479] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:56: W291 trailing whitespace\x1b[0m\n'}
[0.965599] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:182:80: E202 whitespace before ')'\x1b[0m\n"}
[0.965719] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:188:60: W291 trailing whitespace\x1b[0m\n'}
[0.965839] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:198:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.965960] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:200:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.966081] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:202:19: W291 trailing whitespace\x1b[0m\n'}
[0.966200] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.966320] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.966441] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.966562] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.966682] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.966803] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.966931] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.967055] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.967179] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.967301] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.967415] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.967525] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.967635] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.967757] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.967837] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.967905] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.967980] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.968047] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.968113] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.968346] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.968416] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.968496] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.968561] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.968625] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.968689] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.968753] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.968816] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.968879] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.968942] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.969005] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.969068] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.969131] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.969195] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.969259] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.969322] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.969385] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.969448] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.969511] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.969579] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.969652] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.969716] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.969779] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.969842] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.969905] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.969976] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.970038] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.970101] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.970163] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.970226] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.970298] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.970377] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.970442] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.970507] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.970573] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.970638] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.970704] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.970770] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.970835] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.970898] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.970964] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.971031] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.971096] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.971162] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.971228] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.971294] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.971373] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.971440] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.971505] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.971571] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.971636] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.971702] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.971793] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.971861] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.971929] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.971994] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.972059] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.972124] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.972189] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.972253] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.972318] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.972382] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.972447] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.972511] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.972576] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.972641] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.972707] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.972771] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.972834] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.972898] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.972970] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.973034] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.973110] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.973170] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.973231] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.973292] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.973352] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.973419] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.973480] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.973540] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.973601] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.973662] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.973723] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.973784] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.973845] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.973906] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.973967] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.974028] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.974101] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.974163] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.974224] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.974285] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.974346] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.974407] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.974468] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.974529] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.974592] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974655] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:113:31: E128 continuation line under-indented for visual indent\n'}
[0.974718] (turtle_brick) StdoutLine: {'line': b'                              % (msg.pose.position.x, msg.pose.position.y,\n'}
[0.974780] (turtle_brick) StdoutLine: {'line': b'                              ^\n'}
[0.974841] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974902] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:114:31: E128 continuation line under-indented for visual indent\n'}
[0.974964] (turtle_brick) StdoutLine: {'line': b'                              msg.pose.orientation.z) )\n'}
[0.975041] (turtle_brick) StdoutLine: {'line': b'                              ^\n'}
[0.975140] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975254] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:54: E202 whitespace before ')'\n"}
[0.975359] (turtle_brick) StdoutLine: {'line': b'                              msg.pose.orientation.z) )\n'}
[0.975471] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.975592] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975701] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:158:68: W291 trailing whitespace\n'}
[0.975813] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[0.975879] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[0.975942] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976005] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:159:68: W291 trailing whitespace\n'}
[0.976067] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[0.976129] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[0.976192] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976254] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:162:56: W291 trailing whitespace\n'}
[0.976315] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[0.976395] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.976478] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976540] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:182:80: E202 whitespace before ')'\n"}
[0.976601] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[0.976663] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[0.976725] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976786] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:188:60: W291 trailing whitespace\n'}
[0.976847] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang - self.tilt_angf) >= 0.01:       \n'}
[0.976909] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[0.976970] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977031] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:198:1: E302 expected 2 blank lines, found 1\n'}
[0.977092] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[0.977154] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.977216] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977277] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:200:16: E225 missing whitespace around operator\n'}
[0.977340] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[0.977400] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[0.977463] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977526] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:202:19: W291 trailing whitespace\n'}
[0.977589] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.977650] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.977712] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977774] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[0.977835] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[0.977897] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.977959] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978021] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[0.978083] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[0.978144] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.978205] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978267] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[0.978328] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[0.978398] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.978459] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978520] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[0.978582] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[0.978643] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.978704] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978779] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[0.978855] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.978916] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.978976] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979036] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[0.979097] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.979158] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.979219] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979280] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[0.979341] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.979402] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.979462] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979523] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[0.979584] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.979644] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.979705] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979783] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[0.979848] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[0.979910] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.979971] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980032] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[0.980093] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[0.980155] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.980217] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980279] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[0.980340] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[0.980434] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.980499] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980570] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[0.980640] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.980696] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[0.980752] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[0.980807] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[0.980862] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[0.980917] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[0.980973] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.981028] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[0.981083] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[0.981139] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[0.981195] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.981251] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[0.981312] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[0.981382] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[0.981446] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.981509] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.981573] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.981636] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981700] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[0.981763] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.981827] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[0.981891] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[0.981961] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[0.982025] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[0.982089] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[0.982152] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.982217] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[0.982281] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[0.982345] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[0.982408] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.982471] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[0.982533] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[0.982596] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[0.982659] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.982722] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.982784] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[0.982848] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.982913] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982977] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[0.983041] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.983119] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.983294] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983418] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[0.983542] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.983655] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.983765] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983840] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[0.983906] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.983971] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.984036] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984100] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[0.984165] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.984229] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.984293] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984371] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[0.984437] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[0.984517] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.984584] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984651] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[0.984718] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[0.984784] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.984849] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984915] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[0.984981] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[0.985047] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.985112] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985179] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[0.985245] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.985312] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.985392] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985456] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[0.985520] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.985584] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.985649] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985715] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[0.985779] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.985844] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[0.985909] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985976] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[0.986041] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[0.986107] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.986172] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986237] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[0.986301] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[0.986381] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[0.986448] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986515] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[0.986582] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[0.986649] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.986716] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986782] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[0.986848] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[0.986916] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[0.986997] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987063] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[0.987130] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[0.987196] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.987262] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987336] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[0.987402] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.987468] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.987534] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987600] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[0.987673] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.987752] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.987827] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987893] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[0.987960] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.988027] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[0.988094] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988160] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[0.988226] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[0.988293] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.988371] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988436] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[0.988500] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[0.988565] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[0.988629] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988693] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[0.988777] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[0.988861] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.988928] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988994] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[0.989061] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.989127] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.989193] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989258] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[0.989338] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.989406] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.989475] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989544] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[0.989612] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[0.989681] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.989749] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989817] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[0.989885] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.989953] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.990021] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990088] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[0.990156] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[0.990224] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.990304] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990386] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[0.990451] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.990515] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.990578] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990642] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[0.990706] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.990771] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.990835] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990899] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[0.990963] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.991027] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.991090] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991156] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[0.991286] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[0.991402] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.991515] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991623] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[0.991731] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.991817] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.991884] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991949] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[0.992014] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[0.992079] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.992143] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992209] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[0.992292] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.992358] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.992421] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[0.992498] (turtle_brick) StderrLine: {'line': b'\n'}
[0.992561] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[0.992660] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[0.992725] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[0.992789] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.992851] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992913] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[0.992975] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[0.993036] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.993098] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993159] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[0.993222] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[0.993285] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[0.993347] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993408] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[0.993471] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[0.993543] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.993604] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993671] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[0.993734] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[0.993796] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.993858] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993919] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[0.993980] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[0.994053] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.994115] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994177] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[0.994238] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.994307] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.994369] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994431] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[0.994508] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.994572] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[0.994636] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994699] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[0.994762] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.994825] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[0.994888] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994951] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[0.995015] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.995078] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.995142] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995217] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[0.995279] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.995354] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.995418] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995480] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[0.995543] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.995606] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.995670] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995733] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[0.995824] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.995883] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.995941] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995998] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[0.996057] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[0.996122] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.996181] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996239] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[0.996297] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[0.996368] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996423] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[0.996480] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.996536] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996591] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[0.996648] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[0.996704] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996761] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[0.996817] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[0.996874] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.996930] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996986] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[0.997043] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[0.997099] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.997156] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997212] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[0.997269] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[0.997325] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.997399] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997467] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[0.997537] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[0.997606] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.997675] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997743] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[0.997812] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[0.997881] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.997950] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998019] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[0.998089] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[0.998157] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.998225] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998294] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[0.998373] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[0.998436] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.998497] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998559] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[0.998622] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[0.998687] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.998749] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998812] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[0.998874] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[0.998938] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.999001] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999064] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[0.999132] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[0.999201] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999312] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[0.999442] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[0.999561] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.999667] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999825] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[0.999956] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.000025] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.000091] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000155] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.000221] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.000286] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.000350] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000413] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.000476] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.000540] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.000605] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.000669] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.000733] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.000794] (-) TimerEvent: {}
[1.000892] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.000967] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.001033] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.001098] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.001163] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.001227] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.001301] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.001384] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.001451] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.001520] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001588] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.001656] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.001723] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.001791] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.001870] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.001938] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.002005] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.002072] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.002139] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.002207] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.002275] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.002342] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.002418] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.002485] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.002546] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.002641] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002760] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.002925] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.003051] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.003168] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003284] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.003401] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.003537] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.003650] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003766] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.003844] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.003911] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.003978] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004042] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.004108] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.004172] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.004236] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004300] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.004365] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.004428] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.004492] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004556] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.004621] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.004687] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.004752] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004815] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.004879] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.004944] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.005009] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005073] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.005138] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.005215] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.005281] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005360] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.005427] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.005493] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.005560] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005626] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.005701] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.005767] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.005834] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005899] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.005966] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.006033] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.006098] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006164] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.006231] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.006297] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.006363] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006429] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.006495] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.006561] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.006627] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006692] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.006758] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.006822] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.006887] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006952] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.007017] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.007082] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.007163] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007317] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.007452] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.007551] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007654] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.007775] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.007848] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.007913] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007978] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.008053] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.008118] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.008182] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008246] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.008311] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.008375] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.008438] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008502] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.008573] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.008637] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.008700] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008763] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.008828] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.008891] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.008955] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009018] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.009082] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.009147] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.009210] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009273] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.009337] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.009400] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.009463] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009526] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.009588] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.009651] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.009714] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.009777] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.009839] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.009902] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.009965] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010035] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.010099] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.010162] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.010225] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010288] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.010351] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.010414] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.010477] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010540] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.010603] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.010667] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.010730] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010793] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.010857] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.010920] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.010983] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011046] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.011109] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.011173] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.011236] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011299] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.011390] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.011458] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011525] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.011593] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.011660] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.011728] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011805] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.011875] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.011942] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.012009] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.012077] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.012145] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.012213] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.012281] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.012361] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012428] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.012494] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.012558] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.012624] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.012690] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.012756] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.012822] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.012887] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.012953] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013018] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.013085] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.013150] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.013216] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013282] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.013360] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.013420] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.013480] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013540] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.013600] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.013660] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013720] (turtle_brick) StdoutLine: {'line': b'3     E128 continuation line under-indented for visual indent\n'}
[1.013781] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.013841] (turtle_brick) StdoutLine: {'line': b'7     E225 missing whitespace around operator\n'}
[1.013902] (turtle_brick) StdoutLine: {'line': b"25    E231 missing whitespace after ','\n"}
[1.013962] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.014023] (turtle_brick) StdoutLine: {'line': b'2     E261 at least two spaces before inline comment\n'}
[1.014083] (turtle_brick) StdoutLine: {'line': b"2     E262 inline comment should start with '# '\n"}
[1.014143] (turtle_brick) StdoutLine: {'line': b"9     E265 block comment should start with '# '\n"}
[1.014203] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.014263] (turtle_brick) StdoutLine: {'line': b'6     E302 expected 2 blank lines, found 0\n'}
[1.014338] (turtle_brick) StdoutLine: {'line': b'3     E303 too many blank lines (3)\n'}
[1.014402] (turtle_brick) StdoutLine: {'line': b'7     E501 line too long (115 > 99 characters)\n'}
[1.014477] (turtle_brick) StdoutLine: {'line': b"23    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.014543] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.014614] (turtle_brick) StdoutLine: {'line': b'15    W291 trailing whitespace\n'}
[1.014678] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.014742] (turtle_brick) StdoutLine: {'line': b'10    W293 blank line contains whitespace\n'}
[1.014805] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014869] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.014932] (turtle_brick) StdoutLine: {'line': b'124 errors\n'}
[1.014996] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015059] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 69\n"}
[1.015121] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 24\n"}
[1.015186] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 31\n"}
[1.015249] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015342] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.015444] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015544] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.015612] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.015687] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.015763] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.015834] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.015899] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.015964] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.016027] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.016091] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.016154] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.016218] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.016281] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.016345] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.016409] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.016480] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.016546] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.016610] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.016674] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.016739] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.016803] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.016867] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.016931] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.016994] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.017057] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.017120] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.017183] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.017247] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.017310] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.017387] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.017455] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.017516] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.017578] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.017639] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.017702] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.017764] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D208: Docstring is over-indented\n'}
[1.017826] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.017888] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.017951] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.018012] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.018074] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.018135] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.018197] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.018258] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.018319] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.018381] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.018443] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.018504] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.018581] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.018645] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.018708] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.018771] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.018834] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:14 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.018898] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:14 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.018962] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.019025] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.019087] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.019149] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.019220] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.019291] (turtle_brick) StdoutLine: {'line': b'19 errors\n'}
[1.019354] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.019417] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.019479] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 124 code styl...\n'}
[1.019552] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.019615] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.43s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.036169] (turtle_brick) CommandEnded: {'returncode': 1}
[1.036862] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.036894] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.037681] (-) EventReactorShutdown: {}
