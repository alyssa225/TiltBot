[0.000000] (-) TimerEvent: {}
[0.000188] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000232] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000276] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.009677] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.098913] (-) TimerEvent: {}
[0.199189] (-) TimerEvent: {}
[0.248710] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.261901] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.268577] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.268782] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.268895] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.269040] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.269268] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.269387] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1954 - Experimental\n'}
[0.269549] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.269795] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.269940] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.270082] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.270212] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.270361] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.270508] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.270624] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.270738] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.270852] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.270965] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.271077] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.271193] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.271322] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299314] (-) TimerEvent: {}
[0.322841] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.323019] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.384017] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.384209] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.384332] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.384479] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.392207] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.392399] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.399405] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.399648] (-) TimerEvent: {}
[0.399784] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.399948] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.400087] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.400219] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.400378] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.453363] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.453603] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.499752] (-) TimerEvent: {}
[0.528900] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.529182] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.529348] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.534021] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.534229] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.538641] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.538923] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.539037] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.540240] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.540533] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.548246] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.15 sec\n'}
[0.548696] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.548907] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.549101] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.549275] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.549449] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.549678] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.28 sec*proc (2 tests)\n'}
[0.549823] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.15 sec*proc (1 test)\n'}
[0.549965] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.550115] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.28 sec\n'}
[0.550242] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.550368] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.550494] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.569006] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.569249] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.569411] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.570869] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.571408] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.571456] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.599858] (-) TimerEvent: {}
[0.611851] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.612119] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.612514] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.618886] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.620145] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.699978] (-) TimerEvent: {}
[0.800409] (-) TimerEvent: {}
[0.816719] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.878548] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.878923] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.879062] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.879166] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.879288] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.900521] (-) TimerEvent: {}
[0.912712] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.913907] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 125 code style errors / warnings:\x1b[0m\n'}
[0.916342] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:113:29: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.916456] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:113:73: W291 trailing whitespace\x1b[0m\n'}
[0.916554] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:29: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.916722] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:52: E202 whitespace before ')'\x1b[0m\n"}
[0.916853] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:158:68: W291 trailing whitespace\x1b[0m\n'}
[0.916980] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:68: W291 trailing whitespace\x1b[0m\n'}
[0.917105] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:56: W291 trailing whitespace\x1b[0m\n'}
[0.917229] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:182:80: E202 whitespace before ')'\x1b[0m\n"}
[0.917354] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:188:60: W291 trailing whitespace\x1b[0m\n'}
[0.917479] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:198:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.917603] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:200:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.917729] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:202:19: W291 trailing whitespace\x1b[0m\n'}
[0.917854] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.917978] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.918122] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.918248] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.918373] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.918494] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.918624] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.918742] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.918866] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.918992] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.919116] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.919240] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.919364] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.919488] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.919620] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.919756] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.919881] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.920005] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.920152] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.920263] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.920375] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.920486] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.920597] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.920708] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.920820] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.920930] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.921069] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.921219] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.921355] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.921474] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.921591] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.921708] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.921826] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.921941] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.922086] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.922198] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.922309] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.922421] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.922531] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.922641] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.922749] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.922859] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.922981] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.923114] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.923212] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.923312] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.923417] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.923515] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.923646] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.923737] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.923827] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.923938] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.924047] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.924157] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.924267] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.924377] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.924487] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.924596] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.924706] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.924816] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.924925] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.925035] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.925158] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.925267] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.925387] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.925496] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.925606] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.925714] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.925823] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.925932] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.926047] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.926223] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.926333] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.926460] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.926603] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.926758] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.926915] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.927070] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.927225] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.927397] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.927559] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.927710] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.927881] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.928032] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.928184] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.928333] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.928465] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.928607] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.929025] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.929173] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.929311] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.929448] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.929584] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.929719] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.929859] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.929974] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.930122] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.930238] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.930353] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.930470] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.930582] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.930657] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.930734] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.930838] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.930966] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.931097] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.931242] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.931372] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.931504] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.931647] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.931782] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.931913] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.932043] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.932172] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.932301] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.932432] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.932562] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:113:29: E128 continuation line under-indented for visual indent\n'}
[0.932702] (turtle_brick) StdoutLine: {'line': b'                            % (msg.pose.position.x, msg.pose.position.y, \n'}
[0.932824] (turtle_brick) StdoutLine: {'line': b'                            ^\n'}
[0.932946] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.933070] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:113:73: W291 trailing whitespace\n'}
[0.933192] (turtle_brick) StdoutLine: {'line': b'                            % (msg.pose.position.x, msg.pose.position.y, \n'}
[0.933314] (turtle_brick) StdoutLine: {'line': b'                                                                        ^\n'}
[0.933437] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.933558] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:114:29: E128 continuation line under-indented for visual indent\n'}
[0.933691] (turtle_brick) StdoutLine: {'line': b'                            msg.pose.orientation.z) )\n'}
[0.933814] (turtle_brick) StdoutLine: {'line': b'                            ^\n'}
[0.933936] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.934080] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:52: E202 whitespace before ')'\n"}
[0.934205] (turtle_brick) StdoutLine: {'line': b'                            msg.pose.orientation.z) )\n'}
[0.934328] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[0.934451] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.934572] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:158:68: W291 trailing whitespace\n'}
[0.934728] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[0.934863] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[0.934997] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.935130] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:159:68: W291 trailing whitespace\n'}
[0.935264] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[0.935415] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[0.935552] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.935688] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:162:56: W291 trailing whitespace\n'}
[0.935812] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[0.935934] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.936056] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.936196] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:182:80: E202 whitespace before ')'\n"}
[0.936325] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[0.936456] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[0.936585] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.936714] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:188:60: W291 trailing whitespace\n'}
[0.936844] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang - self.tilt_angf) >= 0.01:       \n'}
[0.936973] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[0.937114] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.937235] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:198:1: E302 expected 2 blank lines, found 1\n'}
[0.937358] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[0.937481] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.937606] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.937729] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:200:16: E225 missing whitespace around operator\n'}
[0.937853] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[0.937977] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[0.938122] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.938246] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:202:19: W291 trailing whitespace\n'}
[0.938369] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.938492] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.938615] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.938738] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[0.938861] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[0.938983] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.939123] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.939254] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[0.939401] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[0.939527] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.939661] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.939792] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[0.939941] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[0.940092] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.940227] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.940364] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[0.940502] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[0.940640] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.940824] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.941007] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[0.941148] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.941284] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.941421] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.941556] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[0.941706] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.941838] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.941968] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.942123] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[0.942257] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.942398] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.942567] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.942726] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[0.942886] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.943022] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.943156] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.943291] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[0.943447] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[0.943582] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.943690] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.943801] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[0.943876] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[0.943950] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.944023] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.944096] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[0.944169] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[0.944241] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.944325] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.944394] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[0.944463] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.944535] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[0.944606] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[0.944676] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[0.944747] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[0.944819] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[0.944898] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.944969] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[0.945040] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[0.945110] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[0.945180] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.945250] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[0.945319] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[0.945389] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[0.945459] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.945529] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.945603] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.945672] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.945740] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[0.945809] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.945877] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[0.945948] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[0.946019] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[0.946113] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[0.946184] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[0.946254] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.946323] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[0.946392] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[0.946461] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[0.946530] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.946598] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[0.946667] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[0.946736] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[0.946806] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.946874] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.946943] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[0.947014] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.947084] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.947153] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[0.947221] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.947288] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.947425] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.947545] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[0.947659] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.947734] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.947810] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.947881] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[0.947951] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.948037] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.948126] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948210] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[0.948282] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.948354] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.948425] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948495] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[0.948567] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[0.948639] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.948710] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948779] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[0.948850] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[0.948921] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.948992] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949061] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[0.949132] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[0.949203] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.949273] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949344] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[0.949414] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.949485] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.949556] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949626] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[0.949697] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.949766] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.949836] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949907] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[0.949978] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.950049] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[0.950144] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950243] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[0.950311] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[0.950380] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.950447] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950514] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[0.950581] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[0.950648] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[0.950716] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950877] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[0.950959] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[0.951034] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.951137] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951208] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[0.951283] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[0.951362] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[0.951434] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951504] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[0.951581] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[0.951673] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.951746] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951818] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[0.951889] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.951961] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.952032] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952103] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[0.952174] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.952246] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.952318] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952389] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[0.952461] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.952533] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[0.952605] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952677] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[0.952748] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[0.952820] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.952891] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952961] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[0.953032] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[0.953103] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[0.953175] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953245] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[0.953315] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[0.953386] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.953457] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953528] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[0.953599] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.953670] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.953742] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953812] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[0.953884] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.953955] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.954026] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954144] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[0.954270] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[0.954346] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.954418] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954500] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[0.954572] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.954643] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.954715] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954792] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[0.954864] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[0.954934] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.955006] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955077] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[0.955149] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.955220] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.955291] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955362] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[0.955433] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.955504] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.955575] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955686] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[0.955805] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.955923] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.956041] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956160] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[0.956279] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[0.956399] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.956521] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956623] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[0.956699] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.956773] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.956858] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956927] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[0.956996] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[0.957066] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.957134] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957205] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[0.957276] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[0.957344] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.957412] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957479] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[0.957547] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[0.957616] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.957685] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957754] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[0.957823] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[0.957892] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[0.957961] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958041] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[0.958129] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[0.958197] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.958274] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958340] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[0.958411] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[0.958478] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.958544] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958609] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[0.958675] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[0.958752] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.958900] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958988] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[0.959061] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.959133] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.959203] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959273] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[0.959343] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.959413] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[0.959482] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959550] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[0.959635] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.959713] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[0.959782] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959853] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[0.959924] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.959993] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.960064] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960132] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[0.960202] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.960271] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.960460] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960611] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[0.960690] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.960763] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.960836] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960908] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[0.960980] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.961053] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.961125] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961197] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[0.961280] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[0.961350] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.961429] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961497] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[0.961567] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[0.961636] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961704] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[0.961772] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.961840] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961907] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[0.961975] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[0.962044] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962136] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[0.962206] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[0.962275] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.962343] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962411] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[0.962479] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[0.962547] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.962615] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962683] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[0.962751] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[0.962819] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.962887] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962954] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[0.963023] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[0.963105] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.963171] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963237] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[0.963304] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[0.963384] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.963452] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963520] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[0.963588] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[0.963678] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.963749] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963818] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[0.963888] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[0.963956] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.964024] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964092] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[0.964161] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[0.964231] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.964299] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964368] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[0.964436] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[0.964505] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.964574] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964642] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[0.964720] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[0.964790] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964858] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[0.964934] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[0.965003] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.965071] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965138] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[0.965206] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[0.965288] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[0.965359] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965429] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[0.965499] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[0.965570] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.965640] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965708] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[0.965778] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.965847] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[0.965917] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[0.965987] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[0.966078] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[0.966151] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[0.966221] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[0.966291] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[0.966361] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[0.966432] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[0.966515] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[0.966595] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.966662] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.966730] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[0.966799] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966931] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[0.967074] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.967204] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[0.967340] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[0.967487] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[0.967616] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[0.967704] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[0.967777] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[0.967850] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[0.967922] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[0.967995] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[0.968080] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[0.968152] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.968224] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.968308] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[0.968391] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968459] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[0.968529] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[0.968597] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.968666] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968735] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[0.968805] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[0.968874] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.968943] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969011] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[0.969094] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[0.969161] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[0.969228] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969295] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[0.969363] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.969443] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.969512] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969580] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[0.969651] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[0.969720] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.969788] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969858] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[0.969927] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[0.969997] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.970091] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970162] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[0.970230] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[0.970300] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[0.970370] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970450] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[0.970517] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[0.970594] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.970661] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970726] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[0.970793] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[0.970859] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[0.970925] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970991] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[0.971056] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[0.971129] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[0.971196] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971261] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[0.971327] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[0.971407] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.971473] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971539] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[0.971616] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[0.971695] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[0.971764] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971833] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[0.971902] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[0.971970] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[0.972039] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972108] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[0.972180] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[0.972250] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.972319] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972387] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[0.972456] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[0.972526] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.972595] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972664] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[0.972745] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[0.972823] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972893] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[0.972963] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[0.973033] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.973103] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973171] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[0.973241] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[0.973325] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.973396] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973468] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[0.973540] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[0.973618] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.973739] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973817] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[0.973900] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[0.973974] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.974096] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974240] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[0.974382] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[0.974533] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.974682] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974830] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[0.974998] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[0.975132] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.975262] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975392] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[0.975522] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[0.975681] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.975814] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975943] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[0.976073] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.976202] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[0.976332] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[0.976462] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.976591] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.976720] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.976850] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976980] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[0.977119] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[0.977250] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.977380] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977509] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[0.977640] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[0.977770] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.977900] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978029] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[0.978181] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[0.978311] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.978441] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978570] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[0.978699] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[0.978829] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[0.978959] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979088] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[0.979218] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.979347] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.979476] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979613] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[0.979758] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[0.979889] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980018] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[0.980171] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[0.980324] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.980466] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980617] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[0.980766] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.980915] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[0.981063] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[0.981225] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[0.981369] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.981512] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.981655] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.981798] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981941] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[0.982106] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.982250] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[0.982394] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[0.982538] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[0.982681] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.982824] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.982982] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[0.983131] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983279] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[0.983428] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[0.983577] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.983738] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983888] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[0.984037] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.984186] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.984346] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984487] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[0.984630] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[0.984773] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984915] (turtle_brick) StdoutLine: {'line': b'3     E128 continuation line under-indented for visual indent\n'}
[0.985059] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[0.985207] (turtle_brick) StdoutLine: {'line': b'7     E225 missing whitespace around operator\n'}
[0.985338] (turtle_brick) StdoutLine: {'line': b"25    E231 missing whitespace after ','\n"}
[0.985469] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[0.985601] (turtle_brick) StdoutLine: {'line': b'2     E261 at least two spaces before inline comment\n'}
[0.985733] (turtle_brick) StdoutLine: {'line': b"2     E262 inline comment should start with '# '\n"}
[0.985865] (turtle_brick) StdoutLine: {'line': b"9     E265 block comment should start with '# '\n"}
[0.985995] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[0.986164] (turtle_brick) StdoutLine: {'line': b'6     E302 expected 2 blank lines, found 0\n'}
[0.986305] (turtle_brick) StdoutLine: {'line': b'3     E303 too many blank lines (3)\n'}
[0.986437] (turtle_brick) StdoutLine: {'line': b'7     E501 line too long (115 > 99 characters)\n'}
[0.986568] (turtle_brick) StdoutLine: {'line': b"23    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[0.986714] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[0.986856] (turtle_brick) StdoutLine: {'line': b'16    W291 trailing whitespace\n'}
[0.986988] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[0.987118] (turtle_brick) StdoutLine: {'line': b'10    W293 blank line contains whitespace\n'}
[0.987250] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987382] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[0.987513] (turtle_brick) StdoutLine: {'line': b'125 errors\n'}
[0.987664] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987794] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 69\n"}
[0.987922] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 24\n"}
[0.988049] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 32\n"}
[0.988176] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988303] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[0.988430] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988557] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[0.988685] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[0.988812] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[0.988940] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[0.989067] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[0.989194] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[0.989322] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[0.989449] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[0.989576] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[0.989703] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[0.989832] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[0.989959] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[0.990122] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[0.990258] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[0.990393] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.990602] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[0.991342] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[0.991968] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[0.992467] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[0.992688] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.992902] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.993116] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[0.993324] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[0.993472] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[0.993617] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[0.993761] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[0.993906] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[0.994057] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[0.994216] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[0.994351] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[0.994496] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[0.994631] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[0.994766] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[0.994902] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.995039] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D208: Docstring is over-indented\n'}
[0.995184] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[0.995316] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[0.995447] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[0.995589] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.995736] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[0.995858] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[0.995978] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.996100] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[0.996222] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[0.996344] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[0.996466] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[0.996587] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[0.996709] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.996830] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[0.996951] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[0.997073] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[0.997195] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:14 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[0.997319] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:14 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.997440] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[0.997561] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[0.997682] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[0.997804] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[0.997935] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[0.998056] (turtle_brick) StdoutLine: {'line': b'19 errors\n'}
[0.998200] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[0.998322] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[0.998443] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 125 code styl...\n'}
[0.998570] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[0.998692] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.38s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[0.998814] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[0.998964] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.999137] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.999271] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[0.999404] (turtle_brick) StderrLine: {'line': b'\n'}
[0.999552] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[0.999727] (turtle_brick) CommandEnded: {'returncode': 1}
[1.000152] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.000191] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.000596] (-) TimerEvent: {}
[1.000690] (-) EventReactorShutdown: {}
