[0.000000] (-) TimerEvent: {}
[0.000159] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000227] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000298] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.008730] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.098690] (-) TimerEvent: {}
[0.198960] (-) TimerEvent: {}
[0.247400] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.260089] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.267085] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.267352] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.267445] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.267612] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.267808] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.267987] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1916 - Experimental\n'}
[0.268132] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.268283] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.268548] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.268673] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.268790] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.268887] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.268960] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.269029] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.269099] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.269168] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.269237] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.269305] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.269374] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.269459] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299079] (-) TimerEvent: {}
[0.321661] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.321849] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.383565] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.383833] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.384032] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.384253] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.392393] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.392690] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.399196] (-) TimerEvent: {}
[0.401627] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.402022] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.402209] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.402388] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.402538] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.402706] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.456539] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.456720] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.499313] (-) TimerEvent: {}
[0.522127] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.522348] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.526402] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.526801] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.527118] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.532474] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.532737] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.532860] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.542894] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.543143] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.551154] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.15 sec\n'}
[0.551464] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.551767] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.551841] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.551904] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.551966] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.552034] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.28 sec*proc (2 tests)\n'}
[0.552094] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.15 sec*proc (1 test)\n'}
[0.552153] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.552211] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.28 sec\n'}
[0.552308] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.552388] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.552449] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.574343] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.574542] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.574627] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.576492] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.576983] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.577034] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.599743] (-) TimerEvent: {}
[0.608069] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.608261] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.608571] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.618171] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.619585] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.699855] (-) TimerEvent: {}
[0.800304] (-) TimerEvent: {}
[0.820011] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.883387] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.883692] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.883871] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.884009] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.884125] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.900392] (-) TimerEvent: {}
[0.918401] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.918698] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 283 code style errors / warnings:\x1b[0m\n'}
[0.919086] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:15:29: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.919352] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:16:29: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.919615] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\x1b[0m\n"}
[0.919834] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.920079] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\x1b[0m\n"}
[0.920400] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.920622] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\x1b[0m\n"}
[0.920945] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:12:42: W291 trailing whitespace\x1b[0m\n'}
[0.921187] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\x1b[0m\n"}
[0.921418] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.921657] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.921900] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.922437] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:39:53: W291 trailing whitespace\x1b[0m\n'}
[0.923795] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.926904] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:50:33: W291 trailing whitespace\x1b[0m\n'}
[0.927019] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.927235] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.927377] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.927521] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.927656] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.927789] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.927929] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.928054] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.928178] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.928330] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.928454] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.928577] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.928700] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.928847] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.928975] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.929085] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.929206] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.929316] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\x1b[0m\n"}
[0.929425] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.929534] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.929642] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.929752] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.929861] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.929971] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.930079] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.930221] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.930350] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:192:26: W291 trailing whitespace\x1b[0m\n'}
[0.930475] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\x1b[0m\n"}
[0.930584] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\x1b[0m\n"}
[0.930693] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\x1b[0m\n"}
[0.930802] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\x1b[0m\n"}
[0.930912] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.931021] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.931129] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.931239] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\x1b[0m\n"}
[0.931347] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.931454] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.931561] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.931680] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\x1b[0m\n"}
[0.931876] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\x1b[0m\n'}
[0.931986] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.932102] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\x1b[0m\n'}
[0.932246] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.932369] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.932491] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.932613] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\x1b[0m\n"}
[0.932734] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.932873] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.932996] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.933117] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.933251] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.933369] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:272:30: W291 trailing whitespace\x1b[0m\n'}
[0.933487] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\x1b[0m\n'}
[0.933604] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.933723] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\x1b[0m\n"}
[0.933840] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.933958] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\x1b[0m\n'}
[0.934075] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:294:19: W291 trailing whitespace\x1b[0m\n'}
[0.934192] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:295:1: W391 blank line at end of file\x1b[0m\n'}
[0.934320] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.934431] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.934543] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[0.934655] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.934779] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.934892] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.935003] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[0.935114] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[0.935225] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.935342] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.935454] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[0.935565] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[0.935676] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[0.935787] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[0.935898] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[0.936009] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[0.936120] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[0.936273] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[0.936402] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[0.936513] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.936624] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[0.936736] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.936878] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.937005] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.937115] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.937239] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.937352] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.937466] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.937579] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.937692] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.937814] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.937929] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.938042] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.938155] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.938269] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.938401] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.938524] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.938640] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[0.938757] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.938874] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.938991] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[0.939108] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[0.939235] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.939348] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.939462] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.939574] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.939723] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.939894] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.940025] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.940152] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.940347] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.940475] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[0.940603] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[0.940730] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.940894] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.941025] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[0.941152] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.941289] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.941406] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.941523] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.941641] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.941758] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.941876] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.942000] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.942118] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.942235] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.942351] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.942468] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.942631] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.942782] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.943138] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.943301] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.943445] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[0.943590] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[0.943732] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[0.943856] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.943989] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[0.944105] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.944259] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[0.944379] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.944496] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.944624] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[0.944737] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[0.944861] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.944977] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[0.945091] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.945204] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[0.945317] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[0.945430] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.945552] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.945665] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.945777] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.945890] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[0.946013] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.946126] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[0.946239] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[0.946363] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.946470] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.946578] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.946685] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.946793] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.946900] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.947008] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.947115] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.947221] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.947338] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.947442] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.947545] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.947649] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.947773] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.947900] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.948013] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.948126] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.948261] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.948376] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.948496] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.948621] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.948729] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.948854] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.948964] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.949070] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.949176] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.949282] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.949388] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.949512] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.949639] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.949749] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.949860] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.949972] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.950084] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.950197] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.950311] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.950425] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.950538] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.950667] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.950778] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.950888] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.951009] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.951118] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.951245] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.951353] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.951461] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.951574] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.951682] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.951789] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.951897] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.952004] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.952112] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.952242] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.952373] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.952486] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.952628] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.952748] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.952880] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.952999] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.953145] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.953259] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.953373] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.953486] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.953608] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.953715] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.953822] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.953929] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.954036] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.954143] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.954250] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.954356] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.954463] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.954571] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.954679] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.954794] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.954901] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.955008] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.955114] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.955221] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.955327] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.955434] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.955540] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.955647] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.955754] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.955874] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.955988] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.956106] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.956256] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.956370] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.956483] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.956596] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.956707] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.956838] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.956950] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.957057] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.957169] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.957276] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.957382] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.957488] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.957609] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.957711] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.957815] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.957918] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.958021] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.958123] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.958226] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.958329] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.958432] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.958535] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.958638] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.958741] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.958844] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.958947] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.959050] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.959155] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.959260] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959364] (turtle_brick) StdoutLine: {'line': b'./setup.py:15:29: E128 continuation line under-indented for visual indent\n'}
[0.959468] (turtle_brick) StdoutLine: {'line': b"                            'config/turtle_urdf.rviz', 'launch/run_turtle.launch.py',\n"}
[0.959571] (turtle_brick) StdoutLine: {'line': b'                            ^\n'}
[0.959674] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959779] (turtle_brick) StdoutLine: {'line': b'./setup.py:16:29: E128 continuation line under-indented for visual indent\n'}
[0.959882] (turtle_brick) StdoutLine: {'line': b"                            'launch/turtle_arena.launch.py']),\n"}
[0.959986] (turtle_brick) StdoutLine: {'line': b'                            ^\n'}
[0.960089] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960192] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\n"}
[0.960317] (turtle_brick) StdoutLine: {'line': b'from xmlrpc.client import Boolean\n'}
[0.960421] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.960525] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960628] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[0.960732] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[0.960848] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.960953] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961067] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\n"}
[0.961170] (turtle_brick) StdoutLine: {'line': b'from math import pi\n'}
[0.961308] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.961412] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961517] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[0.961623] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.961729] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.961835] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961939] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\n"}
[0.962065] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt\n'}
[0.962173] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.962328] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962429] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:12:42: W291 trailing whitespace\n'}
[0.962500] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.962570] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.962638] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962705] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\n"}
[0.962774] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import MarkerArray\n'}
[0.962841] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.962909] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962976] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\n"}
[0.963058] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.963126] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.963193] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963260] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\n'}
[0.963328] (turtle_brick) StdoutLine: {'line': b'class BState(Enum):\n'}
[0.963424] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.963489] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963555] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\n'}
[0.963625] (turtle_brick) StdoutLine: {'line': b'class Arena(Node):\n'}
[0.963691] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.963755] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963820] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:39:53: W291 trailing whitespace\n'}
[0.963967] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.964097] (turtle_brick) StdoutLine: {'line': b'    Creates the arena and places brick when called in command line.\n'}
[0.964260] (turtle_brick) StdoutLine: {'line': b'    Will drop the robot when called in command line.\n'}
[0.964399] (turtle_brick) StdoutLine: {'line': b'        -if robot is underneath the brick, the brick will land on the robot\n'}
[0.964538] (turtle_brick) StdoutLine: {'line': b'        -if nothing is under brick, brick will land on ground\n'}
[0.964677] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.964833] (turtle_brick) StdoutLine: {'line': b'        -robot_sub: continuous robot position\n'}
[0.964970] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.965103] (turtle_brick) StdoutLine: {'line': b'        -marker_pub: publishes walls and brick\n'}
[0.965236] (turtle_brick) StdoutLine: {'line': b'        -drop_pub: sends placement, drop coordinates  \n'}
[0.965370] (turtle_brick) StdoutLine: {'line': b'        -platform_pub: sends true if platform is under brick\n'}
[0.965516] (turtle_brick) StdoutLine: {'line': b'    SERVICES:\n'}
[0.965642] (turtle_brick) StdoutLine: {'line': b'        -Place: place brick at x, y, z location\n'}
[0.965768] (turtle_brick) StdoutLine: {'line': b'        -Drop: Empty drops brick\n'}
[0.965902] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.966028] (turtle_brick) StdoutLine: {'line': b'        -world_brick: connects brick to world\n'}
[0.966154] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.966280] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.966407] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.966533] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966659] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\n"}
[0.966786] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.966913] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.967040] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967166] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:50:33: W291 trailing whitespace\n'}
[0.967308] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.967441] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.967575] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967708] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\n"}
[0.967842] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.967975] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.968108] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968262] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\n"}
[0.968397] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.968531] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.968664] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968797] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\n"}
[0.968943] (turtle_brick) StdoutLine: {'line': b'        #setting state of brick\n'}
[0.969076] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.969209] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969342] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\n"}
[0.969476] (turtle_brick) StdoutLine: {'line': b'        #set up subscribers\n'}
[0.969610] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.969745] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969878] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\n"}
[0.970012] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.970147] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.970280] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970413] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\n"}
[0.970547] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.970681] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.970815] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970948] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\n"}
[0.971081] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.971215] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[0.971349] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971483] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\n"}
[0.971618] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[0.971752] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.971901] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972072] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\n"}
[0.972277] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.972439] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.972597] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972752] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\n"}
[0.972907] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.973056] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.973170] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973297] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\n"}
[0.973414] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.973530] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.973647] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973763] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\n"}
[0.973879] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.973996] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.974113] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974229] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\n"}
[0.974355] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.974469] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.974583] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974696] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\n"}
[0.974817] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.974932] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.975046] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975159] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\n'}
[0.975273] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.975388] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.975516] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975639] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\n'}
[0.975763] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.975886] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.976009] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976132] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\n"}
[0.976301] (turtle_brick) StdoutLine: {'line': b'        #initialize services\n'}
[0.976447] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.976571] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976705] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\n"}
[0.976846] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.977000] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[0.977115] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977229] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\n"}
[0.977343] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.977459] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.977578] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977692] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\n"}
[0.977806] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.977921] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.978035] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978150] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\n"}
[0.978265] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.978380] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.978494] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978608] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\n'}
[0.978723] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.978838] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.978952] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979065] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\n"}
[0.979180] (turtle_brick) StdoutLine: {'line': b'        #creating brick marker\n'}
[0.979295] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.979410] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979524] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\n"}
[0.979639] (turtle_brick) StdoutLine: {'line': b'        #creating wall markers\n'}
[0.979753] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.979868] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980038] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\n'}
[0.980185] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.980371] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.980494] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980617] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\n"}
[0.980741] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.980913] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.981038] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981161] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:192:26: W291 trailing whitespace\n'}
[0.981297] (turtle_brick) StdoutLine: {'line': b'        self.brickz = 0.0 \n'}
[0.981416] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[0.981548] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981664] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\n"}
[0.981781] (turtle_brick) StdoutLine: {'line': b'        self.wall = self.create_timer(0.5,self.wall_callback)\n'}
[0.981898] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.982015] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982181] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\n"}
[0.982337] (turtle_brick) StdoutLine: {'line': b'    def place_callback(self, request,response):\n'}
[0.982533] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.982660] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982787] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\n"}
[0.982914] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.983041] (turtle_brick) StdoutLine: {'line': b'                                  ^\n'}
[0.983168] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983294] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\n"}
[0.983421] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.983559] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.983685] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983811] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\n'}
[0.983938] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.984064] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.984229] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984390] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\n"}
[0.984566] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.984725] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.984883] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985013] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\n'}
[0.985140] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[0.985267] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.985394] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985520] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\n"}
[0.985647] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.985774] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.985901] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986027] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\n"}
[0.986154] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.986280] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.986406] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986533] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\n"}
[0.986669] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.986796] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.986922] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987049] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\n"}
[0.987176] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.987314] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.987437] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987559] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\n"}
[0.987682] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self, request,response):\n'}
[0.987806] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[0.987952] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988128] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\n'}
[0.988298] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[0.988441] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.988565] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988687] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\n"}
[0.988839] (turtle_brick) StdoutLine: {'line': b'        #publishing wall markers\n'}
[0.988992] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.989116] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989238] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\n'}
[0.989362] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[0.989486] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.989621] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989744] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\n'}
[0.989868] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.990012] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.990166] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990289] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\n'}
[0.990412] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.990535] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.990658] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990782] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\n'}
[0.990905] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.991028] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.991151] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991274] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\n"}
[0.991398] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.991531] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.991644] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991757] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\n"}
[0.991883] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.991997] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.992111] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992224] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\n"}
[0.992362] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.992475] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.992626] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992767] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\n'}
[0.992933] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.993047] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.993161] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993275] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\n"}
[0.993389] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.993502] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.993616] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993730] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\n"}
[0.993843] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.993956] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.994070] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994183] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:272:30: W291 trailing whitespace\n'}
[0.994297] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[0.994411] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[0.994524] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994651] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\n'}
[0.994767] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[0.994884] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.995000] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995116] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\n'}
[0.995248] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.995375] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.995510] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995636] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\n"}
[0.995763] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.995890] (turtle_brick) StdoutLine: {'line': b'                                                                 ^\n'}
[0.996065] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996229] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\n'}
[0.996420] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.996574] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.996695] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996841] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\n'}
[0.996987] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[0.997107] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.997239] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997361] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:294:19: W291 trailing whitespace\n'}
[0.997484] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.997616] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.997732] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997848] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:295:1: W391 blank line at end of file\n'}
[0.997964] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998080] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.998196] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998312] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[0.998436] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.998553] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.998668] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998784] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[0.998902] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.999018] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.999133] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999264] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[0.999384] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[0.999503] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.999622] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999741] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[0.999861] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[0.999981] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.000101] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000234] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[1.000380] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.000499] (-) TimerEvent: {}
[1.000627] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.000767] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000919] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[1.001184] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.001522] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.002239] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002425] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[1.002813] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[1.002946] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.003054] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003161] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[1.003268] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.003375] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.003481] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003600] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[1.003704] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[1.003808] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.003911] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004030] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[1.004137] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[1.004264] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.004371] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004477] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[1.004583] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.004690] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.004796] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.004893] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.004957] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.005019] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.005081] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.005143] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.005204] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.005267] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.005327] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.005390] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.005452] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.005514] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.005575] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.005637] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.005698] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.005760] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.005834] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.005896] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.005957] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.006018] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[1.006079] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006141] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[1.006203] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.006265] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.006327] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.006389] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.006455] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.006518] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.006579] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.006641] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.006703] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.006765] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.006827] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.006888] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.006950] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.007011] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.007073] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.007135] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.007196] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.007258] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.007328] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.007388] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.007443] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.007498] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[1.007552] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007607] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[1.007662] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.007716] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.007771] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.007826] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.007881] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.007935] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.007989] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.008043] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.008097] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.008152] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.008207] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.008302] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.008379] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.008433] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.008488] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.008543] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.008598] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.008652] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.008707] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.008762] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.008838] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.008924] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.008979] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009034] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[1.009089] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.009144] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.009200] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.009256] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.009312] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.009368] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.009424] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.009480] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.009536] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.009592] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.009647] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.009703] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.009758] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.009814] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.009869] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.009925] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.009981] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.010037] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.010093] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.010148] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.010204] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.010260] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.010316] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010371] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[1.010427] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.010483] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.010539] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.010595] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.010650] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.010706] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.010774] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.010831] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.010886] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.010942] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.010997] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.011053] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.011108] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.011164] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.011228] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.011288] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.011344] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.011400] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.011455] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.011511] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.011565] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.011620] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.011675] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011730] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[1.011791] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.011847] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.011903] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.011959] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.012042] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.012107] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.012173] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.012269] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.012333] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.012408] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.012467] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.012527] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.012602] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.012666] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.012741] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.012811] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.012879] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.012940] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.013002] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.013063] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.013125] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.013187] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.013248] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013310] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[1.013372] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.013434] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.013496] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.013558] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.013619] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.013682] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.013743] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.013805] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.013867] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.013937] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.013998] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.014060] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.014121] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.014182] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.014243] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.014305] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.014367] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.014427] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.014488] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.014549] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.014610] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.014670] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.014731] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014792] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[1.014853] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.014913] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.014974] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.015036] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.015096] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.015157] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.015217] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.015278] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.015339] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.015399] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.015460] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.015521] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.015581] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.015642] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.015703] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.015764] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.015824] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.015885] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.015946] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.016007] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.016082] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.016145] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[1.016208] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016289] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[1.016354] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.016418] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.016483] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.016557] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.016622] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.016686] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.016750] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.016823] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.016903] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.016974] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.017035] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.017096] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.017157] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.017217] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.017289] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.017347] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.017405] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.017463] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.017523] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.017582] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.017641] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.017698] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.017756] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017814] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[1.017872] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.017930] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.017988] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018046] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[1.018104] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.018162] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.018219] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018277] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[1.018335] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.018393] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.018450] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018507] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[1.018565] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.018623] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.018681] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018738] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[1.018795] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.018853] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.018910] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018976] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[1.019034] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.019097] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.019156] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019212] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[1.019270] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.019328] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.019386] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019443] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[1.019502] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.019560] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.019619] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019677] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[1.019735] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.019793] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.019851] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019909] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[1.019987] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.020055] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.020152] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020233] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[1.020303] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.020396] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.020465] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020533] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[1.020601] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.020668] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.020736] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020809] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[1.020897] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.020956] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.021013] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021069] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[1.021126] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.021189] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[1.021246] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021303] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[1.021359] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.021414] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[1.021542] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021656] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[1.021723] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.021782] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.021841] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021899] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[1.021957] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.022015] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.022073] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022131] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[1.022188] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.022270] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.022342] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022398] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[1.022457] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[1.022525] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.022583] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022638] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[1.022694] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.022749] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.022803] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022857] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[1.022912] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.022966] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.023021] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023075] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[1.023129] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.023183] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.023250] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023319] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[1.023369] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[1.023418] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.023468] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023517] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[1.023566] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[1.023615] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.023663] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023711] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[1.023760] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[1.023808] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.023857] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023905] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[1.023954] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[1.024003] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.024052] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024100] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[1.024150] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[1.024204] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.024286] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024342] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[1.024407] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.024457] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.024506] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024556] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[1.024605] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[1.024655] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.024704] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024754] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[1.024809] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.024908] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[1.024970] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025020] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[1.025070] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.025120] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.025169] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025219] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[1.025268] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.025317] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.025366] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025415] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[1.025463] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.025512] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[1.025567] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025616] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[1.025665] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.025714] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[1.025762] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025811] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[1.025860] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.025908] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.025957] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026005] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[1.026054] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.026103] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.026152] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026200] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[1.026250] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.026303] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.026371] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026427] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[1.026484] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.026540] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.026597] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026653] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[1.026710] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.026767] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.026823] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026880] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[1.026937] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[1.026993] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.027050] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027107] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[1.027164] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.027220] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.027290] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027345] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[1.027401] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.027457] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.027512] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027569] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[1.027626] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.027682] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.027738] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027795] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[1.027851] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.027907] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.027962] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028018] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[1.028131] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.028293] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.028417] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028544] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[1.028671] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.028796] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.028936] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029063] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[1.029189] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.029315] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.029439] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029561] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[1.029682] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.029788] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.029894] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030001] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.030107] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.030213] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.030331] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030436] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[1.030575] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.030696] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.030802] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030907] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[1.031013] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.031118] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.031223] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031327] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[1.031443] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.031540] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.031637] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031734] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[1.031832] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.031930] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.032029] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032126] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[1.032255] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.032407] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.032509] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032612] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[1.032714] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.032859] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.033004] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033112] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[1.033220] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.033334] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.033443] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033568] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[1.033696] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.033882] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.034020] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034131] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[1.034244] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.034357] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.034469] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034597] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[1.034704] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.034812] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.034918] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035025] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[1.035131] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.035237] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.035354] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035459] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[1.035565] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.035670] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035775] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035879] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[1.035985] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.036125] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.036348] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036478] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[1.036608] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.036741] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.036884] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037025] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[1.037120] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.037216] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.037311] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037406] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[1.037501] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.037597] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.037692] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037786] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[1.037881] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.037977] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.038072] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038166] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[1.038262] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.038356] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.038452] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038547] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[1.038643] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.038738] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.038833] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038927] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[1.039022] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.039117] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.039211] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039326] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[1.039474] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.039583] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.039702] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039796] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[1.039902] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.040002] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.040097] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040191] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[1.040328] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.040439] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040534] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040629] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[1.040724] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.040852] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040995] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041090] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[1.041186] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.041281] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041486] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041664] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[1.041795] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.041926] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.042021] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042152] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[1.042283] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.042394] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.042509] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042638] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[1.042737] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042835] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.042932] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043030] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.043128] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.043226] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.043323] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043470] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.043575] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.043673] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.043771] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043897] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.043992] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.044088] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.044286] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044418] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.044549] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.044657] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.044765] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044926] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.045035] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.045143] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.045251] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045359] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.045467] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.045584] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.045690] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045791] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.045892] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.045992] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.046092] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046191] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.046291] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.046391] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.046491] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046591] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.046692] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.046792] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.046891] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046991] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.047092] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.047192] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.047292] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047391] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[1.047492] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.047605] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.047707] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047808] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[1.047910] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.048013] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.048115] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.048218] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.048398] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.048542] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.048672] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.048802] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.048959] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.049052] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.049145] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.049251] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.049372] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.049480] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.049588] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.049695] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.049802] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.049923] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050018] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[1.050113] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.050208] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.050303] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.050399] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.050494] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.050594] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.050690] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.050784] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.050879] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.050982] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.051078] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.051173] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.051280] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.051373] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.051466] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.051559] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.051651] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.051745] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.051837] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051930] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[1.052023] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.052116] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.052283] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052433] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[1.052540] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.052674] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.052802] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052954] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[1.053062] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.053165] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.053262] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053359] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[1.053458] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.053555] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.053653] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053750] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[1.053847] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.053945] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.054042] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054140] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[1.054238] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.054335] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.054432] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054529] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[1.054627] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.054725] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.054822] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054919] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[1.055017] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.055115] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.055212] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055314] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[1.055412] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.055510] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.055608] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055740] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[1.055837] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.055935] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.056051] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056183] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[1.056335] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.056449] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.056546] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056644] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[1.056742] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.056875] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.057010] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057108] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[1.057206] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.057316] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.057411] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057506] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[1.057601] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.057716] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.057824] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057932] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.058043] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.058138] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.058234] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058329] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[1.058425] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.058520] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.058644] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058754] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[1.058849] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.058945] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.059040] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059135] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[1.059231] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.059337] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.059435] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059528] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[1.059621] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.059714] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.059807] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059900] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[1.059993] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.060085] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.060200] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060364] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.060496] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.060604] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.060713] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060846] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.060980] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.061094] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.061202] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061311] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.061468] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.061601] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.061711] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061857] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.061968] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.062089] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.062180] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062313] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.062435] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.062555] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.062674] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062767] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.062861] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.062954] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.063047] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063160] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.063285] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.063392] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.063485] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063578] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.063670] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.063764] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.063856] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063949] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.064042] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.064135] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.064244] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064340] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.064438] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.064532] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.064625] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064718] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.064837] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.064959] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.065052] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065144] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.065237] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.065330] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.065423] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065515] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.065617] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.065705] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.065793] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065881] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.065969] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.066057] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.066145] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066233] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.066358] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.066457] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.066574] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066675] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.066775] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.066877] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.066977] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067077] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.067178] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.067293] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.067396] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067498] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.067601] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.067704] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.067806] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067908] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.068011] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.068114] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.068229] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068410] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.068525] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.068634] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.068742] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068885] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.069030] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.069140] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.069259] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069383] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.069510] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.069632] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.069737] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069848] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.069968] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.070089] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.070181] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070303] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.070423] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.070527] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.070635] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070756] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.070877] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.070969] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071098] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071214] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.071319] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.071435] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071551] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071646] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.071742] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.071837] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071932] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.072027] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.072123] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072218] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[1.072330] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.072426] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072541] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.072669] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.072764] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072907] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073003] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.073100] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.073195] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.073290] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073385] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.073480] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.073607] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.073720] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073821] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.073918] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.074013] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.074108] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074203] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.074298] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.074394] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.074489] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074584] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.074688] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.074783] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.074878] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074973] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.075069] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.075164] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.075258] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075353] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.075449] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.075545] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.075639] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075734] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.075829] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.075925] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.076021] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076116] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.076212] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.076363] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076475] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.076571] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.076667] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.076762] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076895] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.077006] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.077102] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.077197] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077292] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.077387] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.077483] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.077588] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077678] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.077768] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.077858] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.077948] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.078039] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.078134] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.078225] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.078315] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.078405] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.078496] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.078586] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.078677] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.078767] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.078857] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.078948] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.079042] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079150] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.079245] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.079340] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.079435] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.079531] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.079626] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.079721] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.079827] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.079916] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.080006] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.080096] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.080186] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.080293] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.080396] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.080477] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.080559] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080640] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.080722] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.080808] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.080945] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081105] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.081221] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.081345] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.081420] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081492] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.081577] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.081635] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.081693] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081752] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.081810] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.081867] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.081925] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081982] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.082040] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.082103] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.082160] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082217] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.082287] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.082344] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.082400] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082456] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.082511] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.082567] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.082623] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082677] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.082732] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.082797] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.082852] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082907] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.082962] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.083018] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.083073] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083128] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.083184] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.083239] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.083294] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083349] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.083404] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.083460] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.083515] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083570] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.083626] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.083682] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.083738] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083792] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.083848] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.083908] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.083964] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084024] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.084080] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.084137] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.084228] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084331] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.084457] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.084608] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.084733] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084867] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.084997] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.085094] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085191] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.085289] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.085386] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.085484] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085580] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.085678] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.085776] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.085873] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085970] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.086067] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.086164] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.086261] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086358] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.086455] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.086553] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.086650] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086746] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.086843] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.086948] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.087045] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087142] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.087239] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.087346] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.087438] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087530] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.087623] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.087715] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.087807] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087900] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.087993] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.088085] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.088185] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.088314] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.088425] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.088518] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.088611] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088703] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.088796] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.088960] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.089053] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089145] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.089238] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.089331] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.089424] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089517] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.089611] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.089704] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.089798] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089892] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.089985] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.090078] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.090180] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090273] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.090366] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.090459] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.090551] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090644] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.090737] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.090830] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090922] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.091016] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.091109] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.091202] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091294] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.091387] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.091480] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.091573] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.091666] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.091759] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.091851] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.091947] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.092040] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092133] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.092240] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.092422] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.092551] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.092672] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.092785] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.092941] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.093050] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.093157] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093264] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.093372] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.093480] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.093597] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093699] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.093801] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.093903] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.094005] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094106] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.094208] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.094310] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094412] (turtle_brick) StdoutLine: {'line': b'3     E128 continuation line under-indented for visual indent\n'}
[1.094514] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.094615] (turtle_brick) StdoutLine: {'line': b'27    E225 missing whitespace around operator\n'}
[1.094717] (turtle_brick) StdoutLine: {'line': b"77    E231 missing whitespace after ','\n"}
[1.094819] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.094921] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.095023] (turtle_brick) StdoutLine: {'line': b"3     E262 inline comment should start with '# '\n"}
[1.095125] (turtle_brick) StdoutLine: {'line': b"34    E265 block comment should start with '# '\n"}
[1.095227] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.095329] (turtle_brick) StdoutLine: {'line': b'8     E302 expected 2 blank lines, found 0\n'}
[1.095432] (turtle_brick) StdoutLine: {'line': b'7     E303 too many blank lines (2)\n'}
[1.095534] (turtle_brick) StdoutLine: {'line': b'9     E501 line too long (115 > 99 characters)\n'}
[1.095636] (turtle_brick) StdoutLine: {'line': b"33    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.095738] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.095841] (turtle_brick) StdoutLine: {'line': b'39    W291 trailing whitespace\n'}
[1.095943] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.096045] (turtle_brick) StdoutLine: {'line': b'26    W293 blank line contains whitespace\n'}
[1.096147] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.096285] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.096415] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.096517] (turtle_brick) StdoutLine: {'line': b'283 errors\n'}
[1.096619] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.096720] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 176\n"}
[1.096861] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 34\n"}
[1.096977] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 73\n"}
[1.097069] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.097161] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.097254] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.097346] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.097438] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.097530] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.097622] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.097715] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.097807] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.097899] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.097996] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.098089] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.098181] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.098273] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.098365] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.098457] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.098550] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.098655] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.098747] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.098838] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.098929] (turtle_brick) StderrLine: {'line': b'\n'}
[1.099020] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.099111] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.099203] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.099296] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.099389] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.099482] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.099576] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.099668] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.099760] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.099853] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.099945] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.100037] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.100129] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.100222] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.100360] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.100479] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.100568] (-) TimerEvent: {}
[1.100681] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.100792] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.100986] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.101184] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.101313] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.101454] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.101591] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.101738] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.101863] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.101995] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.102120] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.102273] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.102391] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.102535] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.102628] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.102721] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.102814] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.102906] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.102999] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.103093] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.103186] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.103294] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.103388] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.103484] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.103580] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.103675] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.103771] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.103866] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.103961] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.104055] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.104150] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.104282] (turtle_brick) StdoutLine: {'line': b'20 errors\n'}
[1.104407] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.104502] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.104597] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 283 code styl...\n'}
[1.104692] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.104787] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.40s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.104898] (turtle_brick) CommandEnded: {'returncode': 1}
[1.105173] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.105198] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.105527] (-) EventReactorShutdown: {}
