[0.000000] (-) TimerEvent: {}
[0.000151] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000291] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000320] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.010515] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.098959] (-) TimerEvent: {}
[0.199246] (-) TimerEvent: {}
[0.261706] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.275345] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.281449] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.281792] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.282142] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.282302] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.282578] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.282897] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-0153 - Experimental\n'}
[0.283071] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.283210] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.283331] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.283475] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.283617] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.283756] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.283875] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.283999] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.284128] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.284247] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.284395] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.284543] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.284699] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.284862] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299345] (-) TimerEvent: {}
[0.339493] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.339700] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.399453] (-) TimerEvent: {}
[0.401741] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.401921] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.402045] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.402158] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.411057] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.411402] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.419947] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.14 sec\n'}
[0.420363] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.420539] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.420685] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.420838] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.420984] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.476151] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.476349] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.499566] (-) TimerEvent: {}
[0.551936] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.552278] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.557597] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.557858] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.557990] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.599660] (-) TimerEvent: {}
[0.636064] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.636270] (turtle_brick) StdoutLine: {'line': b'collected 3 items                                                              \x1b[0m\n'}
[0.636582] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.644408] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 33%]\x1b[0m\n'}
[0.699784] (-) TimerEvent: {}
[0.800113] (-) TimerEvent: {}
[0.845971] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 66%]\x1b[0m\n'}
[0.900209] (-) TimerEvent: {}
[0.916871] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.917144] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.917278] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.917408] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.917558] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.933667] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.933897] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.934029] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.944870] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.945113] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.954998] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.53 sec\n'}
[0.955346] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.955525] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.955680] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.955830] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.955978] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.14 sec*proc (1 test)\n'}
[0.956139] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.67 sec*proc (2 tests)\n'}
[0.956290] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.53 sec*proc (1 test)\n'}
[0.956438] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.956585] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.67 sec\n'}
[0.956732] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.956879] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.957027] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.961676] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.962352] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 255 code style errors / warnings:\x1b[0m\n'}
[0.962654] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:3:1: F401 'setuptools.find_packages' imported but unused\x1b[0m\n"}
[0.963138] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:14:100: E501 line too long (174 > 99 characters)\x1b[0m\n'}
[0.963985] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:18:43: E231 missing whitespace after ','\x1b[0m\n"}
[0.965320] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:24:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.966584] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:15:1: F401 'xmlrpc.client.Boolean' imported but unused\x1b[0m\n"}
[0.966733] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:19:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.966872] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:23:1: F401 'math.pi' imported but unused\x1b[0m\n"}
[0.967040] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:24:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.967210] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:25:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\x1b[0m\n"}
[0.967405] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:26:42: W291 trailing whitespace\x1b[0m\n'}
[0.967617] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:28:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\x1b[0m\n"}
[0.967777] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:32:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.967918] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:35:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.968067] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:43:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.968201] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.968333] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:50:33: W291 trailing whitespace\x1b[0m\n'}
[0.968469] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.968599] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.968740] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.968894] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.969049] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.969191] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.969335] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.969472] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.969621] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.969772] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.969922] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.970057] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.970199] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.970325] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.970468] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.970613] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.970755] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.970936] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\x1b[0m\n"}
[0.971078] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.971208] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.971328] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.971462] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.971586] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.971711] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.971835] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.971997] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.972118] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:192:26: W291 trailing whitespace\x1b[0m\n'}
[0.972251] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\x1b[0m\n"}
[0.972385] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\x1b[0m\n"}
[0.972505] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\x1b[0m\n"}
[0.972625] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\x1b[0m\n"}
[0.972775] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.972891] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.973010] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.973141] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\x1b[0m\n"}
[0.973258] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.973370] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.973483] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.973595] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\x1b[0m\n"}
[0.973707] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\x1b[0m\n'}
[0.973850] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.973964] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\x1b[0m\n'}
[0.974090] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.974218] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.974330] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.974441] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\x1b[0m\n"}
[0.974568] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.974684] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.974828] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.974939] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.975049] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.975159] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:272:30: W291 trailing whitespace\x1b[0m\n'}
[0.975270] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\x1b[0m\n'}
[0.975379] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.975484] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\x1b[0m\n"}
[0.975592] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.975701] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\x1b[0m\n'}
[0.975810] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:294:19: W291 trailing whitespace\x1b[0m\n'}
[0.975919] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:295:1: W391 blank line at end of file\x1b[0m\n'}
[0.976028] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:5:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.976137] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:5:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.976242] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:34: W291 trailing whitespace\x1b[0m\n'}
[0.976369] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.976495] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.976642] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:42: W291 trailing whitespace\x1b[0m\n'}
[0.976766] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:15:45: W291 trailing whitespace\x1b[0m\n'}
[0.976873] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:12: W291 trailing whitespace\x1b[0m\n'}
[0.976990] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:17:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.977094] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.977196] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.977298] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:25:33: W291 trailing whitespace\x1b[0m\n'}
[0.977401] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.977502] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.977611] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:41:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.977714] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:41:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.977862] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:42:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.977983] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:42:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.978104] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:43:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.978263] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:43:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.978388] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:44:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.978513] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:44:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.978638] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.978760] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.978955] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.979084] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:47:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.979207] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:47:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.979330] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:47:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.979452] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:49:53: W291 trailing whitespace\x1b[0m\n'}
[0.979586] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:53:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.979712] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.979837] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:19: W291 trailing whitespace\x1b[0m\n'}
[0.979980] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:28: W291 trailing whitespace\x1b[0m\n'}
[0.980247] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:82:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.980909] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:88:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.981474] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:95:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.981611] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.981746] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:105:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.981888] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:106:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.982021] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:107:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.982134] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:107:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.982256] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:107:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.982367] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:107:120: E202 whitespace before ')'\x1b[0m\n"}
[0.982487] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:120:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.982597] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:126:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.982704] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:127:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.982811] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:134:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.982926] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:135:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.983037] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:135:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.983314] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:137:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.983428] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:137:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.983540] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.983650] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:140:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.983758] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:143:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.983865] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:144:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.983972] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:145:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.984080] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:146:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.984190] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:147:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.984301] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:150:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.984407] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:151:68: W291 trailing whitespace\x1b[0m\n'}
[0.984513] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:152:68: W291 trailing whitespace\x1b[0m\n'}
[0.984619] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:153:48: W291 trailing whitespace\x1b[0m\n'}
[0.984725] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:155:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.984832] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:56: W291 trailing whitespace\x1b[0m\n'}
[0.984938] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.985044] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:41: E225 missing whitespace around operator\x1b[0m\n'}
[0.985152] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:170:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.985268] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:171:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.985375] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.985492] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:52: E225 missing whitespace around operator\x1b[0m\n'}
[0.985600] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:57: W291 trailing whitespace\x1b[0m\n'}
[0.985709] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:176:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.985832] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.985941] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.986048] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:184:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.986164] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:186:1: E303 too many blank lines (3)\x1b[0m\n'}
[0.986279] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:188:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.986395] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:190:19: W291 trailing whitespace\x1b[0m\n'}
[0.986509] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W391 blank line at end of file\x1b[0m\n'}
[0.986639] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:15:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.986757] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:19:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.986889] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:20:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.987018] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:21:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.987145] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:22:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.987271] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:22:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.987397] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:24:42: W291 trailing whitespace\x1b[0m\n'}
[0.987523] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:12: W291 trailing whitespace\x1b[0m\n'}
[0.987648] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:27:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.987795] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:30:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.987925] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:36:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.988045] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:48:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.988161] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:49:33: W291 trailing whitespace\x1b[0m\n'}
[0.988321] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:54:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.988459] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:55:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.988603] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:62:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.988730] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.988851] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.988970] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.989088] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.989206] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.989324] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.989443] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.989561] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.989678] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.989837] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.989955] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:72:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.990068] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:72:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.990183] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:72:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.990300] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.990415] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.990545] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.990651] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.990756] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.990885] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.991002] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:75:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.991120] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:75:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.991236] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.991353] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:78:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.991470] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:79:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.991586] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.991722] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:103:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.991856] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:103:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.991989] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:107:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.992112] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:113:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.992232] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:114:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.992353] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.992470] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.992600] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:129:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.992709] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:131:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.992817] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:131:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.992927] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:132:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.993039] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:133:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.993151] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:133:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.993262] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:133:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.993374] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:133:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.993484] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:142:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.993592] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.993701] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:144:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.993856] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.993971] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:151:21: W292 no newline at end of file\x1b[0m\n'}
[0.994085] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.994219] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.994332] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.994447] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:11:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.994562] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.994678] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:14:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.994795] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.994923] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:16:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.995057] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:18:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.995177] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:18:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.995303] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:19:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.995423] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:19:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.995541] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:19:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.995656] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:22:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.995784] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:36:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.995894] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:36:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.996000] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:43:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.996104] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:49:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.996211] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:68:7: W292 no newline at end of file\x1b[0m\n'}
[0.996347] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.996469] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.996585] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.996694] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.996801] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.996922] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.997035] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.997145] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:40:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.997255] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:40:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.997363] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:40:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.997480] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.997583] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:44:7: W292 no newline at end of file\x1b[0m\n'}
[0.997690] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.997841] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.997957] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.998068] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.998182] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.998296] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.998424] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.998537] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:42:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.998652] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:43:7: W292 no newline at end of file\x1b[0m\n'}
[0.998768] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.998881] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.998996] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999109] (turtle_brick) StdoutLine: {'line': b"./setup.py:3:1: F401 'setuptools.find_packages' imported but unused\n"}
[0.999224] (turtle_brick) StdoutLine: {'line': b'from setuptools import setup, find_packages\n'}
[0.999339] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.999451] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999566] (turtle_brick) StdoutLine: {'line': b'./setup.py:14:100: E501 line too long (174 > 99 characters)\n'}
[0.999682] (turtle_brick) StdoutLine: {'line': b"        ('share/' + package_name, ['package.xml', 'launch/show_turtle.launch.py', 'config/turtle_urdf.rviz', 'launch/run_turtle.launch.py', 'launch/turtle_arena.launch.py']),\n"}
[0.999810] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.999930] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000042] (turtle_brick) StdoutLine: {'line': b"./setup.py:18:43: E231 missing whitespace after ','\n"}
[1.000157] (turtle_brick) StdoutLine: {'line': b"    install_requires=['setuptools', 'urdf','rviz'],\n"}
[1.000266] (-) TimerEvent: {}
[1.000404] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.000533] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000647] (turtle_brick) StdoutLine: {'line': b"./setup.py:24:28: E231 missing whitespace after ','\n"}
[1.000763] (turtle_brick) StdoutLine: {'line': b"    tests_require=['pytest','ament_lint_auto'],\n"}
[1.000907] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.001025] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001143] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:15:1: F401 'xmlrpc.client.Boolean' imported but unused\n"}
[1.001257] (turtle_brick) StdoutLine: {'line': b'from xmlrpc.client import Boolean\n'}
[1.001376] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.001497] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001619] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:19:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.001751] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.001890] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.002020] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002134] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:23:1: F401 'math.pi' imported but unused\n"}
[1.002247] (turtle_brick) StdoutLine: {'line': b'from math import pi\n'}
[1.002358] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.002485] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002591] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:24:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.002697] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.002799] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.002901] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003014] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:25:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\n"}
[1.003121] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt\n'}
[1.003232] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.003347] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003465] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:26:42: W291 trailing whitespace\n'}
[1.003582] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.003697] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.003813] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003931] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:28:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\n"}
[1.004047] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import MarkerArray\n'}
[1.004164] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.004281] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004397] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:32:1: E265 block comment should start with '# '\n"}
[1.004513] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[1.004651] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.004770] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004907] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:35:1: E302 expected 2 blank lines, found 1\n'}
[1.005028] (turtle_brick) StdoutLine: {'line': b'class BState(Enum):\n'}
[1.005151] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.005273] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005392] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:43:1: E302 expected 2 blank lines, found 1\n'}
[1.005508] (turtle_brick) StdoutLine: {'line': b'class Arena(Node):\n'}
[1.005624] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.005750] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005902] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\n"}
[1.006022] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.006136] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.006252] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006367] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:50:33: W291 trailing whitespace\n'}
[1.006495] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.006603] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.006730] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006854] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\n"}
[1.006971] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.007073] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.007172] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007272] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\n"}
[1.007393] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.007514] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.007640] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007780] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\n"}
[1.007890] (turtle_brick) StdoutLine: {'line': b'        #setting state of brick\n'}
[1.008025] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.008156] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008263] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\n"}
[1.008372] (turtle_brick) StdoutLine: {'line': b'        #set up subscribers\n'}
[1.008482] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.008591] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008700] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\n"}
[1.008809] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.008918] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.009028] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009135] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\n"}
[1.009240] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.009366] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.009476] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009590] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\n"}
[1.009713] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.009884] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.010019] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010178] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\n"}
[1.010353] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.010517] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.010648] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010749] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\n"}
[1.010848] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.010974] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.011085] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011192] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\n"}
[1.011310] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.011425] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.011540] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011687] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\n"}
[1.011844] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[1.012012] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.012132] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012250] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\n"}
[1.012372] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[1.012494] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.012619] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012744] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\n"}
[1.012869] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[1.012997] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.013117] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013237] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\n"}
[1.013358] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[1.013479] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.013600] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013719] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\n'}
[1.013852] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.013976] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.014094] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014207] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\n'}
[1.014326] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.014443] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.014566] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014687] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\n"}
[1.014800] (turtle_brick) StdoutLine: {'line': b'        #initialize services\n'}
[1.014921] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.015036] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015156] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\n"}
[1.015271] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[1.015386] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[1.015502] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015616] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\n"}
[1.015732] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[1.015850] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.015963] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016075] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\n"}
[1.016187] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[1.016298] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.016410] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016521] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\n"}
[1.016633] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[1.016748] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.016860] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017009] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\n'}
[1.017114] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.017217] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.017327] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017421] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\n"}
[1.017512] (turtle_brick) StdoutLine: {'line': b'        #creating brick marker\n'}
[1.017605] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.017698] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017855] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\n"}
[1.017950] (turtle_brick) StdoutLine: {'line': b'        #creating wall markers\n'}
[1.018044] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.018142] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018236] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\n'}
[1.018344] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[1.018471] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.018567] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018665] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\n"}
[1.018764] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[1.018862] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.018964] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019060] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:192:26: W291 trailing whitespace\n'}
[1.019160] (turtle_brick) StdoutLine: {'line': b'        self.brickz = 0.0 \n'}
[1.019260] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[1.019356] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019452] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\n"}
[1.019552] (turtle_brick) StdoutLine: {'line': b'        self.wall = self.create_timer(0.5,self.wall_callback)\n'}
[1.019671] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.019822] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019926] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\n"}
[1.020030] (turtle_brick) StdoutLine: {'line': b'    def place_callback(self, request,response):\n'}
[1.020134] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.020236] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020340] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\n"}
[1.020444] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[1.020548] (turtle_brick) StdoutLine: {'line': b'                                  ^\n'}
[1.020651] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020753] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\n"}
[1.020855] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[1.020981] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.021117] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021260] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\n'}
[1.021376] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.021529] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.021648] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021842] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\n"}
[1.022022] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.022129] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.022239] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022344] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\n'}
[1.022453] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[1.022561] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.022666] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022769] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\n"}
[1.022873] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[1.022977] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.023080] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023182] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\n"}
[1.023285] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[1.023400] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.023516] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023618] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\n"}
[1.023719] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[1.023822] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.023923] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024023] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\n"}
[1.024126] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[1.024242] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.024355] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024466] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\n"}
[1.024581] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self, request,response):\n'}
[1.024689] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[1.024801] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024912] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\n'}
[1.025023] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[1.025133] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.025241] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025350] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\n"}
[1.025461] (turtle_brick) StdoutLine: {'line': b'        #publishing wall markers\n'}
[1.025569] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.025677] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025801] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\n'}
[1.025914] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[1.026021] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.026123] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026226] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\n'}
[1.026327] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.026425] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.026528] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026630] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\n'}
[1.026732] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.026832] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.026964] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027068] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\n'}
[1.027197] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.027315] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.027406] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027497] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\n"}
[1.027590] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.027685] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.027779] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027878] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\n"}
[1.027977] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.028076] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.028174] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028297] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\n"}
[1.028419] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.028530] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.028627] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028724] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\n'}
[1.028849] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.028942] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.029032] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029129] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\n"}
[1.029229] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[1.029325] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.029424] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029522] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\n"}
[1.029621] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[1.029719] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.029871] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029970] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:272:30: W291 trailing whitespace\n'}
[1.030064] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[1.030166] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[1.030268] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030372] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\n'}
[1.030500] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[1.030624] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.030724] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030820] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\n'}
[1.030913] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.031008] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.031116] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031216] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\n"}
[1.031316] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.031414] (turtle_brick) StdoutLine: {'line': b'                                                                 ^\n'}
[1.031515] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031616] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\n'}
[1.031720] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.031862] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.031999] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032144] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\n'}
[1.032267] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[1.032377] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.032484] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032590] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:294:19: W291 trailing whitespace\n'}
[1.032699] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.032809] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.032918] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033025] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:295:1: W391 blank line at end of file\n'}
[1.033131] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033237] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.033359] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033468] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:5:1: F401 'tokenize.Double' imported but unused\n"}
[1.033578] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[1.033684] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.033832] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033936] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:5:1: F401 'tokenize.String' imported but unused\n"}
[1.034044] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[1.034150] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.034253] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034351] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:34: W291 trailing whitespace\n'}
[1.034469] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[1.034590] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.034687] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034782] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:13:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[1.034878] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[1.034973] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035066] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035160] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[1.035255] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.035350] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035444] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035539] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:14:42: W291 trailing whitespace\n'}
[1.035635] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.035731] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.035830] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035936] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:15:45: W291 trailing whitespace\n'}
[1.036059] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[1.036166] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.036273] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036380] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:12: W291 trailing whitespace\n'}
[1.036486] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.036592] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.036696] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036808] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17:1: E265 block comment should start with '# '\n"}
[1.036934] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[1.037075] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.037234] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037362] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:1: E302 expected 2 blank lines, found 1\n'}
[1.037497] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[1.037602] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.037705] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037856] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:24:9: E265 block comment should start with '# '\n"}
[1.037960] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.038068] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.038182] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038282] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:25:33: W291 trailing whitespace\n'}
[1.038390] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.038550] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.038700] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038857] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:30:32: E231 missing whitespace after ','\n"}
[1.038996] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.039108] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.039219] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039326] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:31:27: E231 missing whitespace after ','\n"}
[1.039473] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.039630] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.039788] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039951] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:41:65: E231 missing whitespace after ','\n"}
[1.040093] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.040278] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.040419] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040580] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:41:81: E231 missing whitespace after ','\n"}
[1.040719] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.040895] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.041048] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041180] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:42:55: E231 missing whitespace after ','\n"}
[1.041357] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.041461] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.041579] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041685] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:42:63: E231 missing whitespace after ','\n"}
[1.041850] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.041965] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.042095] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042258] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:43:51: E231 missing whitespace after ','\n"}
[1.042374] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.042487] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.042603] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042748] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:43:62: E231 missing whitespace after ','\n"}
[1.042876] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.042990] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.043104] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043216] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:44:52: E231 missing whitespace after ','\n"}
[1.043326] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.043436] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.043549] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043664] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:44:61: E231 missing whitespace after ','\n"}
[1.043778] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.043894] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.044018] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044128] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:61: E231 missing whitespace after ','\n"}
[1.044243] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.044359] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.044473] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044586] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:74: E231 missing whitespace after ','\n"}
[1.044701] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.044817] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[1.044935] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045048] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:93: E231 missing whitespace after ','\n"}
[1.045162] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.045277] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[1.045392] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045526] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:47:54: E231 missing whitespace after ','\n"}
[1.045642] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.045783] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.045904] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046044] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:47:62: E231 missing whitespace after ','\n"}
[1.046186] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.046298] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.046412] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046526] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:47:81: E231 missing whitespace after ','\n"}
[1.046641] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.046757] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.046873] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047000] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:49:53: W291 trailing whitespace\n'}
[1.047152] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[1.047324] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.047463] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047572] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:53:1: W293 blank line contains whitespace\n'}
[1.047678] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.047790] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.047900] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048009] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:9: E265 block comment should start with '# '\n"}
[1.048121] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.048231] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.048368] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048474] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:62:19: W291 trailing whitespace\n'}
[1.048582] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.048688] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.048794] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048900] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:28: W291 trailing whitespace\n'}
[1.049022] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[1.049129] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.049235] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049338] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:82:9: E265 block comment should start with '# '\n"}
[1.049441] (turtle_brick) StdoutLine: {'line': b'        #joint state publisher\n'}
[1.049544] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.049651] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049784] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:88:23: E225 missing whitespace around operator\n'}
[1.049921] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[1.050025] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.050130] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050236] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:95:9: E265 block comment should start with '# '\n"}
[1.050343] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel publisher\n'}
[1.050451] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.050558] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050665] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[1.050782] (turtle_brick) StdoutLine: {'line': b'        #create pose publisher\n'}
[1.050889] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.050994] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051099] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:105:1: W293 blank line contains whitespace\n'}
[1.051204] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.051312] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.051419] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051527] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:106:27: E231 missing whitespace after ','\n"}
[1.051632] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[1.051740] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.051861] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051972] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:107:76: E231 missing whitespace after ','\n"}
[1.052085] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.052211] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[1.052372] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052513] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:107:96: E231 missing whitespace after ','\n"}
[1.052620] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.052725] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.052835] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052952] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:107:100: E501 line too long (121 > 99 characters)\n'}
[1.053058] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.053163] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.053268] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053373] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:107:120: E202 whitespace before ')'\n"}
[1.053479] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.053583] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[1.053696] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053854] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:120:27: E231 missing whitespace after ','\n"}
[1.053960] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.054067] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.054171] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054275] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:126:1: W293 blank line contains whitespace\n'}
[1.054378] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.054508] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.054652] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054799] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:127:9: E265 block comment should start with '# '\n"}
[1.054908] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[1.055049] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.055187] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055324] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:134:1: W293 blank line contains whitespace\n'}
[1.055462] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.055567] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.055704] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055816] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:135:9: E303 too many blank lines (2)\n'}
[1.055933] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.056052] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.056171] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056270] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:135:9: E265 block comment should start with '# '\n"}
[1.056381] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.056484] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.056633] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056745] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:137:46: E231 missing whitespace after ','\n"}
[1.056867] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.056977] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.057110] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057255] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:137:58: E231 missing whitespace after ','\n"}
[1.057374] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.057486] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.057611] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057709] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:139:1: W293 blank line contains whitespace\n'}
[1.057873] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.058005] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.058128] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058229] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:140:9: E265 block comment should start with '# '\n"}
[1.058388] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.058518] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.058721] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058930] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:143:1: W293 blank line contains whitespace\n'}
[1.059108] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.059309] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.059480] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059654] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:144:9: E265 block comment should start with '# '\n"}
[1.059846] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.060004] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.060146] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060291] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:145:34: E225 missing whitespace around operator\n'}
[1.060454] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.060610] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.060764] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060916] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:146:34: E225 missing whitespace around operator\n'}
[1.061085] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.061242] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.061403] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061555] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:147:34: E225 missing whitespace around operator\n'}
[1.061716] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.061884] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.062027] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062188] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:150:9: E265 block comment should start with '# '\n"}
[1.062353] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.062540] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.062669] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062799] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:151:68: W291 trailing whitespace\n'}
[1.062931] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.063070] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.063195] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063479] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:152:68: W291 trailing whitespace\n'}
[1.063784] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.064193] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.064545] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065133] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:153:48: W291 trailing whitespace\n'}
[1.065517] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.065691] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.065798] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065869] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:155:9: E265 block comment should start with '# '\n"}
[1.065936] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.066004] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.066070] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066136] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:56: W291 trailing whitespace\n'}
[1.066201] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.066266] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.066331] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066396] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:161:9: E265 block comment should start with '# '\n"}
[1.066473] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.066535] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.066595] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066663] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:41: E225 missing whitespace around operator\n'}
[1.066727] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.066797] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.066875] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066942] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:170:1: W293 blank line contains whitespace\n'}
[1.067010] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.067078] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.067156] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067221] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:171:9: E265 block comment should start with '# '\n"}
[1.067285] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.067397] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.067478] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067585] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[1.067655] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.067748] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.067816] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067884] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:52: E225 missing whitespace around operator\n'}
[1.067953] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.068022] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.068090] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068160] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:57: W291 trailing whitespace\n'}
[1.068228] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.068311] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.068375] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068440] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:176:34: E225 missing whitespace around operator\n'}
[1.068505] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.068570] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.068634] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068698] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:34: E225 missing whitespace around operator\n'}
[1.068763] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.068828] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.068901] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068957] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:183:1: W293 blank line contains whitespace\n'}
[1.069013] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.069068] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069123] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069211] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:184:1: W293 blank line contains whitespace\n'}
[1.069266] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.069321] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069376] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069432] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:186:1: E303 too many blank lines (3)\n'}
[1.069523] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.069600] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069667] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069741] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:188:16: E225 missing whitespace around operator\n'}
[1.069815] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.069884] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.069940] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069996] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:190:19: W291 trailing whitespace\n'}
[1.070052] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.070115] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.070171] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070226] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W391 blank line at end of file\n'}
[1.070282] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070338] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.070414] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070480] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:15:1: F401 'cmath.sqrt' imported but unused\n"}
[1.070552] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.070607] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.070661] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070716] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:19:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.070772] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.070832] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.070888] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070943] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:20:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.070999] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.071054] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071109] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071164] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:21:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.071221] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.071276] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071331] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071385] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:22:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.071441] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.071496] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071551] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071604] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:22:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.071660] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.071724] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071796] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071852] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:24:42: W291 trailing whitespace\n'}
[1.071955] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.072043] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.072103] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072162] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:12: W291 trailing whitespace\n'}
[1.072244] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.072314] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.072421] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072491] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:27:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.072601] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.072686] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072745] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072805] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:30:1: E302 expected 2 blank lines, found 1\n'}
[1.072864] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.072923] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072983] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073072] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:36:1: E302 expected 2 blank lines, found 1\n'}
[1.073130] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.073228] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.073303] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073360] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:48:9: E265 block comment should start with '# '\n"}
[1.073418] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.073475] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.073533] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073590] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:49:33: W291 trailing whitespace\n'}
[1.073648] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.073705] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.073806] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073884] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:54:32: E231 missing whitespace after ','\n"}
[1.073942] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.074000] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.074081] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074161] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:55:27: E231 missing whitespace after ','\n"}
[1.074219] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.074277] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.074334] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074426] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:62:9: E265 block comment should start with '# '\n"}
[1.074514] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.074594] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.074659] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074720] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:9: E265 block comment should start with '# '\n"}
[1.074781] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.074841] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.074900] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074960] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.075020] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.075081] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.075151] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075207] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:55: E231 missing whitespace after ','\n"}
[1.075263] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.075320] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.075377] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075433] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:64: E231 missing whitespace after ','\n"}
[1.075489] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.075545] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.075600] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075655] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:84: E231 missing whitespace after ','\n"}
[1.075711] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.075766] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.075821] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075876] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:57: E231 missing whitespace after ','\n"}
[1.075932] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.075988] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.076048] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076103] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:85: E231 missing whitespace after ','\n"}
[1.076157] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.076212] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.076267] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076321] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.076375] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.076435] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.076490] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076543] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:85: E231 missing whitespace after ','\n"}
[1.076597] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.076651] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.076706] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076759] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.076814] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.076881] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.076937] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076992] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:72:28: E225 missing whitespace around operator\n'}
[1.077046] (turtle_brick) StdoutLine: {'line': b"        self.brick_land_pub= self.create_publisher(Pose,'/land',10)\n"}
[1.077102] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.077183] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077258] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:72:56: E231 missing whitespace after ','\n"}
[1.077313] (turtle_brick) StdoutLine: {'line': b"        self.brick_land_pub= self.create_publisher(Pose,'/land',10)\n"}
[1.077394] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.077474] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077554] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:72:64: E231 missing whitespace after ','\n"}
[1.077622] (turtle_brick) StdoutLine: {'line': b"        self.brick_land_pub= self.create_publisher(Pose,'/land',10)\n"}
[1.077689] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.077772] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077842] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:22: E225 missing whitespace around operator\n'}
[1.077914] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.077971] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.078028] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078085] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:73:57: E231 missing whitespace after ','\n"}
[1.078160] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.078235] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.078293] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078352] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:73:70: E231 missing whitespace after ','\n"}
[1.078450] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.078535] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.078594] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078658] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:74:22: E225 missing whitespace around operator\n'}
[1.078717] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.078776] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.078835] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078894] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:50: E231 missing whitespace after ','\n"}
[1.078953] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.079012] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.079072] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079131] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:58: E231 missing whitespace after ','\n"}
[1.079190] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.079248] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.079307] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079364] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:75:55: E231 missing whitespace after ','\n"}
[1.079422] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.079480] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.079538] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079596] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:75:65: E231 missing whitespace after ','\n"}
[1.079653] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.079711] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.079769] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079826] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:76:9: E265 block comment should start with '# '\n"}
[1.079884] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.079942] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.079999] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080120] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:78:1: W293 blank line contains whitespace\n'}
[1.080247] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.080422] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.080503] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080613] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:79:9: E265 block comment should start with '# '\n"}
[1.080722] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.080793] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.080902] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080971] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:1: W293 blank line contains whitespace\n'}
[1.081058] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.081148] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.081219] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081323] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:103:5: E303 too many blank lines (3)\n'}
[1.081414] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.081484] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.081555] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081625] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:103:28: E231 missing whitespace after ','\n"}
[1.081696] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.081829] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.081899] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081968] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:107:100: E501 line too long (100 > 99 characters)\n'}
[1.082043] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.082111] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.082179] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082240] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:113:1: W293 blank line contains whitespace\n'}
[1.082300] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.082374] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.082469] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082542] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:114:28: E231 missing whitespace after ','\n"}
[1.082602] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.082662] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.082721] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082781] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:5: E303 too many blank lines (2)\n'}
[1.082841] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.082901] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.082960] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083020] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:124:27: E231 missing whitespace after ','\n"}
[1.083079] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.083139] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.083199] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083258] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:129:40: E225 missing whitespace around operator\n'}
[1.083318] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.083378] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.083437] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083497] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:131:13: E265 block comment should start with '# '\n"}
[1.083557] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.083618] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.083677] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083737] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:131:100: E501 line too long (142 > 99 characters)\n'}
[1.083797] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.083858] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.083919] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083978] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:132:100: E501 line too long (155 > 99 characters)\n'}
[1.084039] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.084100] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.084161] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084221] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:133:28: E225 missing whitespace around operator\n'}
[1.084282] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.084342] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.084402] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084461] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:133:39: E261 at least two spaces before inline comment\n'}
[1.084522] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.084589] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.084650] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084710] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:133:40: E262 inline comment should start with '# '\n"}
[1.084798] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.084871] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.084933] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084995] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:133:100: E501 line too long (106 > 99 characters)\n'}
[1.085058] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.085121] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.085184] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085246] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:142:1: W293 blank line contains whitespace\n'}
[1.085309] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.085371] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.085433] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085522] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: W293 blank line contains whitespace\n'}
[1.085584] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.085646] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.085708] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085815] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:144:1: W293 blank line contains whitespace\n'}
[1.085879] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.085940] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.086001] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086062] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:1: E303 too many blank lines (6)\n'}
[1.086123] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.086183] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.086243] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086303] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:151:21: W292 no newline at end of file\n'}
[1.086364] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.086425] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086485] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.086547] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.086607] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.086667] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086727] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.086788] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.086861] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.086918] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086974] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.087036] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.087094] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.087151] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087207] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:11:1: E302 expected 2 blank lines, found 1\n'}
[1.087320] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.087423] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.087505] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087591] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:22: E225 missing whitespace around operator\n'}
[1.087671] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.087728] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.087786] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087843] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:14:51: E225 missing whitespace around operator\n'}
[1.087900] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.087957] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.088033] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088090] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:1: W293 blank line contains whitespace\n'}
[1.088149] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.088225] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.088284] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088343] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:16:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.088402] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.088461] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.088520] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088579] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:18:100: E501 line too long (115 > 99 characters)\n'}
[1.088638] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.088698] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.088757] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088816] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:18:105: E231 missing whitespace after ','\n"}
[1.088875] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.088934] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.088993] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089051] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:19:37: E128 continuation line under-indented for visual indent\n'}
[1.089110] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.089168] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.089226] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089283] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:19:92: E261 at least two spaces before inline comment\n'}
[1.089341] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.089399] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.089478] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089547] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:19:92: E262 inline comment should start with '# '\n"}
[1.089616] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.089684] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.089766] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089840] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:22:100: E501 line too long (100 > 99 characters)\n'}
[1.089950] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.090007] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.090064] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090120] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:36:89: E231 missing whitespace after ','\n"}
[1.090177] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.090234] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.090291] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090347] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:36:96: E231 missing whitespace after ','\n"}
[1.090404] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.090493] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.090573] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090630] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:43:56: E231 missing whitespace after ','\n"}
[1.090687] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.090778] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.090850] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090907] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:49:56: E231 missing whitespace after ','\n"}
[1.090964] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.091021] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.091078] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091134] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:68:7: W292 no newline at end of file\n'}
[1.091191] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.091253] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091312] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.091369] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.091426] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.091505] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091572] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.091646] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.091703] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.091760] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091817] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.091874] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.091945] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.092004] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092062] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.092121] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.092180] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.092237] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092295] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.092360] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.092443] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.092511] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092609] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.092687] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.092746] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.092805] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092863] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.092923] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.092982] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.093040] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093099] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:40:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.093158] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.093218] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.093277] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093337] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:40:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.093397] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.093456] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.093516] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093575] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:40:70: E231 missing whitespace after ','\n"}
[1.093635] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.093694] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.093785] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093869] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:1: W293 blank line contains whitespace\n'}
[1.093929] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.093988] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.094048] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094107] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:44:7: W292 no newline at end of file\n'}
[1.094184] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.094263] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094324] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.094385] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.094445] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.094505] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094566] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.094627] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.094688] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.094776] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094866] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.094928] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.094990] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.095051] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.095112] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.095180] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.095242] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.095303] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.095364] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.095425] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.095486] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.095546] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.095607] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.095667] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.095728] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.095789] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.095849] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.095911] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.095972] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.096033] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.096094] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:42:1: W293 blank line contains whitespace\n'}
[1.096154] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.096214] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.096275] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.096364] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:43:7: W292 no newline at end of file\n'}
[1.096441] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.096510] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.096568] (turtle_brick) StdoutLine: {'line': b'1     E128 continuation line under-indented for visual indent\n'}
[1.096626] (turtle_brick) StdoutLine: {'line': b"1     E202 whitespace before ')'\n"}
[1.096684] (turtle_brick) StdoutLine: {'line': b'21    E225 missing whitespace around operator\n'}
[1.096742] (turtle_brick) StdoutLine: {'line': b"81    E231 missing whitespace after ','\n"}
[1.096800] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.096858] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.096916] (turtle_brick) StdoutLine: {'line': b"3     E262 inline comment should start with '# '\n"}
[1.096974] (turtle_brick) StdoutLine: {'line': b"33    E265 block comment should start with '# '\n"}
[1.097032] (turtle_brick) StdoutLine: {'line': b'6     E302 expected 2 blank lines, found 1\n'}
[1.097090] (turtle_brick) StdoutLine: {'line': b'7     E303 too many blank lines (2)\n'}
[1.097148] (turtle_brick) StdoutLine: {'line': b'9     E501 line too long (115 > 99 characters)\n'}
[1.097206] (turtle_brick) StdoutLine: {'line': b"34    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.097264] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.097323] (turtle_brick) StdoutLine: {'line': b'22    W291 trailing whitespace\n'}
[1.097381] (turtle_brick) StdoutLine: {'line': b'4     W292 no newline at end of file\n'}
[1.097470] (turtle_brick) StdoutLine: {'line': b'25    W293 blank line contains whitespace\n'}
[1.097536] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.097604] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.097671] (turtle_brick) StdoutLine: {'line': b'11 files checked\n'}
[1.097747] (turtle_brick) StdoutLine: {'line': b'255 errors\n'}
[1.097822] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.097889] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 167\n"}
[1.097956] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 35\n"}
[1.098033] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 53\n"}
[1.098101] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.098168] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.098236] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.098303] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.098370] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.098437] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.098505] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.098572] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.098639] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.098706] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.098773] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.098840] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.098908] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.098974] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.099041] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.099109] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.099190] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.099255] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.099321] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.099387] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.099453] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.099517] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.099664] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.099743] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.099813] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.099882] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.099951] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.100019] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.100087] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.100155] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.100221] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.100286] (-) TimerEvent: {}
[1.100414] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:36 in public class `BState`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.100490] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:36 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.100557] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:36 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.100621] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:36 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.100685] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:44 in public class `Arena`: D200: One-line docstring should fit on one line with quotes (found 3)\n'}
[1.100749] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:44 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.100820] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:44 in public class `Arena`: D400: First line should end with a period (not 's')\n"}
[1.100884] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:44 in public class `Arena`: D415: First line should end with a period, question mark, or exclamation point (not 's')\n"}
[1.100949] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.101012] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:31 in public class `State`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.101076] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:31 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.101143] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:31 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.101207] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:31 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.101271] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.101334] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:1 at module level: D200: One-line docstring should fit on one line with quotes (found 4)\n'}
[1.101397] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:1 at module level: D400: First line should end with a period (not 'e')\n"}
[1.101460] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:1 at module level: D415: First line should end with a period, question mark, or exclamation point (not 'e')\n"}
[1.101523] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:20 in public class `Turtle_robot`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.101597] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:20 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.101662] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:20 in public class `Turtle_robot`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.101725] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:20 in public class `Turtle_robot`: D213: Multi-line docstring summary should start at the second line\n'}
[1.101803] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:20 in public class `Turtle_robot`: D400: First line should end with a period (not 'e')\n"}
[1.101869] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:20 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not 'e')\n"}
[1.101943] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.102003] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.102063] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.102124] (turtle_brick) StdoutLine: {'line': b'21 errors\n'}
[1.102184] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.102245] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.102306] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 255 code styl...\n'}
[1.102366] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.102440] (turtle_brick) StdoutLine: {'line': b'\x1b[31m=================== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.41s\x1b[0m\x1b[31m ===================\x1b[0m\n'}
[1.102503] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.102594] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.102652] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.102709] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.102765] (turtle_brick) StderrLine: {'line': b'\n'}
[1.102822] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.102879] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[1.102972] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[1.103036] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[1.103100] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[1.103356] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[1.103382] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[1.103686] (turtle_brick) CommandEnded: {'returncode': 1}
[1.103957] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.103982] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.104244] (-) EventReactorShutdown: {}
