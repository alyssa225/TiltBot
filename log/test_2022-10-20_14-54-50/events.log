[0.000000] (-) TimerEvent: {}
[0.000515] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000550] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000598] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.009813] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.098903] (-) TimerEvent: {}
[0.199200] (-) TimerEvent: {}
[0.247354] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.260096] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.266576] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.266974] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.267328] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.267612] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.267753] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.267885] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1954 - Experimental\n'}
[0.268139] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.268346] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.268477] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.268618] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.268780] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.268922] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.269063] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.269209] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.269344] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.269474] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.269606] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.269743] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.269896] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.270044] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299295] (-) TimerEvent: {}
[0.325510] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.325755] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.387427] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.387604] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.387713] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.387877] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.396327] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.396594] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.399388] (-) TimerEvent: {}
[0.404491] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.14 sec\n'}
[0.404792] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.404941] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.405126] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.405287] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.405453] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.460590] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.460776] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.499500] (-) TimerEvent: {}
[0.527919] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.528147] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.535214] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.535451] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.535566] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.572684] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.572839] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.572976] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.585455] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.585718] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.596123] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.19 sec\n'}
[0.596491] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.596649] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.596794] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.596935] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.597073] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.14 sec*proc (1 test)\n'}
[0.597228] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.33 sec*proc (2 tests)\n'}
[0.597367] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.19 sec*proc (1 test)\n'}
[0.597502] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.597641] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.33 sec\n'}
[0.597776] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.597929] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.598082] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.599590] (-) TimerEvent: {}
[0.614406] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.614583] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.614765] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.618955] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.619129] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.619230] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.620782] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.621323] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.621424] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.621993] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.623361] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.699677] (-) TimerEvent: {}
[0.799996] (-) TimerEvent: {}
[0.819836] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.881281] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.881466] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.881537] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.881605] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.881753] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.900121] (-) TimerEvent: {}
[0.918489] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.919070] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 124 code style errors / warnings:\x1b[0m\n'}
[0.919629] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:113:33: E127 continuation line over-indented for visual indent\x1b[0m\n'}
[0.921508] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:33: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.922326] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:56: E202 whitespace before ')'\x1b[0m\n"}
[0.922433] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:158:68: W291 trailing whitespace\x1b[0m\n'}
[0.922531] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:68: W291 trailing whitespace\x1b[0m\n'}
[0.922630] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:56: W291 trailing whitespace\x1b[0m\n'}
[0.922729] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:182:80: E202 whitespace before ')'\x1b[0m\n"}
[0.922828] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:188:60: W291 trailing whitespace\x1b[0m\n'}
[0.923009] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:198:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.923178] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:200:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.923297] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:202:19: W291 trailing whitespace\x1b[0m\n'}
[0.923416] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.923533] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.923633] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.923733] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.923832] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.923931] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.924038] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.924137] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.924236] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.924335] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.924435] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.924534] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.924632] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.924730] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.924829] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.924927] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.925032] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.925130] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.925228] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.925336] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.925435] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.925533] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.925631] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.925729] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.925843] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.925946] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.926044] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.926141] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.926239] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.926337] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.926433] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.926531] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.926628] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.926727] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.926825] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.926922] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.927019] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.927134] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.927239] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.927342] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.927445] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.927547] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.927649] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.927751] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.927872] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.927974] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.928094] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.928214] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.928333] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.928460] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.928581] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.928700] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.928820] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.928939] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.929058] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.929182] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.929290] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.929399] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.929507] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.929615] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.929724] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.929838] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.929911] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.929978] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.930044] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.930138] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.930208] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.930278] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.930349] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.930418] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.930487] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.930562] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.930632] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.930702] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.930772] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.930842] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.930911] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.931109] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.931229] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.931305] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.931378] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.931450] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.931521] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.931593] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.931665] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.931738] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.931810] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.931881] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.931953] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.932032] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.932121] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.932197] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.932273] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.932349] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.932425] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.932502] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.932589] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.932666] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.932742] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.932818] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.932895] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.932970] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.933046] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.933121] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.933200] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.933263] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.933326] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.933400] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.933464] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.933527] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.933590] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.933653] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.933716] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.933779] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.933881] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.933947] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.934010] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:113:33: E127 continuation line over-indented for visual indent\n'}
[0.934097] (turtle_brick) StdoutLine: {'line': b'                                % (msg.pose.position.x, msg.pose.position.y,\n'}
[0.934164] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.934232] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.934301] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:114:33: E128 continuation line under-indented for visual indent\n'}
[0.934370] (turtle_brick) StdoutLine: {'line': b'                                msg.pose.orientation.z) )\n'}
[0.934438] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.934508] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.934577] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:56: E202 whitespace before ')'\n"}
[0.934645] (turtle_brick) StdoutLine: {'line': b'                                msg.pose.orientation.z) )\n'}
[0.934715] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.934798] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.934867] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:158:68: W291 trailing whitespace\n'}
[0.934935] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[0.935002] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[0.935070] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.935158] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:159:68: W291 trailing whitespace\n'}
[0.935231] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[0.935303] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[0.935375] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.935446] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:162:56: W291 trailing whitespace\n'}
[0.935518] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[0.935589] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.935670] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.935742] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:182:80: E202 whitespace before ')'\n"}
[0.935814] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[0.935887] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[0.935958] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.936030] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:188:60: W291 trailing whitespace\n'}
[0.936102] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang - self.tilt_angf) >= 0.01:       \n'}
[0.936184] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[0.936249] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.936314] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:198:1: E302 expected 2 blank lines, found 1\n'}
[0.936379] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[0.936444] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.936510] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.936620] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:200:16: E225 missing whitespace around operator\n'}
[0.936686] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[0.936749] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[0.936813] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.936877] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:202:19: W291 trailing whitespace\n'}
[0.937006] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.937143] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.937251] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.937317] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[0.937380] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[0.937443] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.937505] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.937567] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[0.937631] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[0.937715] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.937880] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.938002] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[0.938140] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[0.938278] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.938403] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.938528] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[0.938654] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[0.938781] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.938905] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.939086] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[0.939264] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.939377] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.939474] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.939570] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[0.939680] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.939815] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.939930] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.940043] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[0.940140] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.940237] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.940333] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.940430] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[0.940526] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.940623] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.940719] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.940815] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[0.940912] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[0.941008] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.941104] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.941200] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[0.941297] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[0.941394] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.941490] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.941587] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[0.941683] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[0.941779] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.941951] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.942049] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[0.942159] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.942257] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[0.942409] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[0.942510] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[0.942624] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[0.942738] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[0.942838] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.942937] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[0.943036] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[0.943136] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[0.943235] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.943342] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[0.943441] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[0.943540] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[0.943640] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.943739] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.943838] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.943938] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.944037] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[0.944163] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.944274] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[0.944389] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[0.944507] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[0.944620] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[0.944732] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[0.944844] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.944956] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[0.945080] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[0.945182] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[0.945285] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.945388] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[0.945491] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[0.945593] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[0.945696] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.945798] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.945946] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[0.946049] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.946151] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.946253] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[0.946355] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.946457] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.946560] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.946660] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[0.946762] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.946864] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.946965] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.947192] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[0.947276] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.947338] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.947400] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.947460] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[0.947521] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.947582] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.947643] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.947703] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[0.947764] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[0.947834] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.947895] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.947955] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[0.948015] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[0.948075] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.948135] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948194] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[0.948254] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[0.948314] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.948375] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948434] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[0.948494] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.948555] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.948614] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948674] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[0.948733] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.948794] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.948853] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948912] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[0.948971] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.949030] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[0.949107] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949172] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[0.949237] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[0.949302] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.949369] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949433] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[0.949498] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[0.949563] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[0.949627] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949691] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[0.949755] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[0.949831] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.949901] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949966] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[0.950031] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[0.950108] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[0.950186] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950247] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[0.950309] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[0.950371] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.950437] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950497] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[0.950559] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.950620] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.950681] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950741] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[0.950808] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.950870] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.950931] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950991] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[0.951064] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.951127] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[0.951190] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951253] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[0.951316] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[0.951379] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.951443] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951506] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[0.951569] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[0.951632] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[0.951696] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951759] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[0.951822] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[0.951885] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.951949] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952012] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[0.952075] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.952139] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.952202] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952266] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[0.952329] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.952393] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.952457] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952520] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[0.952583] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[0.952646] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.952709] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952772] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[0.952835] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.952898] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.952961] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953024] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[0.953087] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[0.953150] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.953237] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953342] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[0.953424] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.953553] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.953656] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953729] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[0.953796] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.953879] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.953945] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954010] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[0.954089] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.954156] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.954222] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954289] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[0.954357] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[0.954444] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.954512] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.954577] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[0.954643] (turtle_brick) StderrLine: {'line': b'\n'}
[0.954708] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[0.954775] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[0.954842] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.954909] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954974] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[0.955130] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.955293] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.955394] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955489] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[0.955554] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[0.955620] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.955685] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955750] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[0.955815] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[0.955879] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.955944] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956008] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[0.956089] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[0.956156] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.956291] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956392] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[0.956465] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[0.956535] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[0.956604] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956673] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[0.956742] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[0.956822] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.956896] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956978] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[0.957043] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[0.957124] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.957191] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957258] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[0.957326] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[0.957402] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.957470] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957536] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[0.957603] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.957675] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.957742] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957844] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[0.957939] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.958007] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[0.958075] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958142] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[0.958209] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.958277] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[0.958344] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958411] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[0.958479] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.958546] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.958614] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958680] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[0.958748] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.958815] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.958883] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958950] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[0.959018] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.959086] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.959153] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959220] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[0.959287] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.959354] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.959421] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959488] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[0.959556] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[0.959634] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.959701] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959768] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[0.959835] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[0.959903] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959970] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[0.960037] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.960104] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960171] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[0.960238] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[0.960306] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960373] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[0.960441] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[0.960508] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.960575] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960641] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[0.960709] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[0.960776] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.960842] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960908] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[0.960974] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[0.961041] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.961108] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961175] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[0.961242] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[0.961309] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.961376] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961442] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[0.961509] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[0.961576] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.961643] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961708] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[0.961775] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[0.961869] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.961935] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961998] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[0.962061] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[0.962125] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.962189] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962251] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[0.962315] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[0.962381] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.962444] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962507] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[0.962571] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[0.962636] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.962700] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962771] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[0.962836] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[0.962899] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962968] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[0.963032] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[0.963111] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.963238] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963348] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[0.963419] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[0.963489] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[0.963557] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963626] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[0.963695] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[0.963763] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.963830] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963898] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[0.963967] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.964036] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[0.964104] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[0.964184] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[0.964247] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[0.964311] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[0.964374] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[0.964438] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[0.964503] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[0.964566] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[0.964630] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[0.964707] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.964771] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.964834] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[0.964899] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964962] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[0.965027] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.965091] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[0.965161] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[0.965225] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[0.965290] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[0.965353] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[0.965416] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[0.965480] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[0.965544] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[0.965609] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[0.965673] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[0.965737] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.965825] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.965901] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[0.965965] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966030] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[0.966095] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[0.966159] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.966223] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966286] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[0.966351] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[0.966415] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.966480] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966544] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[0.966607] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[0.966673] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[0.966737] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966801] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[0.966865] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.966929] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.966993] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967057] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[0.967122] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[0.967186] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.967250] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967314] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[0.967379] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[0.967444] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.967509] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967573] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[0.967637] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[0.967702] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[0.967767] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967831] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[0.967895] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[0.967966] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.968031] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968094] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[0.968158] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[0.968222] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[0.968286] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968350] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[0.968415] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[0.968486] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[0.968551] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968614] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[0.968679] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[0.968743] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.968808] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968872] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[0.968950] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[0.969018] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[0.969085] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969151] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[0.969217] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[0.969285] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[0.969353] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969419] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[0.969487] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[0.969555] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.969622] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969689] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[0.969757] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[0.969838] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.969911] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969978] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[0.970056] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[0.970125] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970192] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[0.970261] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[0.970329] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.970397] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970464] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[0.970550] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[0.970615] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.970679] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970743] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[0.970808] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[0.970871] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.970981] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971102] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[0.971258] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[0.971404] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.971520] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971632] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[0.971746] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[0.971860] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.971973] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972085] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[0.972219] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[0.972324] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.972428] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972531] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[0.972636] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[0.972741] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.972845] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972949] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[0.973054] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.973158] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[0.973263] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[0.973368] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.973472] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.973576] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.973692] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973796] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[0.973916] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[0.974021] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.974124] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974228] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[0.974332] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[0.974436] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.974539] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974643] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[0.974747] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[0.974851] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.974955] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975058] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[0.975162] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[0.975266] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[0.975370] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975473] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[0.975576] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.975680] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.975783] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975886] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[0.975997] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[0.976100] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976203] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[0.976324] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[0.976496] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.976616] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976722] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[0.976828] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.976934] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[0.977040] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[0.977166] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[0.977279] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.977392] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.977505] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.977619] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977731] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[0.977853] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.977929] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[0.977999] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[0.978069] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[0.978137] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.978206] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.978273] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[0.978341] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978409] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[0.978478] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[0.978546] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.978613] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978680] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[0.978748] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.978815] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.978883] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978950] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[0.979018] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[0.979087] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979154] (turtle_brick) StdoutLine: {'line': b'1     E127 continuation line over-indented for visual indent\n'}
[0.979303] (turtle_brick) StdoutLine: {'line': b'2     E128 continuation line under-indented for visual indent\n'}
[0.979387] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[0.979457] (turtle_brick) StdoutLine: {'line': b'7     E225 missing whitespace around operator\n'}
[0.979526] (turtle_brick) StdoutLine: {'line': b"25    E231 missing whitespace after ','\n"}
[0.979595] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[0.979664] (turtle_brick) StdoutLine: {'line': b'2     E261 at least two spaces before inline comment\n'}
[0.979732] (turtle_brick) StdoutLine: {'line': b"2     E262 inline comment should start with '# '\n"}
[0.979800] (turtle_brick) StdoutLine: {'line': b"9     E265 block comment should start with '# '\n"}
[0.979869] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[0.979936] (turtle_brick) StdoutLine: {'line': b'6     E302 expected 2 blank lines, found 0\n'}
[0.980004] (turtle_brick) StdoutLine: {'line': b'3     E303 too many blank lines (3)\n'}
[0.980083] (turtle_brick) StdoutLine: {'line': b'7     E501 line too long (115 > 99 characters)\n'}
[0.980150] (turtle_brick) StdoutLine: {'line': b"23    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[0.980226] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[0.980294] (turtle_brick) StdoutLine: {'line': b'15    W291 trailing whitespace\n'}
[0.980361] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[0.980428] (turtle_brick) StdoutLine: {'line': b'10    W293 blank line contains whitespace\n'}
[0.980495] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980562] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[0.980629] (turtle_brick) StdoutLine: {'line': b'124 errors\n'}
[0.980696] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980762] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 69\n"}
[0.980829] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 24\n"}
[0.980906] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 31\n"}
[0.980974] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981041] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[0.981108] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981175] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[0.981242] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[0.981308] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[0.981375] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[0.981441] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[0.981508] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[0.981574] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[0.981641] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[0.981707] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[0.981773] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[0.981865] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[0.981937] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[0.982005] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[0.982072] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[0.982156] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.982222] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[0.982287] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[0.982351] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[0.982417] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[0.982480] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.982544] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.982608] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[0.982672] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[0.982735] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[0.982799] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[0.982862] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[0.982926] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[0.982989] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[0.983060] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[0.983124] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[0.983187] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[0.983250] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[0.983314] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[0.983378] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.983443] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D208: Docstring is over-indented\n'}
[0.983507] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[0.983571] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[0.983636] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[0.983700] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.983764] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[0.983827] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[0.983892] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.983956] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[0.984020] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[0.984084] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[0.984148] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[0.984212] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[0.984277] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.984342] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[0.984407] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[0.984471] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[0.984535] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:14 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[0.984599] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:14 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.984663] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[0.984726] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[0.984798] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[0.984862] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[0.984932] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[0.984995] (turtle_brick) StdoutLine: {'line': b'19 errors\n'}
[0.985059] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[0.985123] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[0.985214] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 124 code styl...\n'}
[0.985343] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[0.985464] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.39s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[0.993269] (turtle_brick) CommandEnded: {'returncode': 1}
[0.993929] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[0.993975] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[0.994341] (-) EventReactorShutdown: {}
