[0.000000] (-) TimerEvent: {}
[0.000186] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000224] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000256] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.009299] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.098448] (-) TimerEvent: {}
[0.198798] (-) TimerEvent: {}
[0.244404] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.258215] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.264559] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.264813] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.264974] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.265130] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.265316] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.265462] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1925 - Experimental\n'}
[0.265719] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.265878] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.265990] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.266100] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.266210] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.266320] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.266431] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.266541] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.266651] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.266771] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.266886] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.266996] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.267106] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.267225] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.298894] (-) TimerEvent: {}
[0.318565] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.318769] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.381681] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.381880] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.381959] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.382035] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.390238] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.390608] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.397989] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.398293] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.398405] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.398479] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.398579] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.398658] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.398954] (-) TimerEvent: {}
[0.451955] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.452183] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.499046] (-) TimerEvent: {}
[0.523042] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.523218] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.527896] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.528143] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.528234] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.535768] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.535965] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.536047] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.544826] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.545164] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.554043] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.16 sec\n'}
[0.554569] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.554818] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.554953] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.555101] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.555199] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.555279] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.29 sec*proc (2 tests)\n'}
[0.555379] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.16 sec*proc (1 test)\n'}
[0.555482] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.555554] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.29 sec\n'}
[0.555697] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.555798] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.555919] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.575838] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.576044] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.576129] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.577645] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.578152] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.578201] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.599171] (-) TimerEvent: {}
[0.603997] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.604191] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.604472] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.611798] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.612844] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.699274] (-) TimerEvent: {}
[0.799742] (-) TimerEvent: {}
[0.815614] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.878695] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.878893] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.879029] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.879141] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.879217] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.899845] (-) TimerEvent: {}
[0.912420] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.912965] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 271 code style errors / warnings:\x1b[0m\n'}
[0.913117] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:38:53: W291 trailing whitespace\x1b[0m\n'}
[0.913679] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:48:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.914231] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:49:33: W291 trailing whitespace\x1b[0m\n'}
[0.914661] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:54:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.915041] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:55:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.915507] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:62:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.917783] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:69:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.921000] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.921903] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.922041] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.922167] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.922291] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.922418] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.922545] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.922671] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.922849] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.922976] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.923097] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:77:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.923217] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:80:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.923340] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:81:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.923468] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:82:47: E231 missing whitespace after ','\x1b[0m\n"}
[0.923595] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:82:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.923722] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.923850] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.923976] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.924100] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:85:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.924227] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:102:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.924348] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:188:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.924474] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:188:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.924604] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:191:26: W291 trailing whitespace\x1b[0m\n'}
[0.924730] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:204:42: E231 missing whitespace after ','\x1b[0m\n"}
[0.924852] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:206:37: E231 missing whitespace after ','\x1b[0m\n"}
[0.924972] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:35: E231 missing whitespace after ','\x1b[0m\n"}
[0.925097] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:45: E231 missing whitespace after ','\x1b[0m\n"}
[0.925224] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:210:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.925356] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:211:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.925492] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:218:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.925636] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:220:48: E231 missing whitespace after ','\x1b[0m\n"}
[0.925781] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:220:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.925913] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:222:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.926040] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:222:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.926161] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:224:36: E231 missing whitespace after ','\x1b[0m\n"}
[0.926283] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:225:13: E225 missing whitespace around operator\x1b[0m\n'}
[0.926405] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:235:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.926530] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:252:58: E225 missing whitespace around operator\x1b[0m\n'}
[0.926653] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:255:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.926788] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.926921] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:257:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.927043] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:257:23: E231 missing whitespace after ','\x1b[0m\n"}
[0.927172] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:257:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.927299] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:257:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.927425] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:262:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.927549] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:269:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.927675] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:269:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.927801] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:271:30: W291 trailing whitespace\x1b[0m\n'}
[0.927926] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:273:42: E225 missing whitespace around operator\x1b[0m\n'}
[0.928055] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:274:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.928218] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:274:66: E262 inline comment should start with '# '\x1b[0m\n"}
[0.928341] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:274:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.928464] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:291:9: E225 missing whitespace around operator\x1b[0m\n'}
[0.928586] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:293:19: W291 trailing whitespace\x1b[0m\n'}
[0.928707] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:294:1: W391 blank line at end of file\x1b[0m\n'}
[0.928827] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.928952] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.929072] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[0.929213] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.929404] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.929532] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.929654] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[0.929774] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[0.929900] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.930024] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.930164] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[0.930295] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[0.930424] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[0.930557] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[0.930691] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[0.930849] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[0.930939] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[0.931015] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[0.931107] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[0.931179] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.931250] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[0.931320] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.931398] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.931468] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.931538] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.931606] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.931675] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.931743] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.931811] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.931879] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.931947] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.932014] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.932081] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.932151] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.932220] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.932289] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.932357] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.932424] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[0.932491] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.932560] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.932628] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[0.932696] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[0.932763] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.932837] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.932907] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.932976] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933045] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.933114] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.933183] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.933432] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.933503] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.933572] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[0.933641] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[0.933710] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.933778] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.933847] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[0.933915] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.933983] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.934051] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.934118] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.934185] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.934252] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.934332] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.934400] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.934466] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.934533] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.934601] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.934667] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.934746] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.934820] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.934889] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.934956] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.935068] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[0.935206] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[0.935319] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[0.935400] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.935470] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[0.935538] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.935608] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[0.935676] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.935744] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.935812] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[0.935886] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[0.935955] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.936022] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[0.936088] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.936155] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[0.936222] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[0.936301] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.936365] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.936429] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.936494] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.936557] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[0.936622] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.936686] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[0.936760] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[0.936820] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.936881] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.936943] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.937004] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.937065] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.937133] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.937193] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.937254] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.937315] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.937388] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.937449] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.937510] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.937572] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.937693] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.937769] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.937837] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.937904] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.937970] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.938037] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.938105] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.938171] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.938237] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.938304] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.938371] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.938437] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.938503] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.938569] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.938645] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.938712] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.938796] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.938864] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.938929] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.939001] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.939067] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.939132] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.939197] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.939262] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.939326] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.939391] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.939457] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.939522] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.939586] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.939652] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.939718] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.939784] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.939850] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.939915] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.939981] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.940060] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.940128] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.940196] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.940264] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.940333] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.940402] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.940470] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.940552] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.940621] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.940689] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.940758] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.940835] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.940904] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.940973] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.941054] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.941121] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.941187] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.941253] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.941318] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.941384] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.941449] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.941520] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.941585] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.941649] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.941715] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.941781] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.941846] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.941911] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.941976] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.942042] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.942107] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.942173] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.942238] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.942304] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.942370] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.942437] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.942507] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.942573] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.942646] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.942712] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.942798] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.942866] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.942932] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.942998] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.943065] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.943131] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.943198] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.943265] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.943331] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.943398] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.943464] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.943546] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.943614] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.943684] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.943818] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.943914] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.944001] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.944070] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.944144] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.944211] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.944277] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.944343] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.944408] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.944480] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.944545] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.944610] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.944688] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.944751] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.944813] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:38:53: W291 trailing whitespace\n'}
[0.944889] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.944952] (turtle_brick) StdoutLine: {'line': b'    Creates the arena and places brick when called in command line.\n'}
[0.945015] (turtle_brick) StdoutLine: {'line': b'    Will drop the robot when called in command line.\n'}
[0.945091] (turtle_brick) StdoutLine: {'line': b'        -if robot is underneath the brick, the brick will land on the robot\n'}
[0.945156] (turtle_brick) StdoutLine: {'line': b'        -if nothing is under brick, brick will land on ground\n'}
[0.945221] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.945299] (turtle_brick) StdoutLine: {'line': b'        -robot_sub: continuous robot position\n'}
[0.945365] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.945432] (turtle_brick) StdoutLine: {'line': b'        -marker_pub: publishes walls and brick\n'}
[0.945497] (turtle_brick) StdoutLine: {'line': b'        -drop_pub: sends placement, drop coordinates  \n'}
[0.945562] (turtle_brick) StdoutLine: {'line': b'        -platform_pub: sends true if platform is under brick\n'}
[0.945648] (turtle_brick) StdoutLine: {'line': b'    SERVICES:\n'}
[0.945787] (turtle_brick) StdoutLine: {'line': b'        -Place: place brick at x, y, z location\n'}
[0.945878] (turtle_brick) StdoutLine: {'line': b'        -Drop: Empty drops brick\n'}
[0.945948] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.946054] (turtle_brick) StdoutLine: {'line': b'        -world_brick: connects brick to world\n'}
[0.946137] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.946209] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.946279] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.946349] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.946417] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:48:9: E265 block comment should start with '# '\n"}
[0.946488] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.946558] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.946627] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.946695] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:49:33: W291 trailing whitespace\n'}
[0.946807] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.946878] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.946945] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.947011] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:54:32: E231 missing whitespace after ','\n"}
[0.947079] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.947145] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.947211] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.947277] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:55:27: E231 missing whitespace after ','\n"}
[0.947343] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.947410] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.947476] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.947542] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:62:9: E265 block comment should start with '# '\n"}
[0.947608] (turtle_brick) StdoutLine: {'line': b'        #setting state of brick\n'}
[0.947685] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.947749] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.947812] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:69:9: E265 block comment should start with '# '\n"}
[0.947876] (turtle_brick) StdoutLine: {'line': b'        #set up subscribers\n'}
[0.947940] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.948004] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948068] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:55: E231 missing whitespace after ','\n"}
[0.948132] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.948228] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.948298] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948364] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:64: E231 missing whitespace after ','\n"}
[0.948431] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.948497] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.948564] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948629] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:84: E231 missing whitespace after ','\n"}
[0.948695] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.948760] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[0.948827] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948894] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:9: E265 block comment should start with '# '\n"}
[0.948960] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[0.949026] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.949091] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949157] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:55: E231 missing whitespace after ','\n"}
[0.949222] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.949316] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.949396] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949463] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:65: E231 missing whitespace after ','\n"}
[0.949542] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.949623] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.949694] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949759] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:54: E231 missing whitespace after ','\n"}
[0.949824] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.949889] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.949952] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950016] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:62: E231 missing whitespace after ','\n"}
[0.950081] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.950158] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.950234] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950299] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:55: E231 missing whitespace after ','\n"}
[0.950364] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.950429] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.950494] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950584] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:64: E231 missing whitespace after ','\n"}
[0.950652] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.950719] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.950835] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950908] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:77:1: W293 blank line contains whitespace\n'}
[0.950977] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.951046] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.951113] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951180] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:80:1: W293 blank line contains whitespace\n'}
[0.951249] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.951316] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.951384] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951452] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:81:9: E265 block comment should start with '# '\n"}
[0.951536] (turtle_brick) StdoutLine: {'line': b'        #initialize services\n'}
[0.951610] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.951685] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951757] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:82:47: E231 missing whitespace after ','\n"}
[0.951830] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.951902] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[0.951974] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952047] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:82:56: E231 missing whitespace after ','\n"}
[0.952119] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.952191] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.952263] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952334] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:46: E231 missing whitespace after ','\n"}
[0.952405] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.952476] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.952560] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952628] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:54: E231 missing whitespace after ','\n"}
[0.952696] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.952765] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.952833] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952903] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:84:1: W293 blank line contains whitespace\n'}
[0.952971] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.953039] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.953107] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953175] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:85:9: E265 block comment should start with '# '\n"}
[0.953244] (turtle_brick) StdoutLine: {'line': b'        #creating brick marker\n'}
[0.953313] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.953384] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953453] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:102:9: E265 block comment should start with '# '\n"}
[0.953522] (turtle_brick) StdoutLine: {'line': b'        #creating wall markers\n'}
[0.953593] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.953683] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953820] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:188:9: E303 too many blank lines (2)\n'}
[0.953900] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.953986] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.954058] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954128] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:188:9: E265 block comment should start with '# '\n"}
[0.954200] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.954271] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.954340] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954418] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:191:26: W291 trailing whitespace\n'}
[0.954596] (turtle_brick) StdoutLine: {'line': b'        self.brickz = 0.0 \n'}
[0.954782] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[0.954887] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954959] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:204:42: E231 missing whitespace after ','\n"}
[0.955030] (turtle_brick) StdoutLine: {'line': b'        self.wall = self.create_timer(0.5,self.wall_callback)\n'}
[0.955099] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.955169] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955237] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:206:37: E231 missing whitespace after ','\n"}
[0.955306] (turtle_brick) StdoutLine: {'line': b'    def place_callback(self, request,response):\n'}
[0.955374] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.955442] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955524] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:35: E231 missing whitespace after ','\n"}
[0.955597] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.955669] (turtle_brick) StdoutLine: {'line': b'                                  ^\n'}
[0.955741] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955814] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:45: E231 missing whitespace after ','\n"}
[0.955887] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.955959] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.956032] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956127] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:210:1: W293 blank line contains whitespace\n'}
[0.956232] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.956311] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.956385] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956459] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:211:28: E231 missing whitespace after ','\n"}
[0.956561] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.956629] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.956697] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956763] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:218:24: E225 missing whitespace around operator\n'}
[0.956830] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[0.956896] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.956963] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957029] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:220:48: E231 missing whitespace after ','\n"}
[0.957096] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.957163] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.957230] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957297] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:220:65: E231 missing whitespace after ','\n"}
[0.957363] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.957430] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.957497] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957586] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:222:46: E231 missing whitespace after ','\n"}
[0.957656] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.957738] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.957809] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957877] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:222:61: E231 missing whitespace after ','\n"}
[0.957946] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.958016] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.958085] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958153] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:224:36: E231 missing whitespace after ','\n"}
[0.958222] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self, request,response):\n'}
[0.958291] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[0.958360] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958427] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:225:13: E225 missing whitespace around operator\n'}
[0.958497] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[0.958565] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.958634] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958702] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:235:9: E265 block comment should start with '# '\n"}
[0.958781] (turtle_brick) StdoutLine: {'line': b'        #publishing wall markers\n'}
[0.958853] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.958923] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958993] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:252:58: E225 missing whitespace around operator\n'}
[0.959063] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[0.959133] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.959201] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959271] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:255:1: W293 blank line contains whitespace\n'}
[0.959341] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.959412] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.959482] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959552] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\n'}
[0.959635] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.959700] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.959766] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959831] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:257:5: E303 too many blank lines (2)\n'}
[0.959897] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.959962] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.960027] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960092] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:257:23: E231 missing whitespace after ','\n"}
[0.960158] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.960223] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.960289] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960355] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:257:25: E231 missing whitespace after ','\n"}
[0.960420] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.960485] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.960569] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960638] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:257:27: E231 missing whitespace after ','\n"}
[0.960708] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.960776] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.960853] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960931] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:262:1: W293 blank line contains whitespace\n'}
[0.961001] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.961069] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.961138] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961207] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:269:25: E231 missing whitespace after ','\n"}
[0.961276] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.961346] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.961415] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961484] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:269:27: E231 missing whitespace after ','\n"}
[0.961575] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.961655] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.961799] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961911] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:271:30: W291 trailing whitespace\n'}
[0.961994] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[0.962075] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[0.962153] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962232] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:273:42: E225 missing whitespace around operator\n'}
[0.962311] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[0.962390] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.962469] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962558] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:274:65: E261 at least two spaces before inline comment\n'}
[0.962631] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.962703] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.962788] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962861] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:274:66: E262 inline comment should start with '# '\n"}
[0.962933] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.963004] (turtle_brick) StdoutLine: {'line': b'                                                                 ^\n'}
[0.963085] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963156] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:274:100: E501 line too long (100 > 99 characters)\n'}
[0.963228] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.963300] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.963375] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963447] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:291:9: E225 missing whitespace around operator\n'}
[0.963518] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[0.963599] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.963666] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963732] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:293:19: W291 trailing whitespace\n'}
[0.963798] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.963865] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.963931] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963999] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:294:1: W391 blank line at end of file\n'}
[0.964067] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964133] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.964200] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964266] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[0.964340] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.964407] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.964473] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964539] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[0.964605] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.964670] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.964736] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964802] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[0.964869] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[0.964935] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.965000] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965067] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[0.965135] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[0.965201] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.965267] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965333] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[0.965399] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.965466] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.965546] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965614] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[0.965681] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.965749] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.965817] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965884] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[0.965952] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[0.966020] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.966101] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966169] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[0.966239] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.966309] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.966377] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966445] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[0.966514] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.966582] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.966648] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966715] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[0.966795] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[0.966865] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.966933] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967001] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[0.967070] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.967140] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.967211] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.967280] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.967350] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.967420] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.967488] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.967580] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.967645] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.967711] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.967776] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.967842] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.967908] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.967974] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.968041] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.968108] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.968173] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.968239] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.968306] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.968373] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.968438] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.968503] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[0.968569] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968634] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[0.968699] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.968765] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.968830] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.968896] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.968962] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.969028] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.969095] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.969167] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.969235] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.969299] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.969366] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.969431] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.969496] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.969577] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.969648] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.969722] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.969865] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.969943] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.970010] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.970078] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.970147] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.970217] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[0.970288] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970357] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[0.970439] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.970508] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.970578] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.970649] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.970719] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.970800] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.970871] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.970941] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.971010] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.971082] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.971154] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.971224] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.971295] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.971365] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.971435] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.971519] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.971587] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.971656] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.971725] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.971792] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.971860] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.971928] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[0.971995] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972062] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[0.972129] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.972195] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.972262] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.972330] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.972399] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.972466] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.972533] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.972599] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.972665] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.972754] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.972823] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.972891] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.972959] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.973026] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.973092] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.973160] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.973227] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.973301] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.973368] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.973435] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.973501] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.973585] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.973656] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973727] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[0.973799] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.973870] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.973942] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.974013] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.974084] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.974155] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.974225] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.974294] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.974442] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.974607] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.974762] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.974882] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.974970] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.975093] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.975224] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.975355] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.975486] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.975619] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.975750] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.975904] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.976044] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.976161] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[0.976278] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976393] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[0.976510] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.976636] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.976748] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.976861] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.976972] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.977084] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.977196] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.977308] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.977420] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.977557] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.977662] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.977769] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.977940] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.978107] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.978216] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.978325] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.978434] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.978542] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.978651] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.978770] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.978884] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.978993] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[0.979101] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979210] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[0.979318] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.979426] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.979549] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.979661] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.979772] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.979884] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.979996] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.980107] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.980219] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.980331] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.980442] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.980566] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.980675] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.980783] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.980891] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.980999] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.981108] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.981216] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.981325] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.981433] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.981541] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.981649] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[0.981756] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981864] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[0.981972] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.982080] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.982189] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.982298] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.982406] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.982533] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.982646] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.982760] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.982835] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.982903] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.982969] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.983036] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.983101] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.983168] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.983239] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.983307] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.983373] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.983439] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.983504] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.983584] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.983651] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.983719] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[0.983787] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983854] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[0.983921] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.983988] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.984056] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.984124] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.984191] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.984259] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.984326] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.984393] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.984460] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.984541] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.984610] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.984679] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.984747] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.984818] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.984886] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.984956] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.985025] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.985095] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.985163] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.985233] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.985301] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.985370] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.985439] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985507] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[0.985589] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.985658] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.985726] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985795] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[0.985867] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.985936] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.986006] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986076] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[0.986146] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.986217] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.986286] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986355] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[0.986423] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.986493] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.986563] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986633] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[0.986703] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[0.986791] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.986865] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986935] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[0.987005] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[0.987076] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[0.987146] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987215] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[0.987285] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[0.987355] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.987426] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987509] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[0.987576] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[0.987644] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[0.987712] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987779] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[0.987846] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[0.987915] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[0.987982] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988049] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[0.988119] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[0.988186] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.988254] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988320] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[0.988387] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[0.988471] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[0.988539] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988606] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[0.988673] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[0.988741] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.988808] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988875] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[0.988951] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[0.989020] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.989087] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989153] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[0.989219] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[0.989286] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[0.989354] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989420] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[0.989487] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[0.989554] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[0.989621] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989687] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[0.989753] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[0.989820] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.989885] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989951] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[0.990017] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[0.990084] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.990150] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990216] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[0.990283] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[0.990350] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[0.990417] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990484] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[0.990551] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[0.990617] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[0.990682] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990764] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[0.990837] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.990903] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.990970] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991036] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[0.991111] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[0.991179] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.991247] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991315] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[0.991382] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[0.991449] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.991516] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991580] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[0.991648] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[0.991714] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.991780] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991847] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[0.991915] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[0.991981] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.992048] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992114] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[0.992182] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[0.992248] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.992315] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992382] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[0.992449] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[0.992517] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.992595] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992661] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[0.992727] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[0.992792] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.992858] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992923] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[0.992989] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.993053] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.993117] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993180] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[0.993246] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[0.993311] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.993374] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993439] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[0.993503] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.993568] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[0.993633] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993697] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[0.993762] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.993947] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[0.994100] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994225] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[0.994349] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.994489] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.994634] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994762] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[0.994886] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.995005] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[0.995124] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995241] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[0.995359] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.995481] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[0.995622] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995729] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[0.995848] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.995953] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.996056] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996159] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[0.996263] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.996367] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.996471] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996594] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[0.996708] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.996822] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[0.996935] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997048] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[0.997162] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[0.997276] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.997391] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997505] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[0.997629] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.997735] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.997841] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997947] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[0.998055] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[0.998161] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.998268] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998373] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[0.998493] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.998604] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.998714] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998840] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[0.998952] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[0.999062] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.999171] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999280] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[0.999390] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[0.999499] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.999631] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999738] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[0.999842] (-) TimerEvent: {}
[0.999967] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.000067] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.000135] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000201] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[1.000267] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.000331] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.000397] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000461] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[1.000541] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.000610] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.000679] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000749] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[1.000818] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.000887] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.000954] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001022] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[1.001092] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.001160] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.001229] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001297] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.001366] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.001436] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.001528] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001622] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[1.001715] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.001838] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.001959] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002083] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[1.002205] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.002327] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.002448] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002587] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[1.002716] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.002857] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.003001] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003132] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[1.003262] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.003391] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.003520] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003656] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[1.003777] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.003899] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.004021] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004142] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[1.004270] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.004392] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.004514] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004635] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[1.004756] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.004878] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.004999] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005119] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[1.005241] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.005362] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.005483] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005632] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[1.005754] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.005875] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.005997] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006118] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[1.006241] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.006363] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.006484] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006605] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[1.006726] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.006861] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.006984] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007106] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[1.007229] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.007356] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.007493] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007636] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[1.007763] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.007911] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.008042] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008149] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[1.008257] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.008364] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.008472] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008597] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[1.008728] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.008843] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.008956] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009069] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[1.009184] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.009298] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.009411] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009525] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[1.009653] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.009761] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.009869] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009988] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[1.010106] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.010226] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.010334] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010504] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[1.010876] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.011597] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.011876] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012252] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[1.012403] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.012518] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.012640] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012748] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[1.012856] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.012963] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.013070] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013177] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[1.013284] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.013392] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.013503] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013641] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[1.013877] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.014105] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.014220] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014327] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[1.014447] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.014553] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.014657] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014773] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[1.014859] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.014925] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.014988] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015051] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[1.015116] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.015179] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.015241] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015305] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[1.015368] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.015431] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.015495] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015557] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[1.015620] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015682] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.015745] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015815] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.015878] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.015941] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.016004] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016066] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.016130] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.016192] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.016254] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016317] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.016379] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.016441] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.016503] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016564] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.016626] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.016689] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.016750] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016812] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.016874] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.016937] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.016999] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017061] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.017124] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.017186] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.017248] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017310] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.017373] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.017435] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.017498] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017561] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.017668] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.017765] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.017859] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017955] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.018052] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.018147] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.018241] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018334] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.018428] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.018524] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.018618] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018710] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[1.018819] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.018913] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.019004] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019098] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[1.019188] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.019253] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.019316] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.019386] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.019450] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.019531] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.019619] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.019680] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.019741] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.019802] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.019863] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.019923] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.019983] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.020059] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.020120] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.020181] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.020240] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.020301] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020362] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[1.020422] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.020483] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.020543] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.020604] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.020665] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.020726] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.020787] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.020847] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.020908] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.020969] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.021029] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.021095] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.021156] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.021217] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.021278] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.021339] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.021399] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.021460] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.021520] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021593] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[1.021651] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.021709] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.021768] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021826] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[1.021884] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.021943] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.022007] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022067] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[1.022126] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.022185] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.022243] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022302] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[1.022360] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.022418] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.022477] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022535] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[1.022593] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.022651] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.022709] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022794] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[1.022869] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.022928] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.022987] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023045] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[1.023104] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.023163] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.023222] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023281] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[1.023340] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.023399] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.023457] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023550] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[1.023613] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.023677] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.023749] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023806] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[1.023862] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.023919] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.023976] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024033] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[1.024089] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.024146] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.024203] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024259] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[1.024316] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.024372] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.024429] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024486] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[1.024543] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.024607] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.024664] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024721] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[1.024777] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.024834] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.024891] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024948] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.025006] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.025063] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.025120] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025177] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[1.025234] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.025291] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.025348] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025405] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[1.025463] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.025520] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.025589] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025644] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[1.025699] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.025754] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.025819] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025875] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[1.025961] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.026057] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.026122] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026193] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[1.026248] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.026304] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.026359] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026415] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.026471] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.026526] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.026582] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026638] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.026694] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.026777] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.026859] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026916] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.026972] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.027028] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.027090] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027146] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.027203] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.027260] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.027316] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027372] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.027428] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.027485] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.027541] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027619] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.027688] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.027785] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.027882] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027950] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.028048] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.028144] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.028212] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028306] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.028402] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.028494] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.028585] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028662] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.028725] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.028789] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.028852] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028916] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.028980] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.029045] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.029109] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029172] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.029236] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.029299] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.029362] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029425] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.029489] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.029567] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.029633] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029700] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.029781] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.029848] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.029918] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029984] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.030053] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.030121] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.030189] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030258] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.030328] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.030397] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.030477] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030557] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.030623] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.030691] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.030784] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030856] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.030923] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.030989] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.031056] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031122] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.031189] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.031257] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.031323] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031389] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.031462] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.031530] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.031597] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031662] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.031728] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.031794] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.031860] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031926] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.031991] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.032058] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.032124] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032190] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.032269] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.032337] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.032404] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032470] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.032537] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.032604] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.032670] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032737] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.032803] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.032869] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.032935] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033000] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.033067] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.033139] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.033205] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033271] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.033337] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.033403] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.033467] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033533] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.033611] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.033671] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033862] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.034089] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.034173] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034239] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[1.034304] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.034369] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034432] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.034497] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.034560] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.034623] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034685] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.034758] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.034828] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.034891] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034953] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.035016] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.035078] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035140] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035202] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.035265] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.035327] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035389] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035463] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.035524] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.035596] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035659] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035721] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.035784] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.035846] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035908] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035970] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.036033] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.036095] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.036158] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036221] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.036283] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.036358] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.036419] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036479] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.036540] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.036602] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.036671] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036731] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.036792] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.036853] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036913] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.036974] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.037034] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.037094] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037154] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.037214] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.037274] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.037334] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037393] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.037454] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.037515] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.037574] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037641] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.037701] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.037761] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.037821] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.037880] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.037940] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.038001] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.038060] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.038120] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.038181] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.038256] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.038318] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.038382] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.038444] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.038520] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.038642] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038765] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.038913] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.039042] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.039153] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.039264] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.039375] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.039486] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.039596] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.039706] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.039817] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.039934] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.040045] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.040156] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.040266] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.040375] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.040486] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040606] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.040705] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.040804] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040903] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041002] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.041101] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.041210] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.041309] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041408] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.041507] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.041606] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.041705] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041803] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.041902] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.042041] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.042192] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042315] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.042431] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.042533] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.042634] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042769] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.042895] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.042995] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.043095] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043193] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.043292] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.043392] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.043492] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043625] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.043790] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.043914] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.044066] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044218] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.044352] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.044452] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.044556] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044655] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.044755] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.044854] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.044953] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045052] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.045156] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.045256] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.045355] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045453] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.045553] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.045653] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.045776] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045892] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.045992] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.046091] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.046191] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046285] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.046386] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.046509] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.046620] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046731] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.046956] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.047084] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.047185] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047285] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.047386] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.047486] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047621] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.047747] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.047845] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.047943] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048040] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.048137] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.048234] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.048331] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048428] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.048583] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.048680] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.048776] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048873] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.048970] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.049067] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.049227] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049364] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.049461] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.049558] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.049655] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049751] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.049858] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.050000] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.050190] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050318] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.050429] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.050547] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.050643] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050760] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.050908] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.051005] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.051102] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.051199] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.051295] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.051391] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.051488] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051603] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.051717] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.051814] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.051910] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052007] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.052104] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.052251] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.052379] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052475] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.052572] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.052688] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.052808] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052904] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.053000] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.053097] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.053199] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053296] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.053397] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.053494] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.053590] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053686] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.054052] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.054237] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054410] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.054539] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.054668] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.054808] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054938] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.055066] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.055194] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.055323] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.055463] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.055584] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.055707] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.055814] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.055921] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056027] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.056134] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.056241] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.056348] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.056454] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.056561] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.056668] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.056774] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.056881] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056987] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.057094] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.057201] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.057308] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057414] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.057521] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.057627] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.057734] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057840] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.057947] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.058127] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058277] (turtle_brick) StdoutLine: {'line': b'1     E128 continuation line under-indented for visual indent\n'}
[1.058414] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.058524] (turtle_brick) StdoutLine: {'line': b'27    E225 missing whitespace around operator\n'}
[1.058634] (turtle_brick) StdoutLine: {'line': b"77    E231 missing whitespace after ','\n"}
[1.058764] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.058904] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.059014] (turtle_brick) StdoutLine: {'line': b"3     E262 inline comment should start with '# '\n"}
[1.059124] (turtle_brick) StdoutLine: {'line': b"33    E265 block comment should start with '# '\n"}
[1.059271] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.059392] (turtle_brick) StdoutLine: {'line': b'6     E302 expected 2 blank lines, found 0\n'}
[1.059505] (turtle_brick) StdoutLine: {'line': b'7     E303 too many blank lines (2)\n'}
[1.059662] (turtle_brick) StdoutLine: {'line': b'9     E501 line too long (115 > 99 characters)\n'}
[1.059796] (turtle_brick) StdoutLine: {'line': b"27    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.059905] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.060013] (turtle_brick) StdoutLine: {'line': b'38    W291 trailing whitespace\n'}
[1.060120] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.060227] (turtle_brick) StdoutLine: {'line': b'26    W293 blank line contains whitespace\n'}
[1.060335] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.060442] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060564] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.060666] (turtle_brick) StdoutLine: {'line': b'271 errors\n'}
[1.060768] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060869] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 171\n"}
[1.060972] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 28\n"}
[1.061073] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 72\n"}
[1.061175] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061277] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.061379] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061480] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.061581] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.061683] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.061785] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.061886] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.061987] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.062089] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.062190] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.062291] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.062393] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.062495] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.062597] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.062698] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.062853] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.062956] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.063059] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.063171] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.063274] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.063377] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.063479] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.063599] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.063717] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.063819] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.063925] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.064033] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.064135] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.064237] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.064338] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.064440] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.064542] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.064643] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.064745] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.064846] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.064949] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.065051] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D208: Docstring is over-indented\n'}
[1.065153] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.065255] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.065357] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.065459] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.065572] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.065669] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.065767] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.065863] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.065978] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.066215] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.066333] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.066430] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.066527] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.066625] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.066722] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.066892] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.066990] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.067088] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.067190] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.067287] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.067385] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.067482] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.067597] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.067711] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.067809] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.067906] (turtle_brick) StdoutLine: {'line': b'21 errors\n'}
[1.068003] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.068101] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.068197] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 271 code styl...\n'}
[1.068331] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.068444] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.40s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.068542] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.068652] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.068753] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.068923] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.069035] (turtle_brick) StderrLine: {'line': b'\n'}
[1.069130] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.069227] (turtle_brick) CommandEnded: {'returncode': 1}
[1.069612] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.069645] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.070129] (-) EventReactorShutdown: {}
