[0.000000] (-) TimerEvent: {}
[0.000190] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000312] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.001380] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.012220] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.099901] (-) TimerEvent: {}
[0.200201] (-) TimerEvent: {}
[0.246332] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.258914] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.265163] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.265513] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.265830] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.266052] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.266403] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.266612] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1956 - Experimental\n'}
[0.266826] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.266950] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.267073] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.267202] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.267326] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.267452] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.267575] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.267707] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.267846] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.267972] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.268099] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.268232] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.268384] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.268538] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.300326] (-) TimerEvent: {}
[0.320018] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.320254] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.380137] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.380648] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.380875] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.381037] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.388411] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.388673] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.396144] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.396596] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.396753] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.396914] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.397044] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.397208] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.400368] (-) TimerEvent: {}
[0.452644] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.452917] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.500459] (-) TimerEvent: {}
[0.520253] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.520496] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.524481] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.524668] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.524815] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.529081] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.529374] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.529558] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.541788] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.542148] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.550142] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.15 sec\n'}
[0.550541] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.550772] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.550906] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.551012] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.551269] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.551366] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.28 sec*proc (2 tests)\n'}
[0.551443] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.15 sec*proc (1 test)\n'}
[0.551513] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.551582] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.28 sec\n'}
[0.551651] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.551718] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.551787] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.569608] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.569929] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.570146] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.571813] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.572173] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.572224] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.600556] (-) TimerEvent: {}
[0.600779] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.600972] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.601155] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.608522] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.609444] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.700674] (-) TimerEvent: {}
[0.801004] (-) TimerEvent: {}
[0.816149] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.881414] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.881563] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.881644] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.881720] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.881793] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.901141] (-) TimerEvent: {}
[0.925953] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.926326] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 123 code style errors / warnings:\x1b[0m\n'}
[0.926935] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:32: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.928075] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:55: E202 whitespace before ')'\x1b[0m\n"}
[0.929031] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:158:68: W291 trailing whitespace\x1b[0m\n'}
[0.929206] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:68: W291 trailing whitespace\x1b[0m\n'}
[0.929336] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:56: W291 trailing whitespace\x1b[0m\n'}
[0.929447] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:182:80: E202 whitespace before ')'\x1b[0m\n"}
[0.929544] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:188:60: W291 trailing whitespace\x1b[0m\n'}
[0.929642] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:198:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.929747] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:200:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.929853] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:202:19: W291 trailing whitespace\x1b[0m\n'}
[0.929958] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.930063] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.930171] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.930278] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.930382] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.930491] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.930601] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.930706] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.930826] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.930936] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.931045] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.931156] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.931264] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.931376] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.931463] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.931533] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.931599] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.931663] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.931736] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.931801] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.931973] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.932039] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.932103] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.932167] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.932230] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.932312] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.932386] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.932450] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.932539] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.932608] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.932672] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.932736] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.932799] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.932862] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.932926] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.932989] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.933052] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933116] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.933180] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933249] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.933315] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.933380] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.933444] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.933509] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.933572] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.933643] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.933707] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.933771] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.933834] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.933898] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.933982] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.934050] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.934118] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.934185] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.934252] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.934318] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.934384] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.934450] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.934516] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.934583] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.934650] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.934716] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.934783] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.934850] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.934917] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.934996] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.935060] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.935136] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.935200] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.935264] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.935326] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.935389] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.935459] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.935524] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.935588] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.935652] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.935716] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.935780] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.935843] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.935907] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.935970] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.936034] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.936098] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.936161] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.936224] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.936300] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.936376] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.936440] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.936504] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.936567] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.936636] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.936699] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.936764] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.936827] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.936890] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.936954] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.937029] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.937096] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.937157] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.937220] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.937282] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.937343] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.937404] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.937466] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.937528] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.937590] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.937652] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.937714] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.937787] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.937848] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.937910] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.937971] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.938032] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.938094] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.938155] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.938220] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.938284] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:114:32: E128 continuation line under-indented for visual indent\n'}
[0.938346] (turtle_brick) StdoutLine: {'line': b'                               msg.pose.orientation.z) )\n'}
[0.938409] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.938502] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.938569] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:55: E202 whitespace before ')'\n"}
[0.938637] (turtle_brick) StdoutLine: {'line': b'                               msg.pose.orientation.z) )\n'}
[0.938705] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.938772] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.938840] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:158:68: W291 trailing whitespace\n'}
[0.938917] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[0.938980] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[0.939043] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.939107] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:159:68: W291 trailing whitespace\n'}
[0.939177] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[0.939241] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[0.939305] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.939381] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:162:56: W291 trailing whitespace\n'}
[0.939442] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[0.939503] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.939565] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.939625] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:182:80: E202 whitespace before ')'\n"}
[0.939687] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[0.939750] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[0.939812] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.939888] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:188:60: W291 trailing whitespace\n'}
[0.939983] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang - self.tilt_angf) >= 0.01:       \n'}
[0.940116] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[0.940241] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.940343] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:198:1: E302 expected 2 blank lines, found 1\n'}
[0.940448] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[0.940523] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.940591] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.940655] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:200:16: E225 missing whitespace around operator\n'}
[0.940721] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[0.940785] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[0.940850] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.940914] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:202:19: W291 trailing whitespace\n'}
[0.940979] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.941043] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.941108] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.941185] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[0.941247] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[0.941310] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.941373] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.941435] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[0.941499] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[0.941562] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.941625] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.941687] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[0.941750] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[0.941813] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.941890] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.941954] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[0.942019] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[0.942084] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.942148] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.942226] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[0.942303] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.942369] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.942435] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.942501] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[0.942692] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.942969] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.943088] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.943174] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[0.943238] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.943304] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.943367] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.943430] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[0.943492] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.943557] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.943620] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.943682] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[0.943747] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[0.943808] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.943870] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.943930] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[0.943993] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[0.944055] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.944117] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.944178] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[0.944263] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[0.944419] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.944538] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.944655] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[0.944722] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.944785] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[0.944847] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[0.944910] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[0.944971] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[0.945034] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[0.945113] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.945174] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[0.945235] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[0.945296] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[0.945358] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.945417] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[0.945478] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[0.945538] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[0.945598] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.945658] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.945747] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.945834] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.945930] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[0.946030] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.946131] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[0.946215] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[0.946299] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[0.946367] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[0.946435] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[0.946534] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.946618] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[0.946686] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[0.946760] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[0.946847] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.946915] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[0.946984] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[0.947054] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[0.947123] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.947221] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.947289] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[0.947357] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.947425] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.947495] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[0.947563] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.947631] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.947698] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.947765] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[0.947833] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.947899] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.947966] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948034] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[0.948102] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.948169] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.948235] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948316] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[0.948388] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.948455] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.948521] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948601] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[0.948670] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[0.948738] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.948807] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948885] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[0.948947] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[0.949010] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.949072] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949133] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[0.949196] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[0.949266] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.949340] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949401] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[0.949462] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.949525] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.949586] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949648] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[0.949709] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.949770] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.949831] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949892] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[0.949953] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.950014] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[0.950076] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950137] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[0.950198] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[0.950260] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.950323] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950384] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[0.950446] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[0.950507] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[0.950568] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950629] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[0.950690] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[0.950752] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.950813] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950874] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[0.950937] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[0.950998] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[0.951060] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951121] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[0.951182] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[0.951243] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.951305] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951366] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[0.951427] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.951509] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.951573] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951633] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[0.951707] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.951774] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.951837] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951898] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[0.951959] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.952025] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[0.952087] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952148] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[0.952208] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[0.952269] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.952351] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952414] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[0.952476] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[0.952537] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[0.952598] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952658] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[0.952718] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[0.952778] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.952841] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952902] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[0.952964] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.953025] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.953086] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953146] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[0.953207] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.953268] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.953329] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953389] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[0.953450] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[0.953513] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.953574] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953635] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[0.953697] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.953758] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.953820] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953881] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[0.953942] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[0.954004] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.954065] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954129] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[0.954191] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.954252] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.954313] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954376] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[0.954439] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.954532] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.954641] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954712] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[0.954779] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.954846] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.954912] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954978] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[0.955043] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[0.955110] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.955174] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955239] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[0.955304] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.955369] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.955434] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955499] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[0.955575] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[0.955637] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.955698] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955760] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[0.955821] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[0.955883] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.955944] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956018] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[0.956083] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[0.956148] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.956212] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956276] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[0.956366] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[0.956433] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[0.956498] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956563] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[0.956628] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[0.956712] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.956794] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956859] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[0.956926] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[0.956995] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.957062] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957128] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[0.957194] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[0.957262] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.957340] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957433] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[0.957504] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.957573] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.957642] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957711] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[0.957780] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.957865] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[0.957936] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958006] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[0.958093] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.958188] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[0.958257] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958326] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[0.958394] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[0.958461] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.958528] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958594] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[0.958662] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.958729] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.958797] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958910] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[0.958973] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.959034] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.959095] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959157] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[0.959219] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.959282] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.959344] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959405] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[0.959466] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[0.959527] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.959588] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959649] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[0.959710] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[0.959771] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959832] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[0.959893] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.959953] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960014] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[0.960076] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[0.960137] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960198] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[0.960259] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[0.960347] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.960408] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960473] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[0.960533] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[0.960592] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.960651] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960710] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[0.960769] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[0.960828] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.960888] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960948] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[0.961009] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[0.961068] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.961128] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961205] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[0.961299] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[0.961418] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.961505] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961565] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[0.961627] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[0.961687] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.961748] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961809] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[0.961872] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[0.961933] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.961994] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962054] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[0.962116] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[0.962179] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.962240] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962301] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[0.962363] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[0.962616] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.962816] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962898] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[0.962972] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[0.963044] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963114] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[0.963187] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[0.963259] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.963329] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963400] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[0.963472] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[0.963541] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[0.963612] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963682] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[0.963763] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[0.963847] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.963925] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963994] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[0.964061] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.964140] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[0.964206] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[0.964271] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[0.964371] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[0.964430] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[0.964487] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[0.964544] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[0.964602] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[0.964660] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[0.964718] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[0.964775] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.964832] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.964889] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[0.964946] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965003] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[0.965061] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.965118] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[0.965175] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[0.965235] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[0.965291] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[0.965347] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[0.965404] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[0.965461] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[0.965517] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[0.965574] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[0.965642] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[0.965699] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.965755] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.965811] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[0.965868] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965924] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[0.965981] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[0.966057] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.966132] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966188] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[0.966244] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[0.966301] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.966358] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966415] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[0.966472] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[0.966529] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[0.966591] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966647] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[0.966704] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.966759] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.966816] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966871] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[0.966929] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[0.966985] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.967043] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967098] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[0.967167] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[0.967226] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[0.967284] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.967341] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967399] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[0.967455] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[0.967512] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[0.967569] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967625] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[0.967681] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[0.967737] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.967806] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967864] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[0.967922] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[0.967981] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[0.968039] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968096] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[0.968155] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[0.968220] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[0.968279] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968392] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[0.968454] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[0.968514] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.968572] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968630] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[0.968689] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[0.968753] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[0.968812] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968885] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[0.968947] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[0.969009] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[0.969070] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969131] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[0.969192] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[0.969253] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.969314] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969374] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[0.969437] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[0.969498] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.969559] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969619] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[0.969681] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[0.969741] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969801] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[0.969877] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[0.969941] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.970065] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970185] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[0.970291] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[0.970374] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.970439] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970504] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[0.970593] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[0.970675] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.970751] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970811] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[0.970877] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[0.970937] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.970997] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971059] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[0.971118] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[0.971178] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.971238] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971297] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[0.971357] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[0.971417] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.971476] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971540] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[0.971599] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[0.971659] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.971718] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971777] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[0.971837] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.971896] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.971958] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[0.972017] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[0.972075] (turtle_brick) StderrLine: {'line': b'\n'}
[0.972134] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[0.972192] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[0.972252] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[0.972352] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.972429] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.972487] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.972547] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972606] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[0.972665] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[0.972724] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.972782] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972852] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[0.972910] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[0.972967] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.973030] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973088] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[0.973146] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[0.973203] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.973259] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973315] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[0.973373] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[0.973430] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[0.973487] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973544] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[0.973602] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.973660] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.973716] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973773] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[0.973843] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[0.973903] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973962] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[0.974023] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[0.974083] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.974143] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974202] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[0.974268] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.974328] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[0.974389] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[0.974469] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[0.974531] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.974593] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.974654] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.974716] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974778] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[0.974840] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.974902] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[0.974964] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[0.975027] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[0.975090] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[0.975152] (turtle_brick) StdoutLine: {'line': b'   \n'}
[0.975226] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[0.975287] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975347] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[0.975408] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[0.975469] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.975529] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975589] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[0.975650] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.975711] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.975771] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975846] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[0.975909] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[0.975971] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976033] (turtle_brick) StdoutLine: {'line': b'2     E128 continuation line under-indented for visual indent\n'}
[0.976095] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[0.976156] (turtle_brick) StdoutLine: {'line': b'7     E225 missing whitespace around operator\n'}
[0.976219] (turtle_brick) StdoutLine: {'line': b"25    E231 missing whitespace after ','\n"}
[0.976281] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[0.976369] (turtle_brick) StdoutLine: {'line': b'2     E261 at least two spaces before inline comment\n'}
[0.976428] (turtle_brick) StdoutLine: {'line': b"2     E262 inline comment should start with '# '\n"}
[0.976485] (turtle_brick) StdoutLine: {'line': b"9     E265 block comment should start with '# '\n"}
[0.976543] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[0.976605] (turtle_brick) StdoutLine: {'line': b'6     E302 expected 2 blank lines, found 0\n'}
[0.976677] (turtle_brick) StdoutLine: {'line': b'3     E303 too many blank lines (3)\n'}
[0.976736] (turtle_brick) StdoutLine: {'line': b'7     E501 line too long (115 > 99 characters)\n'}
[0.976794] (turtle_brick) StdoutLine: {'line': b"23    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[0.976852] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[0.976910] (turtle_brick) StdoutLine: {'line': b'15    W291 trailing whitespace\n'}
[0.976967] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[0.977023] (turtle_brick) StdoutLine: {'line': b'10    W293 blank line contains whitespace\n'}
[0.977080] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977145] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[0.977202] (turtle_brick) StdoutLine: {'line': b'123 errors\n'}
[0.977258] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977314] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 68\n"}
[0.977372] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 24\n"}
[0.977429] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 31\n"}
[0.977485] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977542] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[0.977598] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977655] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[0.977711] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[0.977768] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[0.977843] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[0.977905] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[0.977965] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[0.978024] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[0.978085] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[0.978146] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[0.978205] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[0.978265] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[0.978325] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[0.978385] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[0.978452] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[0.978513] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[0.978574] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[0.978650] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[0.978712] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[0.978793] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[0.978875] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.978951] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.979012] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[0.979073] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[0.979134] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[0.979195] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[0.979255] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[0.979316] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[0.979377] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[0.979438] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[0.979498] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[0.979559] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[0.979620] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[0.979681] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[0.979743] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.979824] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D208: Docstring is over-indented\n'}
[0.979890] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[0.979956] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[0.980020] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[0.980083] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.980148] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[0.980210] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[0.980273] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.980368] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[0.980432] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[0.980495] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[0.980557] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[0.980620] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[0.980683] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.980748] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[0.980810] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[0.980884] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[0.980943] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:14 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[0.981004] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:14 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[0.981065] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[0.981124] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[0.981181] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[0.981240] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[0.981298] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[0.981355] (turtle_brick) StdoutLine: {'line': b'19 errors\n'}
[0.981413] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[0.981471] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[0.981529] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 123 code styl...\n'}
[0.981587] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[0.981657] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.41s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.001274] (-) TimerEvent: {}
[1.009737] (turtle_brick) CommandEnded: {'returncode': 1}
[1.010490] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.010598] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.011061] (-) EventReactorShutdown: {}
