[0.000000] (-) TimerEvent: {}
[0.000182] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000289] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000369] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.009244] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.099003] (-) TimerEvent: {}
[0.199315] (-) TimerEvent: {}
[0.266658] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.279655] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.286292] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.286615] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.286863] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.287086] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.287228] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.287360] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1921 - Experimental\n'}
[0.287578] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.287826] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.287982] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.288136] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.288248] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.288322] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.288391] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.288458] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.288674] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.288810] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.288927] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.288999] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.289069] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.289153] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299425] (-) TimerEvent: {}
[0.344592] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.344848] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.399552] (-) TimerEvent: {}
[0.405455] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.405685] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.405779] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.405897] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.413992] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.414322] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.422472] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.422867] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.423006] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.423158] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.423311] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.423470] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.476985] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.477223] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.499676] (-) TimerEvent: {}
[0.546357] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.546601] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.550747] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.550930] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.551151] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.565488] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.565700] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.565803] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.580933] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.581141] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.594794] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.17 sec\n'}
[0.595178] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.595412] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.595571] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.595786] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.595979] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.596111] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.31 sec*proc (2 tests)\n'}
[0.596239] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.17 sec*proc (1 test)\n'}
[0.596373] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.596498] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.31 sec\n'}
[0.596630] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.596752] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.596870] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.599748] (-) TimerEvent: {}
[0.615602] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.615910] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.616053] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.617516] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.617989] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.618031] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.629287] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.629490] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.629651] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.636800] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.637938] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.699862] (-) TimerEvent: {}
[0.800190] (-) TimerEvent: {}
[0.833904] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.895384] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.895575] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.895665] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.895756] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.895817] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.900256] (-) TimerEvent: {}
[0.928518] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.929151] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 273 code style errors / warnings:\x1b[0m\n'}
[0.929473] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:14:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.929888] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:26:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.930395] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:36:53: W291 trailing whitespace\x1b[0m\n'}
[0.930750] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:46:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.931208] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:47:33: W291 trailing whitespace\x1b[0m\n'}
[0.931458] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:52:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.931722] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:53:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.932092] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:60:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.932354] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.932619] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:68:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.933675] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:68:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.935447] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:68:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.937059] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:69:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.938404] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.938755] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.938896] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.939085] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.939214] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.939329] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.939443] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.939568] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.939684] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:79:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.939798] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:80:47: E231 missing whitespace after ','\x1b[0m\n"}
[0.939953] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:80:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.940130] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:81:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.940253] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:81:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.940368] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:82:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.940483] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.940597] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:100:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.940719] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:186:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.940860] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:186:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.940971] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:26: W291 trailing whitespace\x1b[0m\n'}
[0.941083] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:202:42: E231 missing whitespace after ','\x1b[0m\n"}
[0.941208] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:204:37: E231 missing whitespace after ','\x1b[0m\n"}
[0.941319] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:205:35: E231 missing whitespace after ','\x1b[0m\n"}
[0.941431] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:205:45: E231 missing whitespace after ','\x1b[0m\n"}
[0.941543] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.941655] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:209:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.941767] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:216:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.941892] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:218:48: E231 missing whitespace after ','\x1b[0m\n"}
[0.942008] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:218:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.942120] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:220:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.942233] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:220:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.942346] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:222:36: E231 missing whitespace after ','\x1b[0m\n"}
[0.942460] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:13: E225 missing whitespace around operator\x1b[0m\n'}
[0.942589] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:233:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.942667] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:250:58: E225 missing whitespace around operator\x1b[0m\n'}
[0.942735] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:253:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.942802] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:254:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.942873] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:255:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.942942] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:255:23: E231 missing whitespace after ','\x1b[0m\n"}
[0.943009] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:255:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.943075] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:255:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.943141] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:260:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.943206] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:267:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.943271] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:267:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.943335] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:269:30: W291 trailing whitespace\x1b[0m\n'}
[0.943414] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:271:42: E225 missing whitespace around operator\x1b[0m\n'}
[0.943496] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:272:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.943560] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:272:66: E262 inline comment should start with '# '\x1b[0m\n"}
[0.943623] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:272:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.943687] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:289:9: E225 missing whitespace around operator\x1b[0m\n'}
[0.943749] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:291:19: W291 trailing whitespace\x1b[0m\n'}
[0.943818] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:292:1: W391 blank line at end of file\x1b[0m\n'}
[0.943882] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.943944] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.944006] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[0.944069] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.944131] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.944193] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.944256] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[0.944318] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[0.944377] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.944440] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.944504] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[0.944567] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[0.944630] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[0.944694] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[0.944785] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[0.944846] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[0.944919] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[0.944980] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[0.945041] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[0.945102] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.945168] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[0.945229] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.945290] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.945351] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.945412] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.945472] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.945532] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.945592] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.945653] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.945713] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.945773] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.945834] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.945940] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.946006] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.946072] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.946137] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.946202] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.946291] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[0.946426] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.946546] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.946632] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[0.946707] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[0.946775] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.946841] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.946906] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.946972] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.947036] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.947106] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.947172] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.947236] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.947300] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.947364] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[0.947427] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[0.947490] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.947553] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.947616] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[0.947678] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.947739] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.947802] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.947865] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.948030] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.948096] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.948160] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.948224] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.948286] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.948349] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.948413] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.948477] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.948541] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.948604] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.948668] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.948732] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.948796] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[0.948879] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[0.948941] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[0.949003] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.949065] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[0.949128] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.949191] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[0.949252] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.949319] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.949382] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[0.949444] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[0.949506] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.949569] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[0.949631] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.949694] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[0.949757] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[0.949820] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.949883] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.949945] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.950007] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.950068] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[0.950130] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.950192] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[0.950253] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[0.950376] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.950498] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.950626] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.950744] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.950864] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.950987] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.951113] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.951235] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.951344] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.951454] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.951563] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.951671] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.951780] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.951907] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.952016] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.952125] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.952235] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.952344] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.952453] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.952562] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.952671] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.952781] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.952890] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.952999] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.953108] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.953250] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.953357] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.953463] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.953568] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.953674] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.953796] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.953934] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.954061] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.954186] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.954327] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.954473] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.954607] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.954733] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.954856] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.954980] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.955103] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.955226] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.955358] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.955474] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.955591] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.955708] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.955824] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.955940] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.956057] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.956174] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.956291] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.956407] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.956523] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.956653] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.956770] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.956887] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.957003] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.957125] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.957241] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.957357] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.957474] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.957591] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.957707] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.957824] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.957940] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.958058] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.958174] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.958296] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.958413] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.958530] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.958669] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.958774] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.958878] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.958983] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.959088] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.959192] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.959296] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.959430] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.959575] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.959759] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.959861] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.959940] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.960021] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.960099] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.960191] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.960268] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.960348] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.960425] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.960501] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.960563] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.960626] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.960689] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.960751] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.960813] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.960876] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.960939] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.961002] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.961079] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.961142] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.961205] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.961268] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.961331] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.961395] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.961458] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.961527] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.961590] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.961652] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.961715] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.961778] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.961847] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.961910] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.961973] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.962035] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.962097] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.962159] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.962223] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962286] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:14:1: E302 expected 2 blank lines, found 1\n'}
[0.962349] (turtle_brick) StdoutLine: {'line': b'class BState(Enum):\n'}
[0.962411] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.962476] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962538] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:26:1: E302 expected 2 blank lines, found 1\n'}
[0.962618] (turtle_brick) StdoutLine: {'line': b'class Arena(Node):\n'}
[0.962683] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.962746] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962809] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:36:53: W291 trailing whitespace\n'}
[0.962873] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.962936] (turtle_brick) StdoutLine: {'line': b'    Creates the arena and places brick when called in command line.\n'}
[0.962999] (turtle_brick) StdoutLine: {'line': b'    Will drop the robot when called in command line.\n'}
[0.963062] (turtle_brick) StdoutLine: {'line': b'        -if robot is underneath the brick, the brick will land on the robot\n'}
[0.963125] (turtle_brick) StdoutLine: {'line': b'        -if nothing is under brick, brick will land on ground\n'}
[0.963186] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.963262] (turtle_brick) StdoutLine: {'line': b'        -robot_sub: continuous robot position\n'}
[0.963322] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.963382] (turtle_brick) StdoutLine: {'line': b'        -marker_pub: publishes walls and brick\n'}
[0.963442] (turtle_brick) StdoutLine: {'line': b'        -drop_pub: sends placement, drop coordinates  \n'}
[0.963502] (turtle_brick) StdoutLine: {'line': b'        -platform_pub: sends true if platform is under brick\n'}
[0.963562] (turtle_brick) StdoutLine: {'line': b'    SERVICES:\n'}
[0.963622] (turtle_brick) StdoutLine: {'line': b'        -Place: place brick at x, y, z location\n'}
[0.963682] (turtle_brick) StdoutLine: {'line': b'        -Drop: Empty drops brick\n'}
[0.963743] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.963803] (turtle_brick) StdoutLine: {'line': b'        -world_brick: connects brick to world\n'}
[0.963862] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.963920] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.963980] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.964039] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964097] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:46:9: E265 block comment should start with '# '\n"}
[0.964156] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.964225] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.964279] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964332] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:47:33: W291 trailing whitespace\n'}
[0.964387] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.964441] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.964496] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964557] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:52:32: E231 missing whitespace after ','\n"}
[0.964612] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.964666] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.964720] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964774] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:53:27: E231 missing whitespace after ','\n"}
[0.964829] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.964883] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.964938] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964994] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:60:9: E265 block comment should start with '# '\n"}
[0.965048] (turtle_brick) StdoutLine: {'line': b'        #setting state of brick\n'}
[0.965103] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.965158] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965213] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:67:9: E265 block comment should start with '# '\n"}
[0.965268] (turtle_brick) StdoutLine: {'line': b'        #set up subscribers\n'}
[0.965323] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.965378] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965432] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:68:55: E231 missing whitespace after ','\n"}
[0.965486] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.965541] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.965595] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965650] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:68:64: E231 missing whitespace after ','\n"}
[0.965705] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.965761] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.965816] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965904] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:68:84: E231 missing whitespace after ','\n"}
[0.965965] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.966027] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[0.966088] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966149] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:69:9: E265 block comment should start with '# '\n"}
[0.966221] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[0.966283] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.966352] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966414] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:55: E231 missing whitespace after ','\n"}
[0.966475] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.966537] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.966615] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966688] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:65: E231 missing whitespace after ','\n"}
[0.966742] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.966796] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.966849] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966902] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:54: E231 missing whitespace after ','\n"}
[0.966956] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.967009] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.967069] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967121] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:62: E231 missing whitespace after ','\n"}
[0.967175] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.967228] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.967283] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967335] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:55: E231 missing whitespace after ','\n"}
[0.967388] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.967441] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.967494] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967546] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:64: E231 missing whitespace after ','\n"}
[0.967599] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.967651] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.967704] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967756] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:75:1: W293 blank line contains whitespace\n'}
[0.967821] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.967875] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.967929] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967984] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\n'}
[0.968038] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.968092] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.968146] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968199] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:79:9: E265 block comment should start with '# '\n"}
[0.968254] (turtle_brick) StdoutLine: {'line': b'        #initialize services\n'}
[0.968308] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.968364] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968419] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:80:47: E231 missing whitespace after ','\n"}
[0.968473] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.968528] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[0.968583] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968638] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:80:56: E231 missing whitespace after ','\n"}
[0.968694] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.968749] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.968819] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968881] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:81:46: E231 missing whitespace after ','\n"}
[0.968943] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.969005] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.969066] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969127] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:81:54: E231 missing whitespace after ','\n"}
[0.969189] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.969251] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.969313] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969375] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:82:1: W293 blank line contains whitespace\n'}
[0.969438] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.969500] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.969569] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969631] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:9: E265 block comment should start with '# '\n"}
[0.969693] (turtle_brick) StdoutLine: {'line': b'        #creating brick marker\n'}
[0.969755] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.969831] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969890] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:100:9: E265 block comment should start with '# '\n"}
[0.969950] (turtle_brick) StdoutLine: {'line': b'        #creating wall markers\n'}
[0.970009] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.970067] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970126] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:186:9: E303 too many blank lines (2)\n'}
[0.970185] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.970243] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.970316] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970376] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:186:9: E265 block comment should start with '# '\n"}
[0.970436] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.970496] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.970556] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970631] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:189:26: W291 trailing whitespace\n'}
[0.970691] (turtle_brick) StdoutLine: {'line': b'        self.brickz = 0.0 \n'}
[0.970750] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[0.970825] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970886] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:202:42: E231 missing whitespace after ','\n"}
[0.970948] (turtle_brick) StdoutLine: {'line': b'        self.wall = self.create_timer(0.5,self.wall_callback)\n'}
[0.971009] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.971070] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971130] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:204:37: E231 missing whitespace after ','\n"}
[0.971191] (turtle_brick) StdoutLine: {'line': b'    def place_callback(self, request,response):\n'}
[0.971253] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.971314] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971375] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:205:35: E231 missing whitespace after ','\n"}
[0.971436] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.971496] (turtle_brick) StdoutLine: {'line': b'                                  ^\n'}
[0.971565] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971626] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:205:45: E231 missing whitespace after ','\n"}
[0.971690] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.971751] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.971812] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971883] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:208:1: W293 blank line contains whitespace\n'}
[0.971940] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.971997] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.972054] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972112] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:209:28: E231 missing whitespace after ','\n"}
[0.972170] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.972227] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.972285] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972342] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:216:24: E225 missing whitespace around operator\n'}
[0.972403] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[0.972463] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.972529] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972587] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:218:48: E231 missing whitespace after ','\n"}
[0.972645] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.972703] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.972772] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972830] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:218:65: E231 missing whitespace after ','\n"}
[0.972888] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.972945] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.973003] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973061] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:220:46: E231 missing whitespace after ','\n"}
[0.973120] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.973178] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.973236] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973293] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:220:61: E231 missing whitespace after ','\n"}
[0.973350] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.973410] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.973468] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973527] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:222:36: E231 missing whitespace after ','\n"}
[0.973585] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self, request,response):\n'}
[0.973642] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[0.973702] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973759] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:223:13: E225 missing whitespace around operator\n'}
[0.973819] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[0.973907] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.973968] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974036] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:233:9: E265 block comment should start with '# '\n"}
[0.974091] (turtle_brick) StdoutLine: {'line': b'        #publishing wall markers\n'}
[0.974145] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.974200] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974255] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:250:58: E225 missing whitespace around operator\n'}
[0.974310] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[0.974365] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.974419] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974473] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:253:1: W293 blank line contains whitespace\n'}
[0.974527] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.974620] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.974692] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974746] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:254:1: W293 blank line contains whitespace\n'}
[0.974800] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.974853] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.974906] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974960] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:255:5: E303 too many blank lines (2)\n'}
[0.975015] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.975069] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.975123] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975176] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:255:23: E231 missing whitespace after ','\n"}
[0.975236] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.975290] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.975344] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975398] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:255:25: E231 missing whitespace after ','\n"}
[0.975454] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.975508] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.975562] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975616] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:255:27: E231 missing whitespace after ','\n"}
[0.975670] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.975724] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.975778] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975851] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:260:1: W293 blank line contains whitespace\n'}
[0.975911] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.975972] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.976033] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976093] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:267:25: E231 missing whitespace after ','\n"}
[0.976155] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.976215] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.976276] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976336] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:267:27: E231 missing whitespace after ','\n"}
[0.976398] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.976458] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.976518] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976578] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:269:30: W291 trailing whitespace\n'}
[0.976639] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[0.976700] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[0.976760] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976820] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:271:42: E225 missing whitespace around operator\n'}
[0.976892] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[0.976949] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.977009] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977065] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:272:65: E261 at least two spaces before inline comment\n'}
[0.977123] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.977187] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.977246] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977303] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:272:66: E262 inline comment should start with '# '\n"}
[0.977360] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.977417] (turtle_brick) StdoutLine: {'line': b'                                                                 ^\n'}
[0.977475] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977532] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:272:100: E501 line too long (100 > 99 characters)\n'}
[0.977589] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.977647] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.977705] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977762] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:289:9: E225 missing whitespace around operator\n'}
[0.977825] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[0.977916] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.977990] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978046] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:291:19: W291 trailing whitespace\n'}
[0.978101] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.978156] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.978211] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978266] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:292:1: W391 blank line at end of file\n'}
[0.978321] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978396] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.978476] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978614] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[0.978737] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.978887] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.979021] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979219] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[0.979403] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.979543] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.979668] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979791] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[0.979925] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[0.980057] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.980173] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980288] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[0.980406] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[0.980523] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.980638] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980754] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[0.980912] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.981025] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.981137] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981249] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[0.981362] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.981475] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.981588] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981700] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[0.981826] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[0.981943] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.982058] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982174] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[0.982291] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.982407] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.982523] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982651] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[0.982770] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.982887] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.983003] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983118] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[0.983235] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[0.983360] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.983476] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983592] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[0.983709] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.983824] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.983941] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.984057] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.984173] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.984291] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.984408] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.984525] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.984641] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.984757] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.984874] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.984992] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.985109] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.985225] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.985341] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.985458] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.985575] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.985690] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.985806] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.985922] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.986037] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.986153] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[0.986278] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986394] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[0.986555] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.986691] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.986811] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.986934] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.987062] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.987186] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.987308] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.987431] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.987553] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.987687] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.987803] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.987919] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.988035] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.988151] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.988267] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.988392] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.988509] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.988641] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.988764] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.988887] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.989010] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.989133] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[0.989256] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989378] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[0.989501] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.989623] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.989746] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.989893] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.990032] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.990154] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.990279] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.990407] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.990532] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.990670] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.990797] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.990933] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.991053] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.991173] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.991305] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.991421] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.991537] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.991653] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.991781] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.991894] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.992007] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.992119] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[0.992231] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992344] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[0.992457] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.992569] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.992702] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.992816] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.992929] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.993042] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.993154] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.993267] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.993379] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.993500] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.993612] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.993725] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.993838] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.993950] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.994062] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.994175] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.994287] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.994399] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.994545] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.994706] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.994824] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.994939] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.995055] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995170] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[0.995286] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.995414] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.995535] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.995647] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.995760] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.995889] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.996008] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.996127] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.996246] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.996365] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.996500] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.996626] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.996752] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.996878] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.997003] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.997129] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.997255] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.997381] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.997506] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.997632] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.997758] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.997883] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[0.998009] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998135] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[0.998261] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.998387] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.998513] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.998673] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.998897] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.999079] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.999207] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.999332] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.999458] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.999584] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.999721] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.999844] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.999966] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.000088] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.000210] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.000328] (-) TimerEvent: {}
[1.000447] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.000600] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.000706] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.000811] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.000932] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.001040] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.001148] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.001257] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001365] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[1.001473] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.001581] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.001690] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.001799] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.001932] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.002059] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.002167] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.002275] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.002384] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.002514] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.002664] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.002799] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.002931] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.003058] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.003171] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.003283] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.003404] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.003508] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.003611] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.003733] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.003837] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.003940] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.004070] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004201] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[1.004305] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.004409] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.004513] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.004617] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.004720] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.004824] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.004933] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.005037] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.005141] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.005245] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.005349] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.005452] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.005556] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.005659] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.005762] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.005886] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.006021] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.006124] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.006228] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.006332] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.006435] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.006539] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[1.006695] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006798] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[1.006902] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.007006] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.007109] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.007227] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.007332] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.007438] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.007544] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.007650] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.007756] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.007862] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.007969] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.008108] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.008230] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.008335] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.008464] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.008576] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.008688] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.008799] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.008911] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.009023] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.009145] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.009249] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.009355] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009460] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[1.009566] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.009672] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.009778] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009905] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[1.010037] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.010142] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.010248] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010389] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[1.010515] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.010670] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.010831] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010970] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[1.011089] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.011207] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.011326] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011445] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[1.011565] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.011685] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.011805] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011924] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[1.012044] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.012163] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.012283] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012402] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[1.012521] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.012640] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.012761] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012881] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[1.013000] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.013120] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.013239] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013358] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[1.013488] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.013607] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.013733] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013853] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[1.013972] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.014092] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.014212] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014330] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[1.014460] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.014586] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.014709] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014828] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[1.014949] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.015068] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.015188] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015306] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[1.015425] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.015545] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.015663] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015782] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[1.015912] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.016018] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[1.016125] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016230] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[1.016337] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.016443] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[1.016549] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016655] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[1.016761] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.016868] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.016974] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017080] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[1.017186] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.017292] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.017398] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017503] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[1.017609] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.017716] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.017951] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018218] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[1.018816] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[1.019390] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.019872] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020131] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[1.020271] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.020369] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.020465] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020560] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[1.020655] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.020750] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.020857] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020956] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[1.021055] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.021154] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.021253] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021351] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[1.021450] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[1.021549] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.021647] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021746] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[1.021900] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[1.022055] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.022207] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022378] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[1.022517] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[1.022625] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.022700] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022761] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[1.022821] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[1.022880] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.022939] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022998] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[1.023057] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[1.023117] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.023175] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023234] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[1.023293] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.023351] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.023410] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023468] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[1.023526] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[1.023584] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.023642] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023700] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[1.023766] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.023826] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[1.023889] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023947] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[1.024005] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.024064] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.024124] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024195] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[1.024256] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.024314] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.024371] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024427] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[1.024483] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.024551] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[1.024608] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024663] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[1.024721] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.024779] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[1.024835] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024891] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[1.024946] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.025003] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.025059] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025114] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[1.025171] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.025228] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.025283] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025340] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[1.025396] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.025452] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.025508] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025564] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[1.025620] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.025676] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.025732] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025787] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[1.025894] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.025960] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.026031] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026086] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[1.026141] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[1.026195] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.026255] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026310] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[1.026384] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.026449] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.026515] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026595] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[1.026663] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.026727] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.026792] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026857] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[1.026922] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.026987] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.027052] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027117] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[1.027184] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.027251] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.027318] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027385] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[1.027451] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.027517] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.027586] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027653] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[1.027719] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.027787] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.027854] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027919] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[1.027986] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.028052] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.028118] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028183] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[1.028249] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.028314] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.028379] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028443] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.028508] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.028573] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.028637] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028701] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[1.028766] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.028843] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.028909] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028974] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[1.029038] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.029103] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.029167] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029232] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[1.029297] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.029362] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.029436] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029532] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[1.029599] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.029696] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.029792] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029921] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[1.030016] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.030096] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.030174] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030239] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[1.030306] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.030372] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.030437] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030502] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[1.030581] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.030655] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.030721] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030786] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[1.030852] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.030928] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.030987] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031047] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[1.031107] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.031166] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.031226] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031285] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[1.031345] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.031404] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.031463] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031536] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[1.031593] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.031651] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.031708] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031766] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[1.031836] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.031894] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.031952] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032010] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[1.032068] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.032125] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.032183] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032240] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[1.032298] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.032355] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.032412] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032474] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[1.032532] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.032590] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.032647] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032705] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[1.032762] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.032820] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.032877] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032935] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[1.032993] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.033051] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.033109] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033166] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[1.033224] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.033282] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.033339] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033396] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[1.033454] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.033511] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.033568] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033624] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[1.033682] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.033739] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.033795] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033870] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[1.033927] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.033983] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.034040] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034096] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[1.034159] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.034216] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.034273] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034329] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[1.034386] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.034442] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.034499] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034563] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[1.034628] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.034699] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.034758] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034816] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[1.034874] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.034933] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.034993] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035052] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[1.035117] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.035176] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.035235] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035295] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[1.035353] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.035412] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.035483] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035540] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[1.035597] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035653] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035709] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035765] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.035821] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.035877] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035933] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035988] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.036045] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.036101] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.036157] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036213] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.036269] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.036325] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.036381] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036437] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.036493] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.036550] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.036606] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036662] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.036719] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.036797] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.036862] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036919] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.036976] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.037033] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.037090] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037147] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.037205] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.037275] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.037335] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037394] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.037455] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.037514] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.037575] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037634] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.037694] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.037754] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.037813] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037891] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.037959] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.038074] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038220] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038358] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[1.038494] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.038640] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038778] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038915] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[1.039051] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.039187] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.039343] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.039467] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.039591] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.039730] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.039855] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.039979] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.040118] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.040249] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.040381] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.040512] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.040644] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.040793] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.040959] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.041091] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.041222] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.041355] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041487] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[1.041620] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.041768] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.041927] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.042054] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.042192] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.042320] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.042446] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.042583] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.042750] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.042954] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.043072] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.043188] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.043306] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.043424] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.043543] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.043669] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.043786] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.043905] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.044023] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044141] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[1.044259] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.044378] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.044497] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044615] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[1.044734] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.044852] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.044970] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045088] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[1.045206] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.045324] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.045442] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045560] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[1.045679] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.045797] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.045949] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046055] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[1.046162] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.046268] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.046374] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046481] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[1.046622] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.046748] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.046853] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046959] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[1.047066] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.047172] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.047277] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047383] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[1.047514] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.047643] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.047777] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047883] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[1.047989] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.048095] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.048202] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048308] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[1.048414] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.048521] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.048627] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048734] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[1.048840] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.048953] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.049059] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049165] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[1.049271] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.049378] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.049484] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049590] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[1.049697] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.049804] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.049928] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050034] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[1.050141] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.050299] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.050465] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050625] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.050763] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.050870] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.050976] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051125] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[1.051275] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.051382] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.051489] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051595] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[1.051715] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.051823] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.051929] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052035] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[1.052142] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.052249] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.052356] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052462] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[1.052569] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.052676] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.052783] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052889] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[1.052996] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.053145] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.053252] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053358] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.053465] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.053577] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.053683] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053790] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.053913] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.054020] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.054127] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054233] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.054358] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.054473] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.054618] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054757] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.054864] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.054970] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.055076] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055183] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.055290] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.055396] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.055502] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055608] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.055715] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.055821] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.055929] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056035] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.056142] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.056249] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.056355] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056461] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.056576] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.056683] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.056789] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056906] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.057010] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.057134] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.057257] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057362] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.057538] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.057689] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.057901] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058063] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.058220] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.058366] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.058485] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058604] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.058680] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.058749] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.058817] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058886] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.058963] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.059030] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.059097] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059163] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.059230] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.059307] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.059369] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059431] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.059493] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.059555] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.059617] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059679] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.059741] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.059806] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.059869] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059932] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.059995] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.060058] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.060121] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060188] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.060253] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.060318] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.060381] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060442] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.060504] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.060568] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.060630] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060692] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.060755] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.060831] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.060903] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060961] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.061019] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.061077] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.061135] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061192] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.061250] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.061308] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.061371] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061429] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.061488] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.061574] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.061660] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061716] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.061773] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.061830] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.061907] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061964] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.062021] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.062078] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.062135] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062192] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.062249] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.062307] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.062363] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062420] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.062478] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.062534] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062606] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.062665] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.062722] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062779] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[1.062836] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.062893] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062950] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.063007] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.063065] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.063122] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063178] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.063235] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.063292] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.063348] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063404] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.063461] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.063517] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.063573] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063629] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.063686] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.063742] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.063798] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063854] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.063923] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.063977] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.064031] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064085] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.064139] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.064193] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.064247] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064301] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.064355] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.064410] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.064470] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064524] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.064579] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.064635] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.064690] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064745] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.064800] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.064883] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.064946] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065003] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.065059] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.065115] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065169] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.065224] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.065280] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.065334] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065389] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.065451] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.065506] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.065562] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065616] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.065672] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.065727] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.065782] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065870] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.065930] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.065988] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.066047] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.066106] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.066164] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.066237] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.066314] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.066408] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.066472] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.066536] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.066616] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.066690] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.066743] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.066797] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.066851] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066905] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.066967] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.067021] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.067076] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.067129] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.067183] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.067237] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.067302] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.067351] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.067401] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.067460] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.067510] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.067559] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.067608] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.067657] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.067705] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067754] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.067804] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.067853] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.067902] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067951] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.068000] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.068050] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.068100] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068149] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.068199] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.068249] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.068298] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068347] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.068397] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.068447] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.068496] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068546] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.068596] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.068646] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.068695] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068744] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.068794] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.068845] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.068894] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068943] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.068993] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.069042] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.069096] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069145] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.069195] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.069244] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.069293] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069342] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.069390] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.069440] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.069494] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069543] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.069593] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.069642] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.069691] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069740] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.069790] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.069855] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.069983] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.070055] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070106] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.070156] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.070207] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.070257] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070324] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.070378] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.070432] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.070486] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070539] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.070645] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.070700] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.070754] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070821] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.070876] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.070930] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.070984] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071038] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.071098] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.071152] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071206] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.071260] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.071326] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071377] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071428] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.071479] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.071531] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071582] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071633] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.071691] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.071743] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071793] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071845] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.071902] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.071953] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072005] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072056] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.072108] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.072160] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072212] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072264] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.072316] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.072369] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072421] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072472] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.072524] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.072576] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072628] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072679] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.072731] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.072782] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.072833] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.072885] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.072936] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.072987] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.073038] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073089] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.073140] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.073191] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.073241] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073292] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.073344] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.073404] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.073456] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073507] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.073559] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.073611] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.073661] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073713] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.073764] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.073816] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.073885] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073937] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.073990] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.074042] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.074094] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074146] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.074199] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.074292] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074356] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.074424] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.074490] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.074555] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074636] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.074705] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.074759] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.074814] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.074877] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.074925] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.074972] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.075020] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.075068] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075114] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.075162] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.075209] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.075256] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.075306] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.075353] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.075400] (turtle_brick) StderrLine: {'line': b'\n'}
[1.075448] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.075495] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.075543] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.075590] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.075638] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.075686] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.075734] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075782] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.075831] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.075898] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.075945] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075992] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.076040] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.076086] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.076133] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076180] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.076227] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.076274] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076320] (turtle_brick) StdoutLine: {'line': b'1     E128 continuation line under-indented for visual indent\n'}
[1.076367] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.076413] (turtle_brick) StdoutLine: {'line': b'27    E225 missing whitespace around operator\n'}
[1.076460] (turtle_brick) StdoutLine: {'line': b"77    E231 missing whitespace after ','\n"}
[1.076506] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.076553] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.076599] (turtle_brick) StdoutLine: {'line': b"3     E262 inline comment should start with '# '\n"}
[1.076645] (turtle_brick) StdoutLine: {'line': b"33    E265 block comment should start with '# '\n"}
[1.076691] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.076737] (turtle_brick) StdoutLine: {'line': b'8     E302 expected 2 blank lines, found 0\n'}
[1.076784] (turtle_brick) StdoutLine: {'line': b'7     E303 too many blank lines (2)\n'}
[1.076830] (turtle_brick) StdoutLine: {'line': b'9     E501 line too long (115 > 99 characters)\n'}
[1.076876] (turtle_brick) StdoutLine: {'line': b"27    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.076923] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.076970] (turtle_brick) StdoutLine: {'line': b'38    W291 trailing whitespace\n'}
[1.077016] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.077062] (turtle_brick) StdoutLine: {'line': b'26    W293 blank line contains whitespace\n'}
[1.077108] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.077154] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077220] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.077274] (turtle_brick) StdoutLine: {'line': b'273 errors\n'}
[1.077424] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077493] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 173\n"}
[1.077568] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 28\n"}
[1.077651] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 72\n"}
[1.077705] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077786] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.077858] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077929] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.078010] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.078077] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.078125] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.078172] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.078219] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.078267] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.078314] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.078362] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.078409] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.078456] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.078504] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.078556] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.078677] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.078759] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.078808] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.078856] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.078903] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.078952] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.079000] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.079047] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.079095] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.079143] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.079190] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.079237] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.079285] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.079332] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.079401] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.079456] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.079540] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.079593] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.079674] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.079725] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:15 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.079779] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:15 in public class `BState`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.079861] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:15 in public class `BState`: D208: Docstring is over-indented\n'}
[1.079915] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:15 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.079969] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:15 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.080051] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:27 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.080104] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:27 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.080186] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.080238] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.080292] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.080374] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.080428] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.080484] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.080546] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.080603] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.080660] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.080716] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.080772] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.080842] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.080897] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.080953] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.081008] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.081063] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.081118] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.081173] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.081228] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.081283] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.081348] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.081404] (turtle_brick) StdoutLine: {'line': b'21 errors\n'}
[1.081460] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.081515] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.081570] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 273 code styl...\n'}
[1.081630] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.081684] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.39s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.081742] (turtle_brick) CommandEnded: {'returncode': 1}
[1.082008] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.082032] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.082369] (-) EventReactorShutdown: {}
