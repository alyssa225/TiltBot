[0.000000] (-) TimerEvent: {}
[0.000654] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000752] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000828] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.009832] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.099506] (-) TimerEvent: {}
[0.199809] (-) TimerEvent: {}
[0.248117] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.261260] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.268124] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.268420] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.268629] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.268816] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.268943] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.269067] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1900 - Experimental\n'}
[0.269228] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.269420] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.269562] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.269687] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.269811] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.269936] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.270060] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.270174] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.270299] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.270423] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.270547] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.270671] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.270795] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.270933] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299933] (-) TimerEvent: {}
[0.323485] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.323664] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.383610] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.383771] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.383844] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.383908] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.392774] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.393068] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.400047] (-) TimerEvent: {}
[0.400521] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.400894] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.401046] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.401158] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.401273] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.401391] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.455027] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.455199] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.500172] (-) TimerEvent: {}
[0.525797] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.526003] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.531917] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.532106] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.532206] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.543855] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.544135] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.544266] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.553878] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.554297] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.562332] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.16 sec\n'}
[0.562776] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.563105] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.563203] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.563284] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.563353] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.563430] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.29 sec*proc (2 tests)\n'}
[0.563558] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.16 sec*proc (1 test)\n'}
[0.563660] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.563726] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.29 sec\n'}
[0.563791] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.563854] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.563917] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.587069] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.587269] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.587394] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.589069] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.589622] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.589667] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.600286] (-) TimerEvent: {}
[0.614464] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.614666] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.614886] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.622326] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.623523] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.700388] (-) TimerEvent: {}
[0.801049] (-) TimerEvent: {}
[0.818731] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.883231] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.883437] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.883522] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.883604] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.883666] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.901168] (-) TimerEvent: {}
[0.918491] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.919599] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 285 code style errors / warnings:\x1b[0m\n'}
[0.919899] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:3:1: F401 'setuptools.find_packages' imported but unused\x1b[0m\n"}
[0.920126] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:14:100: E501 line too long (174 > 99 characters)\x1b[0m\n'}
[0.920301] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:18:43: E231 missing whitespace after ','\x1b[0m\n"}
[0.920482] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:24:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.920655] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\x1b[0m\n"}
[0.920830] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.921010] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\x1b[0m\n"}
[0.921186] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.921361] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\x1b[0m\n"}
[0.921540] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:12:42: W291 trailing whitespace\x1b[0m\n'}
[0.921720] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\x1b[0m\n"}
[0.921886] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.922157] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.922634] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.923908] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:39:53: W291 trailing whitespace\x1b[0m\n'}
[0.929848] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.930031] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:50:33: W291 trailing whitespace\x1b[0m\n'}
[0.930157] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.930301] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.930454] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.930610] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.930744] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.930879] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.931013] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.931145] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.931277] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.931410] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.931563] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.931820] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.931987] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.932134] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.932265] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.932409] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.932541] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.932672] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\x1b[0m\n"}
[0.932804] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.932935] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.933065] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.933196] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.933327] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933459] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933638] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.933771] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933903] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:192:26: W291 trailing whitespace\x1b[0m\n'}
[0.934035] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\x1b[0m\n"}
[0.934166] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\x1b[0m\n"}
[0.934297] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\x1b[0m\n"}
[0.934429] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\x1b[0m\n"}
[0.934560] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.934693] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.934825] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.934956] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\x1b[0m\n"}
[0.935088] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.935240] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.935382] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.935541] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\x1b[0m\n"}
[0.935710] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\x1b[0m\n'}
[0.935867] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.936014] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\x1b[0m\n'}
[0.936160] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.936289] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.936435] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.936587] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\x1b[0m\n"}
[0.936733] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.936865] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.936986] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.937105] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.937273] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.937421] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:272:30: W291 trailing whitespace\x1b[0m\n'}
[0.937557] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\x1b[0m\n'}
[0.937679] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.937800] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\x1b[0m\n"}
[0.937920] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.938040] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\x1b[0m\n'}
[0.938158] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:294:19: W291 trailing whitespace\x1b[0m\n'}
[0.938279] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:295:1: W391 blank line at end of file\x1b[0m\n'}
[0.938400] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.938521] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.938641] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[0.938776] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.938898] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.939018] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.939137] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[0.939263] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[0.939395] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.939511] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.939627] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[0.939743] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[0.939860] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[0.939976] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[0.940098] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[0.940204] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[0.940310] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[0.940417] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[0.940523] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[0.940631] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.940738] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[0.940844] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.940949] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.941055] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.941161] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.941266] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.941386] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.941500] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.941582] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.941650] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.941716] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.941782] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.941848] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.941914] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.941979] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.942062] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.942124] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.942185] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[0.942245] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.942307] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.942367] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[0.942428] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[0.942489] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.942549] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.942610] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.942670] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.942731] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.942791] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.942851] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.942922] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.942982] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.943042] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[0.943103] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[0.943163] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.943223] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.943284] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[0.943345] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.943405] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.943466] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.943527] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.943587] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.943656] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.943717] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.943778] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.943839] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.943901] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.943963] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.944024] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.944091] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.944153] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.944214] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.944315] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.944403] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[0.944487] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[0.944575] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[0.944660] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.944723] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[0.944789] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.944851] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[0.944916] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.944980] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.945042] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[0.945105] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[0.945167] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.945230] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[0.945293] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.945356] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[0.945431] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[0.945555] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.945644] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.945707] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.945768] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.945840] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[0.945902] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.945963] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[0.946049] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[0.946111] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.946199] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.946273] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.946383] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.946457] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.946530] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.946615] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.946747] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.946817] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.946880] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.946944] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.947007] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.947078] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.947146] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.947241] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.947332] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.947419] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.947507] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.947574] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.947635] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.947697] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.947758] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.947819] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.947910] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.947969] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.948028] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.948088] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.948147] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.948206] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.948264] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.948324] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.948383] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.948441] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.948500] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.948558] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.948618] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.948679] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.948739] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.948800] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.948858] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.948918] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.948987] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.949048] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.949108] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.949167] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.949232] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.949291] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.949350] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.949409] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.949497] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.949775] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.949867] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.949949] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.950038] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.950115] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.950184] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.950249] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.950314] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.950380] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.950444] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.950508] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.950572] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:6:23: W292 no newline at end of file\x1b[0m\n'}
[0.950637] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.950714] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.950776] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.950837] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.950900] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.950960] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.951036] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.951101] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.951177] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.951238] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.951306] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.951370] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.951432] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.951494] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.951554] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.951616] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.951677] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.951739] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.951801] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.951862] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.951924] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.951987] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.952049] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.952112] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.952183] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.952244] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.952306] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.952367] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.952429] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.952490] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.952552] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.952613] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.952681] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.952744] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.952807] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.952875] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.952937] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.952999] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.953061] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.953122] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.953184] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.953246] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.953307] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.953368] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.953430] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.953546] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.953616] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.953680] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.953744] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.953807] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.953868] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.953930] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.954065] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.954152] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954313] (turtle_brick) StdoutLine: {'line': b"./setup.py:3:1: F401 'setuptools.find_packages' imported but unused\n"}
[0.954489] (turtle_brick) StdoutLine: {'line': b'from setuptools import setup, find_packages\n'}
[0.954613] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.954717] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954781] (turtle_brick) StdoutLine: {'line': b'./setup.py:14:100: E501 line too long (174 > 99 characters)\n'}
[0.954845] (turtle_brick) StdoutLine: {'line': b"        ('share/' + package_name, ['package.xml', 'launch/show_turtle.launch.py', 'config/turtle_urdf.rviz', 'launch/run_turtle.launch.py', 'launch/turtle_arena.launch.py']),\n"}
[0.954909] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.954972] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955047] (turtle_brick) StdoutLine: {'line': b"./setup.py:18:43: E231 missing whitespace after ','\n"}
[0.955108] (turtle_brick) StdoutLine: {'line': b"    install_requires=['setuptools', 'urdf','rviz'],\n"}
[0.955167] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[0.955227] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955295] (turtle_brick) StdoutLine: {'line': b"./setup.py:24:28: E231 missing whitespace after ','\n"}
[0.955353] (turtle_brick) StdoutLine: {'line': b"    tests_require=['pytest','ament_lint_auto'],\n"}
[0.955426] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.955482] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955539] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\n"}
[0.955595] (turtle_brick) StdoutLine: {'line': b'from xmlrpc.client import Boolean\n'}
[0.955650] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.955705] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955760] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[0.955816] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[0.955872] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.955927] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955981] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\n"}
[0.956036] (turtle_brick) StdoutLine: {'line': b'from math import pi\n'}
[0.956092] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.956147] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956202] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[0.956258] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.956323] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.956379] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956433] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\n"}
[0.956489] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt\n'}
[0.956543] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.956599] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956653] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:12:42: W291 trailing whitespace\n'}
[0.956709] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.956774] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.956830] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956885] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\n"}
[0.957207] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import MarkerArray\n'}
[0.957356] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.957512] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957656] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\n"}
[0.957793] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.957929] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.958107] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958234] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\n'}
[0.958362] (turtle_brick) StdoutLine: {'line': b'class BState(Enum):\n'}
[0.958490] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.958618] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958745] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\n'}
[0.958874] (turtle_brick) StdoutLine: {'line': b'class Arena(Node):\n'}
[0.959010] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.959127] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959245] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:39:53: W291 trailing whitespace\n'}
[0.959362] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.959479] (turtle_brick) StdoutLine: {'line': b'    Creates the arena and places brick when called in command line.\n'}
[0.959598] (turtle_brick) StdoutLine: {'line': b'    Will drop the robot when called in command line.\n'}
[0.959724] (turtle_brick) StdoutLine: {'line': b'        -if robot is underneath the brick, the brick will land on the robot\n'}
[0.959843] (turtle_brick) StdoutLine: {'line': b'        -if nothing is under brick, brick will land on ground\n'}
[0.959961] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.960094] (turtle_brick) StdoutLine: {'line': b'        -robot_sub: continuous robot position\n'}
[0.960215] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.960335] (turtle_brick) StdoutLine: {'line': b'        -marker_pub: publishes walls and brick\n'}
[0.960455] (turtle_brick) StdoutLine: {'line': b'        -drop_pub: sends placement, drop coordinates  \n'}
[0.960576] (turtle_brick) StdoutLine: {'line': b'        -platform_pub: sends true if platform is under brick\n'}
[0.960696] (turtle_brick) StdoutLine: {'line': b'    SERVICES:\n'}
[0.960817] (turtle_brick) StdoutLine: {'line': b'        -Place: place brick at x, y, z location\n'}
[0.960951] (turtle_brick) StdoutLine: {'line': b'        -Drop: Empty drops brick\n'}
[0.961075] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.961199] (turtle_brick) StdoutLine: {'line': b'        -world_brick: connects brick to world\n'}
[0.961323] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.961447] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.961618] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.961744] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961869] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\n"}
[0.962014] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.962157] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.962281] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962405] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:50:33: W291 trailing whitespace\n'}
[0.962529] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.962653] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.962776] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962899] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\n"}
[0.963038] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.963166] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.963294] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963421] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\n"}
[0.963548] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.963676] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.963803] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963931] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\n"}
[0.964066] (turtle_brick) StdoutLine: {'line': b'        #setting state of brick\n'}
[0.964180] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.964295] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964409] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\n"}
[0.964524] (turtle_brick) StdoutLine: {'line': b'        #set up subscribers\n'}
[0.964639] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.964754] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964869] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\n"}
[0.964998] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.965117] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.965235] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965352] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\n"}
[0.965498] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.965654] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.965773] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965890] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\n"}
[0.966044] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.966182] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[0.966296] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966410] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\n"}
[0.966525] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[0.966639] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.966754] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966868] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\n"}
[0.966998] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.967122] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.967246] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967370] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\n"}
[0.967493] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.967618] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.967742] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967865] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\n"}
[0.967988] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.968118] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.968242] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968365] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\n"}
[0.968488] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.968611] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.968735] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968858] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\n"}
[0.968983] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.969106] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.969231] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969353] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\n"}
[0.969504] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.969668] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.969821] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969964] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\n'}
[0.970135] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.970259] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.970403] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970579] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\n'}
[0.970783] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.970987] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.971135] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971283] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\n"}
[0.971447] (turtle_brick) StdoutLine: {'line': b'        #initialize services\n'}
[0.971592] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.971745] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971879] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\n"}
[0.972015] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.972151] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[0.972287] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972421] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\n"}
[0.972557] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.972693] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.972828] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972964] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\n"}
[0.973100] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.973236] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.973370] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973519] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\n"}
[0.973659] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.973796] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.973933] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974068] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\n'}
[0.974204] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.974340] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.974475] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974611] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\n"}
[0.974747] (turtle_brick) StdoutLine: {'line': b'        #creating brick marker\n'}
[0.974884] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.975030] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975157] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\n"}
[0.975287] (turtle_brick) StdoutLine: {'line': b'        #creating wall markers\n'}
[0.975416] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.975542] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975669] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\n'}
[0.975797] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.975926] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.976053] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976180] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\n"}
[0.976309] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.976438] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.976738] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976958] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:192:26: W291 trailing whitespace\n'}
[0.977104] (turtle_brick) StdoutLine: {'line': b'        self.brickz = 0.0 \n'}
[0.977249] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[0.977394] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977572] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\n"}
[0.977696] (turtle_brick) StdoutLine: {'line': b'        self.wall = self.create_timer(0.5,self.wall_callback)\n'}
[0.977818] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.977950] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978123] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\n"}
[0.978244] (turtle_brick) StdoutLine: {'line': b'    def place_callback(self, request,response):\n'}
[0.978426] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.978588] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978731] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\n"}
[0.978875] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.979019] (turtle_brick) StdoutLine: {'line': b'                                  ^\n'}
[0.979162] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979318] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\n"}
[0.979453] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.979589] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.979725] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979860] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\n'}
[0.979997] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.980132] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.980268] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980404] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\n"}
[0.980540] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.980682] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.980810] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980937] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\n'}
[0.981075] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[0.981204] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.981333] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981461] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\n"}
[0.981622] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.981746] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.981868] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982009] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\n"}
[0.982144] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.982267] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.982388] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982509] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\n"}
[0.982631] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.982754] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.982877] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982998] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\n"}
[0.983120] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.983243] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.983366] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983487] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\n"}
[0.983608] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self, request,response):\n'}
[0.983730] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[0.983864] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983984] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\n'}
[0.984107] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[0.984228] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.984349] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984470] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\n"}
[0.984591] (turtle_brick) StdoutLine: {'line': b'        #publishing wall markers\n'}
[0.984711] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.984832] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984952] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\n'}
[0.985074] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[0.985206] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.985327] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985448] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\n'}
[0.985615] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.985737] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.985858] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986012] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\n'}
[0.986150] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.986274] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.986450] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986619] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\n'}
[0.986759] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.986905] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.987039] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987161] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\n"}
[0.987282] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.987403] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.987524] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987645] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\n"}
[0.987766] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.987887] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.988009] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988129] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\n"}
[0.988250] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.988372] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.988493] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988612] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\n'}
[0.988775] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.988896] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.989017] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989137] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\n"}
[0.989258] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.989379] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.989544] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989683] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\n"}
[0.989803] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.989944] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.990129] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990276] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:272:30: W291 trailing whitespace\n'}
[0.990443] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[0.990640] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[0.990779] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990886] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\n'}
[0.990994] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[0.991101] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.991208] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991315] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\n'}
[0.991422] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.991531] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.991638] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991745] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\n"}
[0.991853] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.991960] (turtle_brick) StdoutLine: {'line': b'                                                                 ^\n'}
[0.992068] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992175] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\n'}
[0.992283] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.992399] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.992507] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992615] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\n'}
[0.992723] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[0.992831] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.992938] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993045] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:294:19: W291 trailing whitespace\n'}
[0.993153] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.993261] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.993368] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993485] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:295:1: W391 blank line at end of file\n'}
[0.993599] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993706] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.993813] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993920] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[0.994027] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.994134] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.994240] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994345] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[0.994452] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.994559] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.994665] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994772] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[0.994878] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[0.995001] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.995114] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995226] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[0.995350] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[0.995463] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.995577] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995689] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[0.995803] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.995916] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.996029] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996141] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[0.996385] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.996607] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.996732] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996851] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[0.996968] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[0.997085] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.997202] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997319] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[0.997436] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.997536] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.997610] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997680] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[0.997749] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.997819] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.997886] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997954] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[0.998023] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[0.998091] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.998160] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998228] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[0.998297] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.998366] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.998434] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.998503] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.998571] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.998641] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.998709] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.998777] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.998845] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.998932] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.999001] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.999070] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.999139] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.999207] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.999276] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.999344] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.999412] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.999486] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.999554] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.999621] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.999689] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.999757] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[0.999826] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999894] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[0.999962] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.000040] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.000106] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.000170] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.000234] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.000299] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.000363] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.000428] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.000492] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.000562] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.000628] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.000693] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.000757] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.000822] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.000886] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.000964] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.001026] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.001088] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.001150] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.001210] (-) TimerEvent: {}
[1.001299] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.001370] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.001434] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[1.001514] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001583] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[1.001647] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.001710] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.001774] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.001837] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.001899] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.001962] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.002025] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.002087] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.002150] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.002436] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.002744] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.003489] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.003804] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.004254] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.004373] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.004485] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.004596] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.004705] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.004815] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.004936] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.005060] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.005171] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.005283] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005394] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[1.005516] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.005631] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.005729] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.005826] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.005923] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.006039] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.006137] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.006233] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.006330] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.006427] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.006524] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.006620] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.006717] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.006814] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.006910] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.007007] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.007104] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.007200] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.007297] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.007394] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.007490] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.007586] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.007683] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007779] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[1.007877] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.007973] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.008070] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.008177] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.008274] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.008375] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.008472] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.008568] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.008665] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.008761] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.008857] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.008954] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.009050] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.009151] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.009248] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.009344] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.009441] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.009554] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.009629] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.009689] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.009748] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.009806] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.009865] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009923] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[1.009999] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.010084] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.010145] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.010206] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.010304] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.010388] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.010477] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.010547] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.010620] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.010678] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.010737] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.010795] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.010853] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.010911] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.010969] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.011027] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.011085] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.011143] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.011224] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.011305] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.011378] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.011433] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.011512] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011571] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[1.011629] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.011687] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.011746] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.011804] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.011862] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.011920] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.011978] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.012035] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.012094] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.012152] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.012211] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.012269] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.012327] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.012386] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.012444] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.012502] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.012561] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.012620] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.012691] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.012746] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.012800] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.012855] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.012911] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012966] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[1.013022] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.013076] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.013133] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.013188] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.013244] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.013299] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.013354] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.013408] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.013464] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.013577] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.013634] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.013690] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.013746] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.013800] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.013856] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.013912] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.013977] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.014057] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.014114] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.014170] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.014225] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.014280] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[1.014347] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014402] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[1.014458] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.014513] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.014568] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.014622] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.014677] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.014732] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.014788] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.014842] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.014898] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.014953] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.015007] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.015063] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.015118] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.015173] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.015227] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.015281] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.015336] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.015390] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.015445] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.015499] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.015553] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.015607] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.015661] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015715] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[1.015770] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.015824] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.015912] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016032] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[1.016230] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.016341] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.016459] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016578] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[1.016698] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.016817] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.016935] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017053] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[1.017198] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.017331] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.017451] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017646] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[1.017765] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.017884] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.018017] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018137] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[1.018256] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.018498] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.018607] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018726] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[1.018829] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.018932] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.019036] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019138] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[1.019241] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.019345] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.019448] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019550] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[1.019654] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.019757] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.019860] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019962] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[1.020065] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.020168] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.020271] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020373] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[1.020476] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.020579] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.020682] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020784] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[1.020887] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.020996] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.021099] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021201] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[1.021303] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.021407] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.021550] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021693] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[1.021796] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.021899] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[1.022059] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022222] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[1.022386] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.022561] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[1.022679] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022796] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[1.022924] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.023043] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.023164] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023294] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[1.023413] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.023530] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.023646] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023761] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[1.023877] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.023993] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.024109] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024224] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[1.024340] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[1.024457] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.024572] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024687] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[1.024802] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.024918] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.025033] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025148] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[1.025263] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.025378] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.025525] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025680] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[1.025795] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.025910] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.026039] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026153] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[1.026268] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[1.026469] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.026597] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026700] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[1.026803] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[1.026911] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.027014] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027115] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[1.027218] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[1.027321] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.027423] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027525] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[1.027628] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[1.027730] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.027833] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027936] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[1.028040] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[1.028143] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.028247] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028380] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[1.028508] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.028611] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.028714] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028816] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[1.028919] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[1.029022] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.029124] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029226] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[1.029328] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.029432] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[1.029591] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029694] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[1.029797] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.029940] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.030073] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030136] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[1.030196] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.030255] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.030315] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030374] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[1.030433] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.030492] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[1.030551] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030609] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[1.030667] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.030726] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[1.030790] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030872] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[1.030951] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.031019] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.031070] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031121] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[1.031173] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.031224] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.031275] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031327] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[1.031378] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.031429] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.031481] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031531] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[1.031583] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.031634] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.031685] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031736] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[1.031787] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.031837] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.031887] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031959] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[1.032017] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[1.032074] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.032131] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032201] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[1.032260] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.032311] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.032361] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032411] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[1.032462] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.032512] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.032563] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032613] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[1.032663] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.032714] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.032764] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032815] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[1.032866] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.032916] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.032968] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033019] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[1.033070] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.033121] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.033173] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033224] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[1.033281] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.033332] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.033384] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033435] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[1.033526] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.033605] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.033656] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033706] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[1.033757] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.033807] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.033857] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033907] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.033958] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.034040] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.034093] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034144] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[1.034195] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.034246] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.034296] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034366] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[1.034473] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.034581] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.034673] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034731] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[1.034800] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.034852] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.034902] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034953] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[1.035004] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.035055] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.035113] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035165] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[1.035216] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.035267] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.035318] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035369] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[1.035420] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.035471] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.035554] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035684] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[1.035808] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.035966] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.036146] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036255] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[1.036365] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.036475] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.036583] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036698] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[1.036806] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.036915] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.037024] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037133] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[1.037269] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.037397] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.037544] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037688] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[1.037798] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.037907] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.038016] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038124] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[1.038234] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.038342] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038451] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038559] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[1.038668] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.038777] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.038886] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038995] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[1.039104] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.039213] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.039321] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039429] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[1.039538] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.039647] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.039784] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039934] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[1.040075] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.040187] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.040298] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040409] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[1.040521] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.040633] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.040745] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040856] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[1.040967] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.041079] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.041191] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041302] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[1.041413] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.041602] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.041720] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041831] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[1.041943] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.042054] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.042166] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042277] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[1.042407] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.042557] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.042682] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042793] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[1.042905] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.043017] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.043128] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043262] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[1.043383] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.043504] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.043624] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043744] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[1.043865] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.044004] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.044144] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044318] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[1.044466] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.044603] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.044717] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044830] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[1.044956] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.045085] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.045196] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045307] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[1.045416] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.045580] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.045727] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045835] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[1.045944] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046061] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.046148] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046233] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.046319] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.046405] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.046490] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046576] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.046663] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.046816] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.046924] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047032] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.047141] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.047250] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.047359] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047476] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.047585] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.047695] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.047803] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047911] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.048030] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.048137] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.048242] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048348] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.048455] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.048561] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.048667] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048773] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.048879] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.048985] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.049091] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049196] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.049302] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.049409] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.049561] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049701] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.049808] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.049914] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.050032] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050117] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.050201] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.050285] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.050368] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050476] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[1.050628] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.050796] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.050946] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051098] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[1.051225] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.051334] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.051442] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.051551] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.051660] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.051768] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.051877] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.051985] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.052093] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.052202] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.052311] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.052420] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.052529] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.052643] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.052752] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.052861] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.052969] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.053077] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053186] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[1.053294] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.053403] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.053567] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.053693] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.053825] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.054013] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.054214] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.054430] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.054607] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.054759] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.054913] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.055022] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.055140] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.055312] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.055469] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.055630] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.055739] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.055847] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.055956] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056079] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[1.056232] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.056338] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.056444] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056551] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[1.056657] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.056763] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.056869] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056975] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[1.057082] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.057209] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.057344] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057512] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[1.057661] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.057768] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.057874] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057979] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[1.058086] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.058192] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.058323] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058507] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[1.058651] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.058773] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.058878] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058999] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[1.059108] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.059217] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.059325] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059434] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[1.059542] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.059652] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.059761] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059869] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[1.059978] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.060087] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.060196] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060305] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[1.060413] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.060523] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.060632] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060740] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[1.060850] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.060972] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.061078] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061184] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[1.061291] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.061397] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.061569] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061702] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[1.061808] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.061915] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.062021] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062128] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[1.062234] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.062340] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.062446] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062552] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.062658] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.062765] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.062872] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062978] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[1.063090] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.063198] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.063304] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063410] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[1.063517] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.063624] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.063730] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063836] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[1.063943] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.064049] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.064154] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064260] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[1.064366] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.064473] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.064584] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064691] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[1.064798] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.064904] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.065011] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065117] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.065224] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.065330] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.065436] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065604] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.065711] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.065817] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.065924] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066030] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.066148] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.066254] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.066390] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066582] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.066717] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.066824] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.066930] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067037] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.067143] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.067248] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.067354] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067460] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.067588] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.067711] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.067818] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067923] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.068034] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.068140] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.068246] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068352] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.068458] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.068565] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.068671] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068778] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.068884] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.068990] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.069096] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069202] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.069309] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.069415] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.069570] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069708] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.069815] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.069922] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.070027] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070133] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.070239] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.070346] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.070451] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070557] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.070663] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.070770] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.070876] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070982] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.071089] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.071195] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.071302] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071407] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.071514] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.071621] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.071727] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071831] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.071938] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.072045] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.072178] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072301] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.072408] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.072515] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.072622] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072728] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.072840] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.072948] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.073054] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073160] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.073266] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.073373] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.073517] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073662] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.073769] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.073875] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.073982] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074088] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.074194] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.074301] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.074452] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074635] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.074758] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.074881] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.075053] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075241] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.075424] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.075573] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.075723] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075844] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.075964] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.076084] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.076215] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076330] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.076444] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.076559] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.076673] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076786] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.076901] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.077016] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.077129] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077278] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.077415] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.077562] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077702] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.077836] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.077951] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.078065] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078178] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:6:23: W292 no newline at end of file\n'}
[1.078299] (turtle_brick) StdoutLine: {'line': b'#     assert 5+6 == 20                      ^\n'}
[1.078422] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078537] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.078653] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.078768] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.078882] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079046] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.079161] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.079275] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.079388] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079502] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.079618] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.079732] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.079846] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079960] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.080090] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.080206] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.080323] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080439] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.080556] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.080673] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.080790] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080907] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.081023] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.081140] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.081256] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081373] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.081528] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.081658] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.081764] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081870] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.081994] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.082123] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.082228] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082334] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.082521] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.082666] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.082791] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082897] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.083003] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.083109] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083215] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.083322] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.083428] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.083534] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083640] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.083747] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.083858] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.083964] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084070] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.084177] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.084283] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.084389] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084494] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.084601] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.084707] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.084819] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.084926] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.085032] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.085138] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.085244] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.085350] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.085456] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.085608] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.085715] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.085822] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.085928] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.086063] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.086189] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086295] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.086402] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.086508] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.086614] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.086721] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.086827] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.086933] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.087039] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.087145] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.087251] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.087357] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.087463] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.087569] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.087675] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.087781] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.087887] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087993] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.088099] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.088205] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.088311] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088417] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.088527] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.088634] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.088769] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088888] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.088995] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.089101] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.089207] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089313] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.089420] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.089587] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.089727] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089832] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.089961] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.090127] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.090308] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090484] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.090675] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.090782] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.090898] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091003] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.091109] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.091216] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.091321] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091426] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.091532] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.091638] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.091743] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091848] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.091954] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.092059] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.092165] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092270] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.092376] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.092482] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.092587] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092692] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.092797] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.092907] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.093018] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093123] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.093228] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.093335] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.093440] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093599] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.093705] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.093811] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.093917] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094023] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.094128] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.094234] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.094339] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094489] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.094655] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.094804] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.094939] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.095077] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.095220] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.095344] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.095467] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.095597] (turtle_brick) StderrLine: {'line': b'\n'}
[1.095713] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.095829] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.095947] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.096065] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.096182] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.096300] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.096418] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.096535] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.096653] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.096771] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.096889] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.097006] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.097123] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.097271] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.097408] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.097574] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.097692] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.097816] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.097934] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.098050] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.098167] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.098285] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.098403] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.098606] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.098753] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.098877] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.099000] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.099123] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.099246] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.099383] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.099500] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.099618] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.099735] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.099852] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.099969] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.100087] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.100210] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.100326] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.100443] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.100561] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.100677] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.100795] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.100912] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.101028] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.101144] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.101264] (-) TimerEvent: {}
[1.101389] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.101565] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.101708] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.101815] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.101923] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.102029] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.102141] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.102249] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.102356] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.102462] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.102569] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.102675] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.102781] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.102887] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.102993] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.103099] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.103211] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.103317] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.103423] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.103530] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.103636] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.103743] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.103848] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.103955] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.104061] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.104167] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.104273] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.104379] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.104485] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.104590] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.104697] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.104803] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.104909] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.105015] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.105142] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.105266] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.105372] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.105505] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.105644] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.105750] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.105856] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.105963] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.106068] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.106174] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.106280] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.106387] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.106518] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.106681] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.106819] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.106954] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.107060] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.107167] (turtle_brick) StdoutLine: {'line': b'1     E128 continuation line under-indented for visual indent\n'}
[1.107273] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.107379] (turtle_brick) StdoutLine: {'line': b'27    E225 missing whitespace around operator\n'}
[1.107485] (turtle_brick) StdoutLine: {'line': b"79    E231 missing whitespace after ','\n"}
[1.107591] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.107697] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.107804] (turtle_brick) StdoutLine: {'line': b"3     E262 inline comment should start with '# '\n"}
[1.107910] (turtle_brick) StdoutLine: {'line': b"34    E265 block comment should start with '# '\n"}
[1.108017] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.108123] (turtle_brick) StdoutLine: {'line': b'8     E302 expected 2 blank lines, found 0\n'}
[1.108229] (turtle_brick) StdoutLine: {'line': b'7     E303 too many blank lines (2)\n'}
[1.108335] (turtle_brick) StdoutLine: {'line': b'10    E501 line too long (115 > 99 characters)\n'}
[1.108446] (turtle_brick) StdoutLine: {'line': b"34    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.108553] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.108660] (turtle_brick) StdoutLine: {'line': b'39    W291 trailing whitespace\n'}
[1.108766] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.108873] (turtle_brick) StdoutLine: {'line': b'26    W293 blank line contains whitespace\n'}
[1.108979] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.109085] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.109191] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.109297] (turtle_brick) StdoutLine: {'line': b'285 errors\n'}
[1.109403] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.109574] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 177\n"}
[1.109700] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 35\n"}
[1.109806] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 73\n"}
[1.109912] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.110018] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.110125] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.110230] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.110337] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.110443] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.110549] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.110656] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.110761] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.110867] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.110974] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.111080] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.111186] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.111292] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.111398] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.111527] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.111650] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.111774] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.111946] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.112070] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.112194] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.112314] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.112421] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.112531] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.112638] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.112744] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.112850] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.112960] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.113067] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.113173] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.113279] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.113385] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.113548] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.113674] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.113798] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.113921] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.114051] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.114174] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.114355] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.114548] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.114740] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.114888] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.114996] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.115103] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.115210] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.115317] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.115423] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.115530] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.115637] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.115744] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.115851] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.115958] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.116065] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.116172] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.116279] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.116386] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.116493] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.116600] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.116712] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.116818] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.116925] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.117031] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.117137] (turtle_brick) StdoutLine: {'line': b'20 errors\n'}
[1.117273] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.117395] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.117556] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 285 code styl...\n'}
[1.117682] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.117808] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.40s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.117916] (turtle_brick) CommandEnded: {'returncode': 1}
[1.118305] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.118341] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.118791] (-) EventReactorShutdown: {}
