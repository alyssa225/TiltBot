[0.000000] (-) TimerEvent: {}
[0.001386] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.001425] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.001473] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.012808] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.099956] (-) TimerEvent: {}
[0.200253] (-) TimerEvent: {}
[0.252033] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.266138] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.272937] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.273131] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.273252] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.273347] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.273449] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.273570] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1845 - Experimental\n'}
[0.273639] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.273707] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.273773] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.273839] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.273946] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.274147] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.274292] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.274404] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.274518] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.274630] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.274741] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.274853] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.274965] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.275091] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.300363] (-) TimerEvent: {}
[0.329073] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.329293] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.388697] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.388905] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.389015] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.389149] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.397182] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.397363] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.400475] (-) TimerEvent: {}
[0.406349] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.406710] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.406805] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.406913] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.407047] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.407193] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.460424] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.460703] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.500599] (-) TimerEvent: {}
[0.530588] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.530832] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.535080] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.535196] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.535279] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.600709] (-) TimerEvent: {}
[0.603126] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.603277] (turtle_brick) StdoutLine: {'line': b'collected 5 items                                                              \x1b[0m\n'}
[0.603528] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.656775] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.656992] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.657133] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.667602] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.668031] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.677456] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.27 sec\n'}
[0.677924] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.678130] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.678317] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.678468] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.678625] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.678798] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.40 sec*proc (2 tests)\n'}
[0.678957] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.27 sec*proc (1 test)\n'}
[0.679130] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.679279] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.40 sec\n'}
[0.679408] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.679542] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.679690] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.698266] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.698530] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.698719] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.700220] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.700694] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.700741] (-) TimerEvent: {}
[0.700934] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.756493] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[31mF\x1b[0m\x1b[31mF\x1b[0m\x1b[31m                                                     [ 40%]\x1b[0m\n'}
[0.757548] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[31m                                                 [ 60%]\x1b[0m\n'}
[0.800851] (-) TimerEvent: {}
[0.901157] (-) TimerEvent: {}
[0.927210] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 80%]\x1b[0m\n'}
[0.991942] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.992183] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992307] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.992550] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m__________________________ TestMath.test_math_sucsses __________________________\x1b[0m\n'}
[0.992673] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:311: in from_call\n'}
[1.001288] (-) TimerEvent: {}
[1.028448] (turtle_brick) StdoutLine: {'line': b'    result: Optional[TResult] = func()\n'}
[1.028791] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:255: in <lambda>\n'}
[1.029053] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mlambda\x1b[39;49;00m: ihook(item=item, **kwds), when=when, reraise=reraise\n'}
[1.029357] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/hooks.py\x1b[0m:286: in __call__\n'}
[1.029599] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._hookexec(\x1b[96mself\x1b[39;49;00m, \x1b[96mself\x1b[39;49;00m.get_hookimpls(), kwargs)\n'}
[1.029846] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:92: in _hookexec\n'}
[1.030241] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._inner_hookexec(hook, methods, kwargs)\n'}
[1.030625] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:83: in <lambda>\n'}
[1.030738] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m._inner_hookexec = \x1b[94mlambda\x1b[39;49;00m hook, methods, kwargs: hook.multicall(\n'}
[1.030877] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:170: in pytest_runtest_call\n'}
[1.030994] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mraise\x1b[39;49;00m e\n'}
[1.031143] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:162: in pytest_runtest_call\n'}
[1.031252] (turtle_brick) StdoutLine: {'line': b'    item.runtest()\n'}
[1.031361] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/python.py\x1b[0m:1641: in runtest\n'}
[1.031553] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m.ihook.pytest_pyfunc_call(pyfuncitem=\x1b[96mself\x1b[39;49;00m)\n'}
[1.031665] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/hooks.py\x1b[0m:286: in __call__\n'}
[1.031740] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._hookexec(\x1b[96mself\x1b[39;49;00m, \x1b[96mself\x1b[39;49;00m.get_hookimpls(), kwargs)\n'}
[1.031888] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:92: in _hookexec\n'}
[1.031976] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._inner_hookexec(hook, methods, kwargs)\n'}
[1.032191] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:83: in <lambda>\n'}
[1.032390] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m._inner_hookexec = \x1b[94mlambda\x1b[39;49;00m hook, methods, kwargs: hook.multicall(\n'}
[1.032516] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/python.py\x1b[0m:183: in pytest_pyfunc_call\n'}
[1.032675] (turtle_brick) StdoutLine: {'line': b'    result = testfunction(**testargs)\n'}
[1.032829] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   TypeError: TestMath.test_math_sucsses() takes 0 positional arguments but 1 was given\x1b[0m\n'}
[1.032987] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m___________________________ TestMath.test_math_fail ____________________________\x1b[0m\n'}
[1.033066] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:311: in from_call\n'}
[1.033245] (turtle_brick) StdoutLine: {'line': b'    result: Optional[TResult] = func()\n'}
[1.033373] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:255: in <lambda>\n'}
[1.033576] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mlambda\x1b[39;49;00m: ihook(item=item, **kwds), when=when, reraise=reraise\n'}
[1.033775] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/hooks.py\x1b[0m:286: in __call__\n'}
[1.033943] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._hookexec(\x1b[96mself\x1b[39;49;00m, \x1b[96mself\x1b[39;49;00m.get_hookimpls(), kwargs)\n'}
[1.034080] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:92: in _hookexec\n'}
[1.034243] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._inner_hookexec(hook, methods, kwargs)\n'}
[1.034410] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:83: in <lambda>\n'}
[1.034534] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m._inner_hookexec = \x1b[94mlambda\x1b[39;49;00m hook, methods, kwargs: hook.multicall(\n'}
[1.034668] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:170: in pytest_runtest_call\n'}
[1.034811] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mraise\x1b[39;49;00m e\n'}
[1.034914] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:162: in pytest_runtest_call\n'}
[1.035202] (turtle_brick) StdoutLine: {'line': b'    item.runtest()\n'}
[1.035694] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/python.py\x1b[0m:1641: in runtest\n'}
[1.036052] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m.ihook.pytest_pyfunc_call(pyfuncitem=\x1b[96mself\x1b[39;49;00m)\n'}
[1.036423] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/hooks.py\x1b[0m:286: in __call__\n'}
[1.036728] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._hookexec(\x1b[96mself\x1b[39;49;00m, \x1b[96mself\x1b[39;49;00m.get_hookimpls(), kwargs)\n'}
[1.037055] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:92: in _hookexec\n'}
[1.037390] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._inner_hookexec(hook, methods, kwargs)\n'}
[1.037813] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:83: in <lambda>\n'}
[1.038226] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m._inner_hookexec = \x1b[94mlambda\x1b[39;49;00m hook, methods, kwargs: hook.multicall(\n'}
[1.038568] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/python.py\x1b[0m:183: in pytest_pyfunc_call\n'}
[1.040480] (turtle_brick) StdoutLine: {'line': b'    result = testfunction(**testargs)\n'}
[1.045817] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   TypeError: TestMath.test_math_fail() takes 0 positional arguments but 1 was given\x1b[0m\n'}
[1.045944] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[1.046026] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[1.046135] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[1.046216] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 285 code style errors / warnings:\x1b[0m\n'}
[1.046318] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:3:1: F401 'setuptools.find_packages' imported but unused\x1b[0m\n"}
[1.046399] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:14:100: E501 line too long (174 > 99 characters)\x1b[0m\n'}
[1.046499] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:18:43: E231 missing whitespace after ','\x1b[0m\n"}
[1.046637] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:24:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.046722] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\x1b[0m\n"}
[1.046810] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[1.046893] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\x1b[0m\n"}
[1.046964] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[1.047035] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\x1b[0m\n"}
[1.047106] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:12:42: W291 trailing whitespace\x1b[0m\n'}
[1.047176] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\x1b[0m\n"}
[1.047246] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.047317] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.047393] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.047464] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:39:53: W291 trailing whitespace\x1b[0m\n'}
[1.047534] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.047604] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:50:33: W291 trailing whitespace\x1b[0m\n'}
[1.047674] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\x1b[0m\n"}
[1.047744] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.047814] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.047883] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.047953] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.048022] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\x1b[0m\n"}
[1.048092] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\x1b[0m\n"}
[1.048161] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.048231] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.048300] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\x1b[0m\n"}
[1.048378] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\x1b[0m\n"}
[1.048441] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\x1b[0m\n"}
[1.048504] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.048579] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\x1b[0m\n"}
[1.048642] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.048705] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.048774] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.048837] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\x1b[0m\n"}
[1.048900] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.048963] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\x1b[0m\n"}
[1.049027] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\x1b[0m\n"}
[1.049089] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.049153] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.049228] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.049298] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\x1b[0m\n'}
[1.049362] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.049428] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:192:26: W291 trailing whitespace\x1b[0m\n'}
[1.049494] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\x1b[0m\n"}
[1.049559] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\x1b[0m\n"}
[1.049624] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\x1b[0m\n"}
[1.049688] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\x1b[0m\n"}
[1.049753] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.049817] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.049881] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\x1b[0m\n'}
[1.049945] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\x1b[0m\n"}
[1.050009] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\x1b[0m\n"}
[1.050073] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\x1b[0m\n"}
[1.050137] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\x1b[0m\n"}
[1.050201] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\x1b[0m\n"}
[1.050271] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\x1b[0m\n'}
[1.050335] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.050399] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\x1b[0m\n'}
[1.050463] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.050526] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.050607] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\x1b[0m\n'}
[1.050669] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\x1b[0m\n"}
[1.050731] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\x1b[0m\n"}
[1.050793] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.050854] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.050916] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\x1b[0m\n"}
[1.050977] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.051039] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:272:30: W291 trailing whitespace\x1b[0m\n'}
[1.051101] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\x1b[0m\n'}
[1.051163] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.051225] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\x1b[0m\n"}
[1.051286] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[1.051348] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\x1b[0m\n'}
[1.051411] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:294:19: W291 trailing whitespace\x1b[0m\n'}
[1.051473] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:295:1: W391 blank line at end of file\x1b[0m\n'}
[1.051536] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[1.051598] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[1.051720] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[1.051804] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[1.051872] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[1.051938] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[1.052003] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[1.052068] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[1.052133] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.052199] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.052264] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[1.052329] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[1.052400] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[1.052465] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[1.052542] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[1.052604] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[1.052667] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[1.052729] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[1.052791] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[1.052853] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.052916] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[1.052978] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[1.053040] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.053108] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[1.053172] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[1.053259] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.053339] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[1.053406] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[1.053472] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[1.053538] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[1.053603] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[1.053669] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[1.053734] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[1.053800] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[1.053866] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[1.053931] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[1.053997] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[1.054080] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[1.054176] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.054253] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.054321] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[1.054387] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[1.054453] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.054520] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[1.054587] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.054653] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.054719] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.054799] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.054865] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[1.054930] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[1.054996] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[1.055062] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[1.055128] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[1.055194] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[1.055260] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.055326] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[1.055392] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.055457] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.055523] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.055589] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.055656] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[1.055722] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.055787] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[1.055858] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[1.055924] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.055989] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.056060] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.056124] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.056190] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.056255] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.056320] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.056385] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.056451] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[1.056515] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[1.056580] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[1.056645] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.056711] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[1.056775] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.056840] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[1.056904] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.056970] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.057034] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[1.057100] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[1.057165] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[1.057248] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[1.057318] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.057386] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[1.057458] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[1.057524] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.057590] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.057654] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.057732] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.057803] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[1.057868] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[1.057933] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[1.057998] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[1.058063] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[1.058128] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[1.058195] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[1.058262] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[1.058328] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[1.058405] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[1.058474] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[1.058538] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[1.058601] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[1.058664] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.058728] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.058792] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[1.058856] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[1.058919] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.058982] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[1.059046] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[1.059110] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.059174] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.059240] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.059305] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.059367] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.059430] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[1.059499] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[1.059563] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[1.059626] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[1.059734] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.059826] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[1.059896] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.059964] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[1.060031] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[1.060099] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[1.060165] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[1.060232] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[1.060302] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[1.060369] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.060436] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[1.060505] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.060583] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.060648] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.060713] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.060790] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[1.060854] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.060945] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[1.061101] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.061227] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.061304] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[1.061372] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.061439] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[1.061515] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[1.061583] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[1.061655] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[1.061723] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[1.061790] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.061857] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[1.061923] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[1.061990] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.062056] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.062122] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.062188] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[1.062255] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[1.062321] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.062387] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:6:25: W292 no newline at end of file\x1b[0m\n'}
[1.062454] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[1.062532] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[1.062596] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[1.062660] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[1.062724] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[1.062787] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[1.062850] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[1.062914] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.062977] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[1.063041] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[1.063120] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[1.063187] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[1.063253] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[1.063320] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[1.063387] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[1.063461] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.063528] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[1.063595] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[1.063660] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.063740] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[1.063805] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[1.063870] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[1.063932] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[1.064008] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.064072] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[1.064135] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[1.064198] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[1.064267] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[1.064331] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.064394] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.064458] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[1.064521] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[1.064585] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[1.064649] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[1.064712] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[1.064775] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[1.064838] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[1.064902] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[1.064965] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[1.065034] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[1.065098] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.065163] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.065244] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[1.065312] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.065377] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[1.065441] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[1.065505] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[1.065568] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[1.065632] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.065697] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.065761] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[1.065824] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.065888] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.065955] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066020] (turtle_brick) StdoutLine: {'line': b"./setup.py:3:1: F401 'setuptools.find_packages' imported but unused\n"}
[1.066085] (turtle_brick) StdoutLine: {'line': b'from setuptools import setup, find_packages\n'}
[1.066150] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.066213] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066277] (turtle_brick) StdoutLine: {'line': b'./setup.py:14:100: E501 line too long (174 > 99 characters)\n'}
[1.066341] (turtle_brick) StdoutLine: {'line': b"        ('share/' + package_name, ['package.xml', 'launch/show_turtle.launch.py', 'config/turtle_urdf.rviz', 'launch/run_turtle.launch.py', 'launch/turtle_arena.launch.py']),\n"}
[1.066406] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.066471] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066535] (turtle_brick) StdoutLine: {'line': b"./setup.py:18:43: E231 missing whitespace after ','\n"}
[1.066600] (turtle_brick) StdoutLine: {'line': b"    install_requires=['setuptools', 'urdf','rviz'],\n"}
[1.066665] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.066730] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066794] (turtle_brick) StdoutLine: {'line': b"./setup.py:24:28: E231 missing whitespace after ','\n"}
[1.066858] (turtle_brick) StdoutLine: {'line': b"    tests_require=['pytest','ament_lint_auto'],\n"}
[1.066922] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.066986] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067051] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\n"}
[1.067116] (turtle_brick) StdoutLine: {'line': b'from xmlrpc.client import Boolean\n'}
[1.067180] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.067244] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067308] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.067381] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.067445] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.067509] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067578] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\n"}
[1.067644] (turtle_brick) StdoutLine: {'line': b'from math import pi\n'}
[1.067716] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.067839] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067911] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.067994] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.068063] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.068130] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068197] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\n"}
[1.068265] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt\n'}
[1.068333] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.068399] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068466] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:12:42: W291 trailing whitespace\n'}
[1.068533] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.068599] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.068665] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068731] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\n"}
[1.068799] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import MarkerArray\n'}
[1.068865] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.068931] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068997] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\n"}
[1.069064] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[1.069130] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069196] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069277] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\n'}
[1.069344] (turtle_brick) StdoutLine: {'line': b'class BState(Enum):\n'}
[1.069410] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069475] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069541] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\n'}
[1.069606] (turtle_brick) StdoutLine: {'line': b'class Arena(Node):\n'}
[1.069677] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069744] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069809] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:39:53: W291 trailing whitespace\n'}
[1.069874] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.069939] (turtle_brick) StdoutLine: {'line': b'    Creates the arena and places brick when called in command line.\n'}
[1.070005] (turtle_brick) StdoutLine: {'line': b'    Will drop the robot when called in command line.\n'}
[1.070070] (turtle_brick) StdoutLine: {'line': b'        -if robot is underneath the brick, the brick will land on the robot\n'}
[1.070136] (turtle_brick) StdoutLine: {'line': b'        -if nothing is under brick, brick will land on ground\n'}
[1.070202] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.070267] (turtle_brick) StdoutLine: {'line': b'        -robot_sub: continuous robot position\n'}
[1.070334] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.070400] (turtle_brick) StdoutLine: {'line': b'        -marker_pub: publishes walls and brick\n'}
[1.070466] (turtle_brick) StdoutLine: {'line': b'        -drop_pub: sends placement, drop coordinates  \n'}
[1.070542] (turtle_brick) StdoutLine: {'line': b'        -platform_pub: sends true if platform is under brick\n'}
[1.070608] (turtle_brick) StdoutLine: {'line': b'    SERVICES:\n'}
[1.070673] (turtle_brick) StdoutLine: {'line': b'        -Place: place brick at x, y, z location\n'}
[1.070738] (turtle_brick) StdoutLine: {'line': b'        -Drop: Empty drops brick\n'}
[1.070804] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.070870] (turtle_brick) StdoutLine: {'line': b'        -world_brick: connects brick to world\n'}
[1.070936] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.071001] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.071066] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.071132] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071198] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\n"}
[1.071263] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.071329] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.071395] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071461] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:50:33: W291 trailing whitespace\n'}
[1.071527] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.071592] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.071657] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071721] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\n"}
[1.071788] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.071856] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.071922] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071988] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\n"}
[1.072054] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.072120] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.072185] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072251] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\n"}
[1.072317] (turtle_brick) StdoutLine: {'line': b'        #setting state of brick\n'}
[1.072383] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.072448] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072513] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\n"}
[1.072580] (turtle_brick) StdoutLine: {'line': b'        #set up subscribers\n'}
[1.072645] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.072711] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072777] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\n"}
[1.072843] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.072910] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.072977] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073042] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\n"}
[1.073108] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.073174] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.073255] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073321] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\n"}
[1.073398] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.073461] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.073523] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073596] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\n"}
[1.073659] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.073721] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.073782] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073844] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\n"}
[1.073912] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.073985] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.074044] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074101] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\n"}
[1.074161] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.074220] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.074279] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074337] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\n"}
[1.074395] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[1.074454] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.074512] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074571] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\n"}
[1.074629] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[1.074688] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.074747] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074805] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\n"}
[1.074862] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[1.074920] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.074995] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075054] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\n"}
[1.075113] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[1.075171] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.075230] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075289] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\n'}
[1.075347] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.075406] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.075464] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075523] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\n'}
[1.075582] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.075641] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.075700] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075772] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\n"}
[1.075870] (turtle_brick) StdoutLine: {'line': b'        #initialize services\n'}
[1.075951] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.076017] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076083] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\n"}
[1.076149] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[1.076216] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[1.076281] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076346] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\n"}
[1.076420] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[1.076486] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.076552] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076617] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\n"}
[1.076683] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[1.076749] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.076815] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076880] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\n"}
[1.076946] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[1.077013] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.077078] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077144] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\n'}
[1.077223] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.077295] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.077361] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077427] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\n"}
[1.077493] (turtle_brick) StdoutLine: {'line': b'        #creating brick marker\n'}
[1.077559] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.077625] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077690] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\n"}
[1.077756] (turtle_brick) StdoutLine: {'line': b'        #creating wall markers\n'}
[1.077822] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.077886] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077950] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\n'}
[1.078014] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[1.078079] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.078144] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078209] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\n"}
[1.078275] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[1.078339] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.078403] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078467] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:192:26: W291 trailing whitespace\n'}
[1.078531] (turtle_brick) StdoutLine: {'line': b'        self.brickz = 0.0 \n'}
[1.078596] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[1.078660] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078723] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\n"}
[1.078788] (turtle_brick) StdoutLine: {'line': b'        self.wall = self.create_timer(0.5,self.wall_callback)\n'}
[1.078853] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.078918] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078982] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\n"}
[1.079048] (turtle_brick) StdoutLine: {'line': b'    def place_callback(self, request,response):\n'}
[1.079112] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.079177] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079239] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\n"}
[1.079304] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[1.079377] (turtle_brick) StdoutLine: {'line': b'                                  ^\n'}
[1.079447] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079513] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\n"}
[1.079579] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[1.079644] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.079708] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079773] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\n'}
[1.079839] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.079904] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.079969] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080035] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\n"}
[1.080100] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.080166] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.080231] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080296] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\n'}
[1.080362] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[1.080426] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.080492] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080557] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\n"}
[1.080624] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[1.080688] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.080754] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080818] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\n"}
[1.080890] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[1.081035] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.081172] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081273] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\n"}
[1.081344] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[1.081412] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.081479] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081546] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\n"}
[1.081612] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[1.081679] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.081746] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081812] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\n"}
[1.081878] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self, request,response):\n'}
[1.081955] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[1.082018] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082081] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\n'}
[1.082144] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[1.082207] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.082270] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082333] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\n"}
[1.082396] (turtle_brick) StdoutLine: {'line': b'        #publishing wall markers\n'}
[1.082460] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.082533] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082596] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\n'}
[1.082670] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[1.082733] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.082796] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082858] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\n'}
[1.082922] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.082985] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.083048] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083111] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\n'}
[1.083174] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.083236] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.083312] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083375] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\n'}
[1.083438] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.083501] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.083565] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083629] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\n"}
[1.083693] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.083756] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.083876] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083960] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\n"}
[1.084072] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.084196] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.084318] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084439] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\n"}
[1.084562] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.084683] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.084805] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084937] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\n'}
[1.085052] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.085167] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.085296] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085411] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\n"}
[1.085527] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[1.085642] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.085757] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085872] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\n"}
[1.085987] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[1.086101] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.086217] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086333] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:272:30: W291 trailing whitespace\n'}
[1.086449] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[1.086564] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[1.086698] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086819] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\n'}
[1.086942] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[1.087064] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.087185] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087307] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\n'}
[1.087443] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.087572] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.087695] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087816] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\n"}
[1.087938] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.088060] (turtle_brick) StdoutLine: {'line': b'                                                                 ^\n'}
[1.088181] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088302] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\n'}
[1.088424] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.088562] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.088703] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088824] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\n'}
[1.088946] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[1.089067] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.089189] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089322] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:294:19: W291 trailing whitespace\n'}
[1.089446] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.089567] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.089688] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089809] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:295:1: W391 blank line at end of file\n'}
[1.089942] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090056] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.090171] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090284] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[1.090400] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[1.090515] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.090629] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090744] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[1.090860] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[1.090974] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.091089] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091203] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[1.091318] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[1.091432] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.091547] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091661] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[1.091792] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[1.091944] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.092093] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092210] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[1.092358] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.092475] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.092592] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092709] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[1.092838] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.092955] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.093072] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093188] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[1.093321] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[1.093439] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.093556] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093672] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[1.093789] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.093905] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.094022] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094138] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[1.094256] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[1.094373] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.094489] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094605] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[1.094723] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[1.094839] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.094955] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.095071] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[1.095188] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.095305] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.095422] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.095539] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.095655] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.095771] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.095888] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.096018] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.096153] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.096277] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.096400] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.096524] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.096648] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.096772] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.096896] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.097020] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.097145] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.097283] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.097409] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.097533] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.097656] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.097780] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[1.097904] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.098034] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[1.098159] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.098288] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.098420] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.098538] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.098655] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.098772] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.098889] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.099006] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.099123] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.099240] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.099356] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.099473] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.099590] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.099707] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.099823] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.099943] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.100017] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.100127] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.100248] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.100369] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.100491] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.100613] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[1.100735] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.100869] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[1.101015] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.101144] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.101275] (-) TimerEvent: {}
[1.101391] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.101529] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.101645] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.101761] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.101876] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.101990] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.102105] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.102219] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.102334] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.102448] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.102563] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.102678] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.102793] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.102908] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.103023] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.103147] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.103262] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.103413] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.103546] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.103693] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.103821] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.103966] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[1.104117] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.104249] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.104383] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.104517] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.104649] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.104790] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.104918] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.105065] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.105197] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.105352] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.105465] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.105577] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.105688] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.105799] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.105910] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.106022] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.106180] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.106291] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.106402] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.106514] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.106625] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.106736] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.106847] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.106959] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[1.107070] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.107190] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.107310] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.107456] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.107576] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.107680] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.107783] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.107886] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.108059] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.108189] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.108317] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.108452] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.108576] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.108693] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.108809] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.108927] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.109044] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.109160] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.109291] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.109409] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.109525] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.109642] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.109759] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.109875] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[1.109992] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.110108] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.110225] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.110342] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.110471] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.110584] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.110697] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.110810] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.110923] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.111036] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.111150] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.111264] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.111378] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.111491] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.111600] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.111829] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.112251] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.112683] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.112945] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.113251] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.113428] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.113547] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.113663] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.113777] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[1.113891] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.114016] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.114124] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.114232] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.114340] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.114447] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.114563] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.114670] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.114777] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.114884] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.114992] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.115099] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.115205] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.115312] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.115429] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.115551] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.115672] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.115792] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.115912] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.116067] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.116193] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.116317] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.116441] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.116564] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[1.116688] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.116811] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.116935] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.117072] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.117189] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.117321] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.117440] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.117563] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.117681] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.117798] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.117915] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.118033] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.118150] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.118266] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.118383] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.118500] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.118617] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.118733] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.118850] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.118977] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.119094] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.119210] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[1.119327] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.119443] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[1.119566] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.119682] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.119799] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.119916] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.120033] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.120150] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.120266] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.120383] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.120499] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.120616] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.120732] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.120849] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.120966] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.121111] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.121265] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.121414] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.121518] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.121595] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.121692] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.121777] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.121869] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.121968] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.122072] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.122201] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[1.122315] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.122428] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.122541] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.122654] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[1.122767] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.122881] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.122993] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.123106] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[1.123219] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.123349] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.123481] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.123598] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[1.123716] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.123832] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.123948] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.124109] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[1.124236] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.124360] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.124491] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.124613] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[1.124738] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.124870] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.124994] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.125103] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[1.125217] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.125332] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.125442] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.125551] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[1.125660] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.125770] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.125879] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.125988] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[1.126097] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.126206] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.126321] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.126430] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[1.126539] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.126649] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.126773] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.126888] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[1.127004] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.127120] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.127235] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.127350] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[1.127466] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.127582] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.127696] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.127810] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[1.127927] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.128061] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.128184] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.128306] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[1.128445] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.128554] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[1.128664] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.128773] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[1.128882] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.129000] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[1.129119] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.129252] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[1.129381] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.129492] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.129603] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.129712] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[1.129821] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.129931] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.130070] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.130188] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[1.130284] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.130381] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.130477] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.130573] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[1.130670] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[1.130788] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.130903] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.130999] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[1.131096] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.131192] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.131288] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.131383] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[1.131479] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.131575] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.131671] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.131767] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[1.131863] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.131960] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.132102] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.132254] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[1.132366] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[1.132477] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.132625] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.132739] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[1.132840] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[1.132943] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.133044] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.133157] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[1.133270] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[1.133332] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.133403] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.133460] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[1.133517] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[1.133583] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.133639] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.133695] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[1.133751] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[1.133807] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.133863] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.133918] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[1.133974] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.134030] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.134086] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.134142] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[1.134198] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[1.134254] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.134310] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.134366] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[1.134430] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.134488] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[1.134544] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.134599] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[1.134655] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.134712] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.134768] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.134823] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[1.134879] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.134934] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.134989] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.135044] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[1.135098] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.135154] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[1.135209] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.135263] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[1.135318] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.135395] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[1.135461] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.135532] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[1.135587] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.135642] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.135697] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.135752] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[1.135808] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.135864] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.135925] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.135981] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[1.136037] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.136092] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.136147] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.136202] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[1.136258] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.136313] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.136369] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.136424] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[1.136480] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.136536] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.136591] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.136647] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[1.136712] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[1.136768] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.136823] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.136878] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[1.136933] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.136988] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.137042] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.137097] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[1.137152] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.137236] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.137328] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.137384] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[1.137440] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.137496] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.137553] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.137609] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[1.137665] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.137774] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.137837] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.137895] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[1.137953] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.138011] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.138069] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.138127] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[1.138186] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.138243] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.138301] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.138359] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[1.138418] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.138476] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.138534] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.138592] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[1.138650] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.138708] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.138772] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.138829] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.138888] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.138945] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.139003] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.139060] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[1.139117] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.139174] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.139236] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.139294] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[1.139381] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.139448] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.139515] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.139591] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[1.139678] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.139803] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.139951] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.140117] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[1.140195] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.140302] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.140385] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.140443] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[1.140501] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.140560] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.140619] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.140677] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[1.140795] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.140966] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.141114] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.141250] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[1.141378] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.141484] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.141590] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.141697] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[1.141803] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.141910] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.142048] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.142193] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[1.142331] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.142468] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.142633] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.142770] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[1.142919] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.143044] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.143159] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.143267] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[1.143387] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.143497] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.143592] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.143688] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[1.143784] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.143880] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.143976] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.144072] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[1.144168] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.144264] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.144359] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.144455] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[1.144551] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.144647] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.144743] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.144838] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[1.144967] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.145079] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.145175] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.145312] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[1.145410] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.145507] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.145603] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.145699] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[1.145795] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.145892] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.145989] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.146084] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[1.146180] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.146276] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.146381] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.146477] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[1.146574] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.146670] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.146766] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.146862] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[1.146958] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.147054] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.147150] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.147245] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[1.147341] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.147472] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.147573] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.147669] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[1.147771] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.147867] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.147963] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.148065] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[1.148220] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.148327] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.148443] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.148546] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[1.148649] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.148752] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.148855] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.148958] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[1.149061] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.149200] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.149326] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.149432] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[1.149559] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.149686] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.149812] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.149975] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[1.150115] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.150248] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.150361] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.150473] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[1.150585] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.150696] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.150808] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.150929] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.151038] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.151147] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.151255] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.151362] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.151485] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.151608] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.151731] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.151854] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.151977] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.152113] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.152227] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.152343] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.152460] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.152576] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.152691] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.152806] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.152922] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.153037] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.153152] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.153294] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.153409] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.153511] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.153611] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.153713] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.153814] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.153916] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.154017] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.154118] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.154220] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.154321] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.154422] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.154523] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.154625] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.154727] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.154829] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.154929] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.155031] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.155132] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.155233] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.155334] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[1.155478] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.155580] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.155680] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.155781] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[1.155883] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.155984] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.156130] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.156350] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.156461] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.156572] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.156669] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.156765] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.156862] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.156958] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.157054] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.157150] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.157291] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.157404] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.157514] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.157631] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.157724] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.157817] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.157911] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[1.158004] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.158098] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.158197] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.158291] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.158388] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.158510] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.158626] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.158720] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.158813] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.158918] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.159012] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.159104] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.159197] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.159290] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.159444] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.159559] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.159652] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.159746] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.159839] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.159931] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[1.160025] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.160118] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.160211] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.160326] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[1.160505] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.160639] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.160809] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.160959] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[1.161087] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.161232] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.161361] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.161475] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[1.161583] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.161692] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.161800] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.161908] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[1.162017] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.162126] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.162240] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.162340] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[1.162441] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.162541] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.162641] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.162742] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[1.162842] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.162942] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.163042] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.163143] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[1.163250] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.163372] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.163502] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.163602] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[1.163703] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.163804] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.163904] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.164004] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[1.164133] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.164274] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.164406] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.164507] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[1.164608] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.164709] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.164810] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.164911] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[1.165012] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.165113] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.165234] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.165359] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[1.165460] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.165562] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.165662] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.165763] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[1.165864] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.165977] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.166073] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.166168] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.166265] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.166361] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.166457] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.166553] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[1.166649] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.166745] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.166841] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.166937] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[1.167033] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.167134] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.167230] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.167331] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[1.167462] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.167571] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.167667] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.167762] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[1.167858] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.167955] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.168051] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.168146] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[1.168242] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.168338] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.168434] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.168530] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.168626] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.168722] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.168818] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.168913] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.169009] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.169113] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.169234] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.169358] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.169454] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.169550] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.169646] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.169741] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.169880] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.169975] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.170097] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.170213] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.170309] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.170405] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.170500] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.170595] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.170692] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.170787] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.170882] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.170977] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.171074] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.171170] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.171265] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.171393] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.171559] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.171690] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.171827] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.171974] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.172122] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.172358] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.172492] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.172623] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.172748] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.172866] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.172969] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.173071] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.173174] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.173345] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.173443] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.173540] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.173639] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.173737] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.173834] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.173932] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.174029] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.174127] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.174225] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.174322] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.174420] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.174518] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.174616] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.174713] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.174811] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.174909] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.175007] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.175104] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.175202] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.175301] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.175421] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.175532] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.175630] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.175728] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.175826] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.175923] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.176026] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.176126] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.176224] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.176321] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.176419] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.176540] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.176655] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.176752] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.176850] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.176949] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.177046] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.177144] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.177282] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.177388] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.177479] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.177568] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.177657] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.177751] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.177850] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.177948] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.178046] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.178144] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.178242] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.178352] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.178448] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.178557] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.178657] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.178757] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.178858] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.178958] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.179059] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.179160] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.179260] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.179383] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.179510] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.179611] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.179711] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.179812] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.179912] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.180022] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.180186] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.180357] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.180494] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:6:25: W292 no newline at end of file\n'}
[1.180611] (turtle_brick) StdoutLine: {'line': b'        assert 5+6 == 20                        ^\n'}
[1.180707] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.180803] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.180899] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.180995] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.181091] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.181186] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.181331] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.181447] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.181555] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.181662] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.181770] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.181877] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.181997] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.182101] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.182206] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.182311] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.182415] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.182519] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.182623] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.182727] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.182843] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.182944] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.183046] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.183148] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.183249] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.183363] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.183462] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.183561] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.183658] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.183756] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.183855] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.183954] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.184052] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.184150] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.184249] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.184348] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.184447] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.184545] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.184644] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.184742] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.184840] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.184953] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.185063] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.185154] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.185286] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.185384] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.185476] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.185567] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.185657] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.185748] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.185839] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.185930] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.186021] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.186117] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.186208] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.186300] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.186392] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.186483] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.186574] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.186665] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.186757] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.186848] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.186940] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.187031] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.187122] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.187213] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.187304] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.187396] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.187518] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.187609] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.187700] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.187792] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.187884] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.187975] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.188066] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.188159] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.188243] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.188300] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.188355] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.188418] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.188467] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.188515] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.188563] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.188612] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.188661] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.188710] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.188758] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.188806] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.188854] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.188903] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.188951] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.188999] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.189047] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.189096] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.189145] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.189193] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.189286] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.189374] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.189422] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.189470] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.189517] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.189565] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.189613] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.189660] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.189708] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.189756] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.189815] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.189863] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.189910] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.189959] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.190007] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.190054] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.190101] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.190149] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.190198] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.190247] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.190294] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.190343] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.190391] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.190443] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.190492] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.190540] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.190589] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.190637] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.190684] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.190732] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.190780] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.190827] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.190874] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.190921] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.190969] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.191016] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.191064] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.191116] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.191164] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.191212] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.191259] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.191308] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.191378] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.191467] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.191534] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.191582] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.191630] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.191679] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.191727] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.191788] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.191838] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.191886] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.191934] (turtle_brick) StderrLine: {'line': b'\n'}
[1.191982] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.192030] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.192079] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.192127] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.192175] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.192223] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.192272] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.192319] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.192380] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.192431] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.192480] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.192529] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.192577] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.192626] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.192675] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.192724] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.192772] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.192821] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.192870] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.192919] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.192968] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.193018] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.193068] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.193117] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.193166] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.193263] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.193367] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.193418] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.193469] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.193521] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.193572] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.193622] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.193672] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.193730] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.193781] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.193832] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.193882] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.193931] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.193981] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.194031] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.194102] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.194194] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.194260] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.194329] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.194383] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.194466] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.194521] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.194576] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.194632] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.194688] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.194744] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.194799] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.194855] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.194910] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.194966] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.195022] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.195078] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.195134] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.195189] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.195245] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.195300] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.195379] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.195443] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.195514] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.195569] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.195625] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.195680] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.195735] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.195789] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.195844] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.195905] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.195960] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.196015] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.196069] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.196123] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.196214] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.196315] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.196429] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.196535] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.196642] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.196748] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.196854] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.196960] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.197066] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.197181] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.197333] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.197434] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.197536] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.197636] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.197736] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.197837] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.197937] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.198037] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.198138] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.198238] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.198339] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.198454] (turtle_brick) StdoutLine: {'line': b'1     E128 continuation line under-indented for visual indent\n'}
[1.198557] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.198660] (turtle_brick) StdoutLine: {'line': b'27    E225 missing whitespace around operator\n'}
[1.198763] (turtle_brick) StdoutLine: {'line': b"79    E231 missing whitespace after ','\n"}
[1.198865] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.198968] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.199071] (turtle_brick) StdoutLine: {'line': b"3     E262 inline comment should start with '# '\n"}
[1.199174] (turtle_brick) StdoutLine: {'line': b"34    E265 block comment should start with '# '\n"}
[1.199277] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.199399] (turtle_brick) StdoutLine: {'line': b'8     E302 expected 2 blank lines, found 0\n'}
[1.199525] (turtle_brick) StdoutLine: {'line': b'7     E303 too many blank lines (2)\n'}
[1.199649] (turtle_brick) StdoutLine: {'line': b'10    E501 line too long (115 > 99 characters)\n'}
[1.199805] (turtle_brick) StdoutLine: {'line': b"34    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.199950] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.200074] (turtle_brick) StdoutLine: {'line': b'39    W291 trailing whitespace\n'}
[1.200215] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.200345] (turtle_brick) StdoutLine: {'line': b'26    W293 blank line contains whitespace\n'}
[1.200460] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.200575] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.200696] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.200810] (turtle_brick) StdoutLine: {'line': b'285 errors\n'}
[1.200918] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.201025] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 177\n"}
[1.201132] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 35\n"}
[1.201250] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 73\n"}
[1.201356] (-) TimerEvent: {}
[1.201471] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.201613] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.201710] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.201805] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.201901] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.201996] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.202092] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.202187] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.202283] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.202378] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.202474] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.202569] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.202665] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.202761] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.202857] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.202952] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.203048] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.203149] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.203247] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.203356] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.203493] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.203616] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.203723] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.203830] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.203942] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.204048] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.204154] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.204311] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.204438] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.204545] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.204651] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.204757] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.204864] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.205016] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.205140] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.205259] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.205569] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.205669] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.205773] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.205872] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.205971] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.206070] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.206168] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.206267] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.206366] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.206465] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.206564] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.206663] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.206761] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.206860] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.206959] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.207059] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.207158] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.207256] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.207373] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.207503] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.207602] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.207701] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.207800] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.207898] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.207996] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.208095] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.208193] (turtle_brick) StdoutLine: {'line': b'20 errors\n'}
[1.208291] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.208411] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.208514] (turtle_brick) StdoutLine: {'line': b'FAILED test/math_test.py::TestMath::test_math_sucsses - TypeError: TestMath.t...\n'}
[1.208620] (turtle_brick) StdoutLine: {'line': b'FAILED test/math_test.py::TestMath::test_math_fail - TypeError: TestMath.test...\n'}
[1.208722] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 285 code styl...\n'}
[1.208823] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.208925] (turtle_brick) StdoutLine: {'line': b'\x1b[31m=================== \x1b[31m\x1b[1m4 failed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.51s\x1b[0m\x1b[31m ===================\x1b[0m\n'}
[1.209028] (turtle_brick) CommandEnded: {'returncode': 1}
[1.209472] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.209507] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.209898] (-) EventReactorShutdown: {}
