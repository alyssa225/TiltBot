[0.000000] (-) TimerEvent: {}
[0.000155] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000214] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000672] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.008997] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.098794] (-) TimerEvent: {}
[0.199104] (-) TimerEvent: {}
[0.246639] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.259799] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.266721] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.267089] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.267363] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.267624] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.267827] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.268006] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1937 - Experimental\n'}
[0.268197] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.268428] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.268616] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.268778] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.268885] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.268962] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.269038] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.269112] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.269183] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.269255] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.269360] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.269498] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.269590] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.269677] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299244] (-) TimerEvent: {}
[0.321671] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.321870] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.383051] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.383303] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.383463] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.383610] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.394729] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.395033] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.399315] (-) TimerEvent: {}
[0.405054] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.14 sec\n'}
[0.405478] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.405676] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.405856] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.406034] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.406214] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.473060] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.473328] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.499430] (-) TimerEvent: {}
[0.552185] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.552407] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.557072] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.557303] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.557484] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.558046] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.558301] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.558434] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.566549] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.566799] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.580947] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.18 sec\n'}
[0.581268] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.581540] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.581721] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.581893] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.582063] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.14 sec*proc (1 test)\n'}
[0.582247] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.31 sec*proc (2 tests)\n'}
[0.582425] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.18 sec*proc (1 test)\n'}
[0.582571] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.582712] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.31 sec\n'}
[0.582846] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.582978] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.583135] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.598636] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.598813] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.598898] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.599522] (-) TimerEvent: {}
[0.600909] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.601411] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.601483] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.644057] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.644254] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.644503] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.652362] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.653657] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.699609] (-) TimerEvent: {}
[0.799898] (-) TimerEvent: {}
[0.867027] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.900018] (-) TimerEvent: {}
[0.928153] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.928607] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.928833] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.929021] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.929153] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.964448] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.965148] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 223 code style errors / warnings:\x1b[0m\n'}
[0.965902] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:210:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.967333] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:217:13: E225 missing whitespace around operator\x1b[0m\n'}
[0.969105] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:244:58: E225 missing whitespace around operator\x1b[0m\n'}
[0.969320] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:247:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.969446] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:248:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.969583] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:249:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.969705] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:254:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.969826] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:263:30: W291 trailing whitespace\x1b[0m\n'}
[0.969947] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:265:42: E225 missing whitespace around operator\x1b[0m\n'}
[0.970067] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:266:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.970186] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:266:100: E501 line too long (101 > 99 characters)\x1b[0m\n'}
[0.970306] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:283:9: E225 missing whitespace around operator\x1b[0m\n'}
[0.970470] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:285:19: W291 trailing whitespace\x1b[0m\n'}
[0.970629] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:286:1: W391 blank line at end of file\x1b[0m\n'}
[0.970751] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.970873] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.970993] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[0.971112] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.971232] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.971360] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.971481] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[0.971601] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[0.971719] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.971839] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.971958] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[0.972077] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[0.972196] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[0.972315] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[0.972440] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[0.972560] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[0.972679] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[0.972798] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[0.972928] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[0.973048] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.973168] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[0.973287] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.973406] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.973515] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.973585] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.973652] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.973718] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.973784] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.973849] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.973915] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.973981] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.974046] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.974112] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.974189] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.974252] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.974319] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.974385] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.974448] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[0.974511] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.974576] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.974686] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[0.974752] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[0.974827] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.974894] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.974960] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.975025] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.975090] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.975162] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.975227] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.975292] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.975371] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.975440] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[0.975509] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[0.975590] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.975655] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.975719] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[0.975783] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.975848] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.975912] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.975977] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.976041] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.976105] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.976181] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.976246] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.976311] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.976374] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.976438] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.976503] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.976573] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.976637] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.976702] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.976766] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.976831] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[0.976895] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[0.976959] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[0.977023] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.977087] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[0.977152] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.977232] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[0.977300] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.977369] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.977440] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[0.977535] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[0.977612] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.977671] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[0.977729] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.977796] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[0.977854] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[0.977912] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.977970] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.978028] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.978086] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.978143] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[0.978202] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.978264] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[0.978321] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[0.978378] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.978436] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.978494] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.978552] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.978610] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.978667] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.978724] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.978781] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.978838] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.979068] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.979129] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.979187] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.979244] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.979302] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.979373] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.979434] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.979495] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.979555] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.979616] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.979677] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.979756] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.979822] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.979898] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.979959] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.980026] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.980086] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.980147] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.980208] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.980268] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.980329] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.980407] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.980476] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.980542] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.980606] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.980672] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.980736] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.980801] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.980866] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.980930] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.980995] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.981059] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.981123] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.981187] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.981250] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.981314] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.981390] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.981453] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.981568] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.981632] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.981694] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.981756] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.981819] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.981888] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.981950] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.982013] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.982086] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.982149] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.982212] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.982275] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.982350] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.982411] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.982472] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.982533] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.982594] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.982715] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.982796] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.982882] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.982950] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.983030] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.983091] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.983153] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.983214] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.983275] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.983358] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.983421] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.983484] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.983546] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.983608] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.983670] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.983738] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.983801] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.983864] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.983927] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.983989] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.984052] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.984114] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.984176] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.984239] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.984302] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.984384] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.984462] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.984525] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.984588] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.984651] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.984714] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.984777] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.984841] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.984903] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.984966] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.985039] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.985103] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.985166] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.985229] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.985297] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.985373] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.985432] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.985529] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.985606] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.985666] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.985725] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.985784] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.985849] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.985909] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.985967] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.986027] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.986089] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986150] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:210:24: E225 missing whitespace around operator\n'}
[0.986210] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[0.986268] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.986328] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986387] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:217:13: E225 missing whitespace around operator\n'}
[0.986446] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[0.986504] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.986562] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986620] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:244:58: E225 missing whitespace around operator\n'}
[0.986680] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[0.986739] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.986799] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986858] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:247:1: W293 blank line contains whitespace\n'}
[0.986917] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.986975] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.987034] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987117] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:248:1: W293 blank line contains whitespace\n'}
[0.987193] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.987252] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.987311] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987387] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:249:5: E303 too many blank lines (2)\n'}
[0.987457] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self, x, y, z):\n'}
[0.987526] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.987595] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987665] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:254:1: W293 blank line contains whitespace\n'}
[0.987735] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.987804] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.987872] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987940] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:263:30: W291 trailing whitespace\n'}
[0.988018] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[0.988087] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[0.988160] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988229] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:265:42: E225 missing whitespace around operator\n'}
[0.988298] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[0.988398] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.988465] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988535] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:266:65: E261 at least two spaces before inline comment\n'}
[0.988682] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 # has to grab gravity this from yaml\n'}
[0.988878] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.989017] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989119] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:266:100: E501 line too long (101 > 99 characters)\n'}
[0.989187] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 # has to grab gravity this from yaml\n'}
[0.989255] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.989337] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989407] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:283:9: E225 missing whitespace around operator\n'}
[0.989488] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[0.989565] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.989636] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989707] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:285:19: W291 trailing whitespace\n'}
[0.989777] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.989848] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.989918] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989987] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:286:1: W391 blank line at end of file\n'}
[0.990057] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990130] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.990284] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990486] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[0.990675] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.990808] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.990931] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991054] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[0.991177] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.991299] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.991420] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991552] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[0.991669] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[0.991786] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.991903] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992020] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[0.992138] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[0.992257] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.992374] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992491] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[0.992609] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.992739] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.992855] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992972] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[0.993101] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.993219] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.993336] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993453] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[0.993583] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[0.993701] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.993818] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993935] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[0.994052] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.994175] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.994293] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994409] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[0.994527] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.994644] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.994761] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994878] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[0.994995] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[0.995112] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.995229] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995345] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[0.995470] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.995575] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.995680] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.995785] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.995908] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.996053] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.996158] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.996263] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.996389] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.996522] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.996627] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.996732] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.996837] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.996942] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.997047] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.997153] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.997288] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.997413] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.997582] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.997689] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.997794] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.997899] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[0.998012] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998117] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[0.998222] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.998326] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.998431] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.998536] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.998641] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.998778] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.998939] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.999048] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.999170] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.999276] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.999382] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.999489] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.999595] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.999700] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.999806] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.999912] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.000014] (-) TimerEvent: {}
[1.000135] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.000339] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.000530] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.000661] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.000790] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.000890] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[1.000990] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001090] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[1.001190] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.001289] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.001390] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.001526] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.001646] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.001746] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.001846] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.001945] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.002045] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.002145] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.002244] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.002343] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.002442] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.002542] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.002641] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.002753] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.002853] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.002952] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.003053] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.003157] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.003257] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.003357] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.003456] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003557] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[1.003656] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.003756] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.003856] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.003965] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.004064] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.004164] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.004263] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.004383] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.004502] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.004622] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.004721] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.004821] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.004921] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.005020] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.005119] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.005219] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.005318] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.005429] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.005542] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.005619] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.005678] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.005737] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.005795] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005854] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[1.005913] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.005971] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.006029] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.006086] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.006144] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.006202] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.006260] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.006319] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.006377] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.006445] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.006502] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.006560] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.006618] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.006675] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.006732] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.006872] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.007017] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.007146] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.007257] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.007368] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.007479] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.007589] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.007708] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007813] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[1.007918] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.008022] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.008127] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.008232] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.008337] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.008478] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.008599] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.008704] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.008809] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.008914] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.009018] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.009123] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.009228] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.009332] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.009436] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.009594] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.009769] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.009915] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.010040] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.010166] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.010265] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.010390] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.010482] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010571] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[1.010681] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.010777] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.010872] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.010975] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.011069] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.011163] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.011266] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.011368] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.011468] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.011567] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.011666] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.011765] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.011863] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.011962] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.012060] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.012159] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.012259] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.012377] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.012507] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.012605] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.012704] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.012817] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.012917] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013035] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[1.013171] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.013270] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.013369] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.013495] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.013623] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.013723] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.013822] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.013920] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.014020] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.014119] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.014218] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.014318] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.014417] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.014516] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.014616] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.014716] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.014849] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.014942] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.015046] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.015119] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.015202] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.015281] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[1.015342] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015415] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[1.015473] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.015531] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.015589] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.015648] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.015706] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.015764] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.015823] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.015881] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.015939] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.015997] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.016056] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.016115] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.016173] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.016232] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.016290] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.016349] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.016433] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.016515] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.016573] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.016633] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.016693] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.016751] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.016810] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016868] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[1.016925] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.016984] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.017042] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017099] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[1.017157] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.017252] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.017322] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017397] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[1.017456] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.017564] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.017624] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017682] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[1.017740] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.017798] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.017856] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017913] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[1.017978] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.018036] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.018094] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018151] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[1.018208] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.018266] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.018323] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018379] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[1.018436] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.018494] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.018550] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018607] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[1.018664] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.018723] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.018780] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018838] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[1.018896] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.018954] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.019011] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019068] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[1.019126] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.019183] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.019240] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019298] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[1.019356] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.019424] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.019482] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019539] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[1.019599] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.019656] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.019714] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019772] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[1.019830] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.019890] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.019949] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020009] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[1.020087] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.020159] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[1.020264] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020334] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[1.020458] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.020563] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[1.020738] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020967] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[1.021105] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.021212] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.021319] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021425] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[1.021556] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.021661] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.021764] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021867] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[1.021970] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.022073] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.022175] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022278] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[1.022412] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[1.022606] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.022775] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022903] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[1.023026] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.023142] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.023258] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023374] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[1.023491] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.023608] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.023726] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023843] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[1.023971] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.024085] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.024198] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024312] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[1.024425] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[1.024539] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.024652] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024764] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[1.024878] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[1.024991] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.025104] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025216] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[1.025343] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[1.025459] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.025603] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025719] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[1.025836] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[1.025953] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.026069] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026184] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[1.026307] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[1.026461] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.026628] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026791] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[1.026942] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.027090] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.027244] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027399] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[1.027545] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[1.027702] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.027854] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028005] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[1.028151] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.028309] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[1.028469] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028618] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[1.028744] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.028839] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.028932] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029023] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[1.029122] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.029252] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.029343] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029431] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[1.029587] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.029749] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[1.029949] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030096] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[1.030242] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.030413] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[1.030548] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030662] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[1.030766] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.030872] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.031016] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031140] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[1.031254] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.031345] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.031425] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031491] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[1.031557] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.031622] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.031686] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031750] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[1.031815] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.031879] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.031942] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032005] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[1.032069] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.032145] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.032206] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032268] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[1.032330] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[1.032422] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.032511] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032577] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[1.032640] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.032701] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.032762] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032824] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[1.032887] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.032948] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.033008] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033069] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[1.033130] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.033191] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.033251] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033312] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[1.033372] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.033433] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.033509] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033571] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[1.033631] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.033692] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.033752] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033812] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[1.033873] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.033933] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.033993] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034052] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[1.034113] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.034174] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.034241] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034302] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[1.034362] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.034422] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.034481] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034541] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.034602] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.034662] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.034722] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034783] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[1.034844] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.034905] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.034966] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035027] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[1.035088] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.035163] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.035225] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035287] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[1.035350] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.035441] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.035506] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035575] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[1.035651] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.035750] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.035821] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035890] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[1.035958] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.036026] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.036094] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036159] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[1.036227] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.036295] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.036362] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036477] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[1.036544] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.036610] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.036674] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036738] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[1.036804] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.036868] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.036932] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036996] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[1.037058] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.037121] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.037183] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037246] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[1.037323] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.037408] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.037492] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037567] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[1.037638] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.037708] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.037777] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037846] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[1.037914] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.037983] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038051] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038119] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[1.038245] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.038359] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.038484] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038590] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[1.038697] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.038813] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.038933] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039029] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[1.039098] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.039165] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.039231] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039298] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[1.039377] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.039442] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.039506] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039570] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[1.039635] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.039699] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.039776] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039838] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[1.039900] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.039961] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.040023] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040084] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[1.040146] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.040209] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.040271] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040332] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[1.040422] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.040489] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.040551] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040620] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[1.040682] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.040744] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.040805] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040866] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[1.040928] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.040990] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.041051] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041113] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[1.041175] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.041236] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041297] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041359] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[1.041437] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.041523] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041602] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041670] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[1.041737] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.041805] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041874] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041941] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[1.042008] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.042075] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.042142] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042209] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[1.042275] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.042341] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.042407] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042473] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[1.042540] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042606] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.042672] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042737] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.042803] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.042869] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.042932] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042998] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.043066] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.043131] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.043196] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043261] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.043327] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.043403] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.043464] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043525] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.043588] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.043649] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.043710] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043771] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.043842] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.043904] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.043965] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044026] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.044087] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.044149] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.044209] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044270] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.044346] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.044409] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.044473] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044537] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.044602] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.044666] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.044730] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044793] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.044858] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.044928] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.044992] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045055] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.045120] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.045184] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.045248] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045312] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[1.045378] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.045443] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.045547] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045616] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[1.045682] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.045749] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.045815] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.045882] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.045986] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.046057] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.046125] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.046192] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.046272] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.046339] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.046420] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.046483] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.046545] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.046607] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.046669] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.046731] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.046793] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.046861] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046924] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[1.047026] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.047091] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.047154] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.047218] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.047281] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.047343] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.047424] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.047488] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.047551] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.047616] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.047679] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.047743] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.047808] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.047873] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.047937] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.048005] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.048069] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.048134] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.048201] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048277] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[1.048356] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.048418] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.048478] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048539] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[1.048600] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.048660] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.048721] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048782] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[1.048844] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.048908] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.048970] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049150] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[1.049249] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.049315] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.049391] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049456] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[1.049535] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.049599] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.049661] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049724] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[1.049791] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.049854] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.049916] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049979] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[1.050050] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.050113] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.050175] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050236] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[1.050299] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.050362] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.050436] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050495] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[1.050555] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.050615] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.050675] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050735] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[1.050794] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.050860] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.050921] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050981] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[1.051041] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.051102] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.051162] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051222] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[1.051283] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.051343] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.051416] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051474] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[1.051533] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.051592] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.051651] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051710] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[1.051768] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.051827] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.051885] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051943] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.052001] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.052060] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.052118] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052176] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[1.052235] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.052293] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.052351] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052430] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[1.052503] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.052576] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.052634] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052692] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[1.052750] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.052808] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.052865] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052923] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[1.052981] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.053040] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.053097] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053154] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[1.053212] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.053270] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.053329] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053403] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.053476] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.053544] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.053606] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053667] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.053729] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.053792] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.053853] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053915] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.053977] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.054039] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.054100] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054162] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.054224] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.054287] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.054348] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054421] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.054479] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.054537] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.054595] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054653] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.054711] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.054768] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.054826] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054883] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.054941] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.055050] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.055117] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055239] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.055305] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.055375] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.055438] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055511] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.055570] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.055629] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.055687] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055745] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.055804] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.055868] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.055927] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055985] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.056044] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.056101] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.056159] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056217] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.056275] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.056365] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.056430] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056496] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.056623] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.056762] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.056972] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057241] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.057931] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.058190] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.058564] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058687] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.058801] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.058913] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.059023] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059133] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.059253] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.059359] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.059462] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059566] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.059670] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.059774] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.059879] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059982] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.060086] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.060192] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.060306] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060408] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.060529] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.060640] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.060749] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060859] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.060969] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.061079] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.061200] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061303] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.061418] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.061547] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.061640] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061733] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.061826] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.061919] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.062012] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062105] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.062197] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.062290] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.062382] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062475] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.062567] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.062660] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.062752] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062844] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.062937] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.063037] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.063207] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063356] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.063504] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.063651] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.063793] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063936] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.064090] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.064205] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064319] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.064434] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.064549] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064663] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[1.064778] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.064893] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065007] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.065123] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.065237] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.065351] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065481] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.065565] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.065632] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.065697] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065760] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.065825] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.065889] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.065951] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066015] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.066079] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.066142] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.066206] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066269] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.066334] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.066398] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.066461] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066524] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.066589] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.066652] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.066715] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066778] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.066843] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.066906] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.066969] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067032] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.067096] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.067161] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.067224] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067286] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.067350] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.067414] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.067478] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067540] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.067604] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.067666] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067728] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.067791] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.067854] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.067916] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067978] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.068040] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.068104] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.068166] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068228] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.068292] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.068354] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.068423] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068485] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.068547] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.068610] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.068673] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.068796] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.068917] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.069030] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.069152] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.069275] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.069397] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.069510] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.069584] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.069653] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.069721] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.069788] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.069856] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069923] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.069991] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.070058] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.070126] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.070204] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.070267] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.070331] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.070394] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.070457] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.070520] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.070583] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.070646] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.070723] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.070786] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.070849] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.070913] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070976] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.071046] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.071174] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071241] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071305] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.071369] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.071432] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.071495] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071558] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.071621] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.071691] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.071760] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071821] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.071897] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.071956] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072015] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072074] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.072134] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.072194] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.072253] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072312] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.072371] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.072432] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.072492] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072552] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.072612] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.072672] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.072732] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072792] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.072852] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.072912] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.072972] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073031] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.073092] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.073152] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.073212] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073271] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.073331] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.073391] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.073474] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.073552] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.073607] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.073663] (turtle_brick) StderrLine: {'line': b'\n'}
[1.073718] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.073774] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.073830] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073886] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.073942] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.074003] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.074058] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074113] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.074168] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.074223] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.074278] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074332] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.074387] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.074441] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.074496] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074550] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.074604] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.074659] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.074714] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074769] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.074824] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.074879] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.074934] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074989] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.075044] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.075098] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075152] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.075208] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.075264] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.075319] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075374] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.075447] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.075508] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.075562] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075616] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.075670] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.075736] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.075791] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075844] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.075904] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.075959] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.076013] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076067] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.076121] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.076183] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.076236] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076290] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.076344] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.076399] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.076452] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076506] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.076560] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.076615] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.076668] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076722] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.076776] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.076830] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.076884] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.076939] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.076993] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.077047] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.077101] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077156] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.077212] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.077267] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.077323] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077481] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.077562] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.077637] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.077694] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077751] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.077809] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.077866] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.077923] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077980] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.078037] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.078093] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.078149] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078205] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.078261] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.078316] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.078371] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078426] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.078481] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.078536] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078592] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.078648] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.078703] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.078758] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078813] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.078874] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.078929] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.078985] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.079042] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.079160] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.079248] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.079319] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.079390] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079494] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.079608] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.079682] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.079754] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.079826] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.079897] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.079968] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.080039] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.080109] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080192] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.080259] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.080326] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.080390] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080473] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.080535] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.080596] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.080658] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080719] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.080781] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.080842] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080903] (turtle_brick) StdoutLine: {'line': b'1     E128 continuation line under-indented for visual indent\n'}
[1.080966] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.081027] (turtle_brick) StdoutLine: {'line': b'27    E225 missing whitespace around operator\n'}
[1.081094] (turtle_brick) StdoutLine: {'line': b"47    E231 missing whitespace after ','\n"}
[1.081157] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.081219] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.081280] (turtle_brick) StdoutLine: {'line': b"2     E262 inline comment should start with '# '\n"}
[1.081342] (turtle_brick) StdoutLine: {'line': b"24    E265 block comment should start with '# '\n"}
[1.081403] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.081473] (turtle_brick) StdoutLine: {'line': b'6     E302 expected 2 blank lines, found 0\n'}
[1.081553] (turtle_brick) StdoutLine: {'line': b'6     E303 too many blank lines (2)\n'}
[1.081613] (turtle_brick) StdoutLine: {'line': b'9     E501 line too long (115 > 99 characters)\n'}
[1.081672] (turtle_brick) StdoutLine: {'line': b"27    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.081732] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.081792] (turtle_brick) StdoutLine: {'line': b'35    W291 trailing whitespace\n'}
[1.081851] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.081910] (turtle_brick) StdoutLine: {'line': b'22    W293 blank line contains whitespace\n'}
[1.081970] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.082035] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082094] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.082152] (turtle_brick) StdoutLine: {'line': b'223 errors\n'}
[1.082211] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082269] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 130\n"}
[1.082328] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 28\n"}
[1.082386] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 65\n"}
[1.082445] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082502] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.082561] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082619] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.082677] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.082736] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.082794] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.082860] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.082918] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.082977] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.083035] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.083094] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.083153] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.083212] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.083271] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.083329] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.083388] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.083453] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.083513] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.083572] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.083632] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.083692] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.083751] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.083811] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.083870] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.083930] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.083989] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.084048] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.084108] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.084167] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.084226] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.084284] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.084344] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.084401] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.084460] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.084518] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.084578] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.084643] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D208: Docstring is over-indented\n'}
[1.084702] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.084761] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.084820] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.084878] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.084937] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.084996] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.085054] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.085113] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.085170] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.085235] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.085294] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.085365] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.085423] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.085514] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.085594] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.085651] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.085708] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.085766] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.085823] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.085881] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.085938] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.085995] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.086052] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.086109] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.086166] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.086223] (turtle_brick) StdoutLine: {'line': b'21 errors\n'}
[1.086279] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.086349] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.086407] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 223 code styl...\n'}
[1.086465] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.086528] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.42s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.086588] (turtle_brick) CommandEnded: {'returncode': 1}
[1.086823] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.086847] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.087183] (-) EventReactorShutdown: {}
