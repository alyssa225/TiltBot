[0.000000] (-) TimerEvent: {}
[0.000160] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000885] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000917] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.010019] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.099582] (-) TimerEvent: {}
[0.199884] (-) TimerEvent: {}
[0.249642] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.263065] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.270012] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.270281] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.270561] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.270796] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.270912] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.271058] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1941 - Experimental\n'}
[0.271370] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.271515] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.271655] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.271792] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.271932] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.272069] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.272198] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.272328] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.272453] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.272600] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.272733] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.272862] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.272989] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.273139] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299992] (-) TimerEvent: {}
[0.326091] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.326296] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.387277] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.387468] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.387570] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.387640] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.396139] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.396361] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.400124] (-) TimerEvent: {}
[0.404050] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.404359] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.404488] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.404593] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.404695] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.404785] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.458378] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.458553] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.500245] (-) TimerEvent: {}
[0.532396] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.532627] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.536768] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.536924] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.536989] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.570123] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.570464] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.570597] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.585130] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.585366] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.596220] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.19 sec\n'}
[0.596505] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.596722] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.596850] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.596993] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.597127] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.597275] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.32 sec*proc (2 tests)\n'}
[0.597411] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.19 sec*proc (1 test)\n'}
[0.597544] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.597675] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.33 sec\n'}
[0.597808] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.597940] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.598073] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.600315] (-) TimerEvent: {}
[0.614999] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.615318] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.615599] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.618389] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.618607] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.618767] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.620208] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.620659] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.620703] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.623855] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.625129] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.700616] (-) TimerEvent: {}
[0.801034] (-) TimerEvent: {}
[0.819630] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.882672] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.883036] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.883185] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.883266] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.883387] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.901155] (-) TimerEvent: {}
[0.915721] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.915918] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 209 code style errors / warnings:\x1b[0m\n'}
[0.916288] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.916562] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.916854] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[0.918674] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.919678] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.920773] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.921430] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[0.921573] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[0.921709] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.921816] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.921923] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[0.922076] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[0.922265] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[0.922433] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[0.922571] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[0.922721] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[0.922869] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[0.923014] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[0.923159] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[0.923315] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.923476] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[0.923595] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.923712] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.923827] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.923942] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.924058] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.924173] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.924288] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.924412] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.924543] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.924663] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.924790] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.924906] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.925022] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.925138] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.925253] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.925379] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.925489] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[0.925598] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.925708] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.925818] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[0.925928] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[0.926038] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.926147] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.926258] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.926368] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.926478] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.926588] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.926699] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.926811] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.926921] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.927029] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[0.927138] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[0.927248] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.927358] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.927485] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[0.927594] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.927703] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.927812] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.927921] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.928036] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.928146] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.928255] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.928364] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.928473] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.928603] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.928714] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.928823] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.928940] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.929028] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.929097] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.929165] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.929232] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[0.929299] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[0.929365] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[0.929454] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.929521] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[0.929586] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.929651] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[0.929716] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.929781] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.929852] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[0.929917] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[0.929994] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.930057] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[0.930120] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.930183] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[0.930245] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[0.930307] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.930370] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.930432] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.930495] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.930557] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[0.930619] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.930681] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[0.930745] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[0.930810] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.930874] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.930938] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.931158] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.931244] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.931324] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.931493] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.931653] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.931785] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.931917] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.932071] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.932214] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.932339] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.932462] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.932599] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.932744] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.932871] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.933005] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933121] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933196] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933264] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.933331] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.933397] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.933476] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.933542] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.933607] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.933673] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.933740] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933807] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.933873] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.933951] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.934035] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.934100] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.934162] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.934224] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.934286] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.934348] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.934411] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.934480] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.934543] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.934605] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.934668] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.934729] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.934791] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.934852] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.934932] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.934994] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.935055] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.935116] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.935176] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.935238] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.935299] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.935360] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.935421] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.935482] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.935542] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.935603] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.935664] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.935726] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.935786] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.935848] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.935910] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.935985] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.936048] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.936110] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.936171] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.936238] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.936299] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.936362] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.936424] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.936505] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.936575] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.936638] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.936702] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.936765] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.936828] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.936891] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.936951] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.937012] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.937126] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.937319] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.937537] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.937681] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.937821] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.937926] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.938021] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.938101] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.938172] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.938242] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.938311] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.938380] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.938449] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.938525] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.938594] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.938676] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.938744] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.938810] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.938877] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.938944] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.939010] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.939089] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.939158] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.939227] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.939296] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.939365] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.939492] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.939638] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.939782] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.939926] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.940070] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.940230] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.940376] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.940514] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.940651] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.940783] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.940916] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.941047] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[0.941180] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.941312] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.941450] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.941582] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[0.941714] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.941845] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.941976] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.942107] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[0.942239] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[0.942371] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.942503] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.942636] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[0.942768] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[0.942900] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.943032] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.943184] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[0.943325] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.943465] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.943604] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.943744] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[0.943911] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.944070] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.944215] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.944342] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[0.944457] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[0.944604] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.944700] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.944794] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[0.944890] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.944987] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.945082] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.945177] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[0.945273] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.945369] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.945463] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.945557] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[0.945652] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[0.945745] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.945840] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.945933] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[0.946073] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.946228] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.946380] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.946532] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.946652] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.946771] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.946889] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.947007] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.947124] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.947256] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.947400] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.947534] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.947679] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.947822] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.947964] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.948108] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.948252] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.948406] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.948551] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.948688] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.948822] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.948955] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[0.949090] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949224] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[0.949359] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.949493] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.949628] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.949762] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.949895] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.950030] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.950180] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.950322] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.950463] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.950604] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.950745] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.950886] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.951045] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.951173] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.951299] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.951427] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.951553] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.951680] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.951806] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.951932] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.952058] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.952184] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[0.952311] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952416] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[0.952528] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.952632] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.952746] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.952847] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.952948] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.953058] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.953160] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.953260] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.953361] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.953461] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.953561] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.953661] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.953766] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.953866] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.953967] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.954080] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.954231] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.954366] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.954492] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.954566] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.954633] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.954698] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[0.954763] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954827] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[0.954892] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.954973] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.955041] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.955108] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.955174] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.955239] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.955305] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.955371] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.955450] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.955514] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.955602] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.955679] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.955745] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.955809] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.955875] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.955953] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.956021] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.956089] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.956156] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.956234] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.956301] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.956368] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.956434] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956518] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[0.956636] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.956748] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.956861] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.956973] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.957085] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.957231] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.957412] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.957556] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.957680] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.957804] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.957927] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.958050] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.958173] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.958295] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.958417] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.958540] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.958662] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.958798] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.958915] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.959031] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.959148] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.959264] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[0.959380] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959497] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[0.959625] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.959742] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.959860] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.959977] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.960093] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.960211] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.960326] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.960443] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.960547] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.960616] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.960682] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.960749] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.960813] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.960879] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.960954] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.961018] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.961088] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.961153] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.961216] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.961279] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.961343] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.961406] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[0.961470] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961534] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[0.961609] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.961673] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.961738] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.961803] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.961867] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.961932] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.961994] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.962069] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.962125] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.962183] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.962240] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.962298] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.962354] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.962412] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.962469] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.962526] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.962583] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.962640] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.962697] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.962755] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.962812] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.962869] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[0.962927] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962984] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[0.963043] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.963100] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.963159] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.963216] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.963273] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.963331] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.963388] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.963445] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.963584] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.963727] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.963812] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.963881] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.963949] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.964017] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.964087] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.964154] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.964221] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.964289] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.964355] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.964432] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.964506] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.964575] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[0.964640] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964704] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[0.964768] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.964831] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.964896] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.964960] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.965024] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.965088] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.965152] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.965217] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.965281] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.965345] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.965424] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.965491] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.965560] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.965627] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.965694] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.965762] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.965828] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.965896] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.965962] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.966051] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.966117] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.966181] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.966245] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966309] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[0.966374] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.966438] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.966511] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966575] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[0.966639] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.966715] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.966777] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966838] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[0.966900] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.966961] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.967023] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967084] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[0.967146] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.967206] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.967267] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967328] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[0.967390] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[0.967452] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.967513] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967573] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[0.967634] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[0.967706] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[0.967767] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967827] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[0.967888] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[0.967950] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.968011] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968072] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[0.968132] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[0.968194] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[0.968255] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968316] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[0.968378] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[0.968440] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[0.968512] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968581] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[0.968643] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[0.968707] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.968769] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968831] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[0.968893] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[0.968955] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[0.969017] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969084] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[0.969146] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[0.969209] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.969272] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969332] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[0.969393] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[0.969456] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.969518] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969579] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[0.969641] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[0.969705] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[0.969766] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969827] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[0.969889] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[0.969950] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[0.970010] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970072] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[0.970133] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[0.970194] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.970256] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970317] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[0.970378] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[0.970440] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.970506] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970568] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[0.970628] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[0.970690] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[0.970751] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970811] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[0.970872] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[0.970946] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[0.971010] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971073] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[0.971137] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.971200] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.971263] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971326] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[0.971390] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[0.971454] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.971517] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971671] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[0.971800] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[0.971923] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.972047] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972170] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[0.972302] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[0.972391] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.972458] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972542] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[0.972611] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[0.972677] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.972742] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972806] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[0.972871] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[0.972937] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.973002] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973065] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[0.973129] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[0.973193] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.973256] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973320] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[0.973386] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[0.973450] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.973514] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973578] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[0.973643] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.973708] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.973773] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973837] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[0.973902] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[0.973966] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.974029] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974093] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[0.974174] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.974240] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[0.974306] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974370] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[0.974436] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.974501] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[0.974567] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974633] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[0.974711] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.974774] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.974842] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974903] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[0.974965] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.975027] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[0.975089] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975150] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[0.975212] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.975273] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[0.975334] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975398] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[0.975461] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.975523] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.975585] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975646] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[0.975709] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.975772] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.975833] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975895] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[0.975957] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.976018] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[0.976085] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976147] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[0.976209] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[0.976270] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.976331] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976392] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[0.976453] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.976543] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.976648] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976750] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[0.976854] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[0.976956] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.977059] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977208] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[0.977394] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.977569] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.977666] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977737] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[0.977808] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[0.977876] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.977943] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978008] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[0.978075] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[0.978142] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.978209] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978275] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[0.978352] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[0.978420] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.978488] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978554] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[0.978621] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[0.978701] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.978765] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978829] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[0.978893] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.978956] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.979019] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979082] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[0.979145] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[0.979209] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.979271] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979334] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[0.979396] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.979459] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.979522] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979598] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[0.979664] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[0.979729] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.979795] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979859] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[0.979925] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[0.979992] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.980057] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980123] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[0.980189] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[0.980254] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.980331] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980394] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[0.980457] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[0.980538] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.980607] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980671] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[0.980735] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[0.980799] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.980862] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980926] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[0.981002] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[0.981065] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[0.981128] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981190] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[0.981253] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[0.981328] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[0.981398] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981461] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[0.981524] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[0.981587] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.981650] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981713] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[0.981777] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[0.981840] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.981903] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981966] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[0.982028] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[0.982092] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.982155] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982217] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[0.982279] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[0.982342] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.982405] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982467] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[0.982546] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[0.982612] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[0.982677] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982741] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[0.982813] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.982878] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.982943] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983008] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[0.983073] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[0.983138] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.983215] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983277] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[0.983339] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[0.983403] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[0.983465] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983527] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[0.983590] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[0.983653] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[0.983716] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983778] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[0.983842] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[0.983904] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[0.983967] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984028] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[0.984091] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[0.984153] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[0.984226] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984288] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[0.984350] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[0.984411] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.984473] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984552] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[0.984616] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[0.984679] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[0.984742] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984805] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[0.984867] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[0.984930] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.984992] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985055] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[0.985120] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[0.985184] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.985258] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985315] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[0.985374] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[0.985432] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.985491] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985550] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[0.985609] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.985669] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.985728] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985788] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[0.985849] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.985908] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.985982] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986042] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[0.986105] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[0.986167] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.986230] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986292] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[0.986355] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[0.986418] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[0.986482] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986545] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[0.986608] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.986671] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.986734] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986796] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[0.986860] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986922] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.986985] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987047] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[0.987110] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[0.987172] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.987241] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987303] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[0.987366] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[0.987429] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.987491] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987553] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[0.987645] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[0.987712] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.987779] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987845] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[0.987913] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[0.987980] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.988048] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988115] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[0.988185] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.988253] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.988320] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988401] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[0.988479] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.988561] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.988629] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988701] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[0.988770] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.988837] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.988903] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988969] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[0.989036] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.989101] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.989168] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989233] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[0.989301] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[0.989367] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.989433] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989499] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[0.989569] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[0.989635] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.989700] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989766] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[0.989833] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[0.989901] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.989979] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990049] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[0.990171] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.990298] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[0.990413] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[0.990503] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[0.990576] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[0.990655] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[0.990727] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.990797] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[0.990868] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[0.990940] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[0.991022] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.991100] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[0.991164] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[0.991227] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[0.991289] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.991349] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.991410] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.991472] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991533] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[0.991595] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.991655] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[0.991717] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[0.991779] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[0.991840] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[0.991902] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[0.991963] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.992023] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[0.992086] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[0.992148] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[0.992239] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.992358] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[0.992462] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[0.992553] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[0.992621] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.992686] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.992748] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[0.992810] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.992873] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992935] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[0.992998] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.993060] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.993121] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993184] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[0.993246] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.993307] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.993369] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993430] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[0.993493] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.993562] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.993626] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993687] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[0.993749] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.993810] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.993871] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993932] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[0.993993] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[0.994053] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.994114] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994174] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[0.994234] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[0.994294] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.994355] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994416] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[0.994477] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[0.994536] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.994596] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994655] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[0.994715] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.994775] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.994842] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994902] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[0.994964] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.995026] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.995086] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995146] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[0.995207] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.995268] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[0.995328] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995388] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[0.995449] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[0.995511] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.995573] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995647] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[0.995766] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[0.995860] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[0.995995] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996121] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[0.996248] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[0.996375] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.996516] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996640] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[0.996767] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[0.996887] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[0.997007] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997126] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[0.997294] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[0.997500] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.997659] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997807] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[0.997955] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.998099] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.998222] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998344] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[0.998467] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.998590] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[0.998713] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998835] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[0.998958] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[0.999084] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[0.999219] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999341] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[0.999462] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[0.999587] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[0.999716] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999839] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[0.999962] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.000086] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.000210] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000343] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.000460] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.000587] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.000704] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000821] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.000937] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.001053] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.001165] (-) TimerEvent: {}
[1.001287] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001419] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.001536] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.001653] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.001769] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001884] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.002009] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.002126] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.002242] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002404] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.002850] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.003399] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.003653] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003986] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.004113] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.004237] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.004360] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004482] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.004619] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.004743] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.004865] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004987] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.005118] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.005251] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.005363] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005474] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.005587] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.005699] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.005811] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005923] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.006049] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.006162] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.006275] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006387] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.006500] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.006612] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.006725] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006836] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.006949] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.007061] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.007173] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007285] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.007398] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.007510] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.007623] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007734] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.007846] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.007958] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.008070] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008182] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.008294] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.008406] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.008526] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008644] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.008745] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.008852] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.008953] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009053] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.009154] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.009266] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.009367] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009468] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.009568] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.009670] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.009771] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009871] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.009972] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.010074] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.010177] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010276] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.010367] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.010456] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.010546] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010636] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.010725] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.010815] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.010905] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011008] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.011100] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.011192] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.011283] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011374] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.011482] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.011578] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.011725] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011879] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.011997] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.012110] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.012212] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012323] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.012421] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.012537] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.012625] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012684] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.012751] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.012810] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.012868] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012926] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.012986] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.013049] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013107] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.013166] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.013223] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013281] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[1.013340] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.013398] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013456] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.013514] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.013573] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.013632] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013690] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.013749] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.013807] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.013865] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013924] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.013983] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.014041] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.014099] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014158] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.014216] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.014275] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.014333] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014391] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.014450] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.014508] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.014566] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014624] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.014682] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.014741] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.014800] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014858] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.014917] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.014975] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.015033] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015093] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.015151] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.015211] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.015268] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015326] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.015385] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.015444] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.015502] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015560] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.015625] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.015708] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015779] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.015865] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.015924] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.016050] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.016186] (turtle_brick) StderrLine: {'line': b'\n'}
[1.016324] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.016484] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.016612] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.016749] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.016888] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017019] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.017129] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.017302] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.017510] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017601] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.017716] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.017822] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.017928] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018034] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.018140] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.018246] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.018354] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.018466] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.018573] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.018679] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.018795] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.018895] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.018996] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.019097] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.019198] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.019299] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.019399] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.019499] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.019599] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019726] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.019883] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.020021] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.020161] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.020287] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.020419] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.020574] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.020690] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.020806] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.020927] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.021054] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.021166] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.021278] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.021389] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.021501] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.021613] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021724] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.021836] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.021949] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.022075] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022241] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.022372] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.022476] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.022579] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022681] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.022783] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.022886] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.022988] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023090] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.023192] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.023294] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.023395] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023497] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.023611] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.023711] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.023810] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023908] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.024007] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.024108] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.024207] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024306] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.024405] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.024512] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.024623] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024715] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.024807] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.024898] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.024996] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025087] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.025179] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.025270] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.025362] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025452] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.025543] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.025635] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.025726] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025817] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.025908] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.026013] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.026105] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026196] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.026287] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.026378] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.026469] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026559] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.026655] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.026746] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.026837] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026928] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.027024] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.027116] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.027207] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027297] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.027389] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.027480] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.027575] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027703] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.027862] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.028024] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028164] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.028300] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.028415] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.028573] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028718] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.028856] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.028970] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.029096] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029217] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.029339] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.029455] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.029570] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029684] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.029783] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.029870] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.029956] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030041] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.030133] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.030229] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.030325] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030419] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.030516] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.030612] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.030709] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030806] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.030904] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.031011] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.031105] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031199] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.031294] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.031390] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.031486] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.031587] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.031693] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.031787] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.031880] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031973] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.032066] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.032158] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.032280] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032392] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.032514] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.032595] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.032665] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032760] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.032831] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.032900] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.032969] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033037] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.033116] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.033183] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.033251] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033318] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.033385] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.033453] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.033520] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033587] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.033654] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.033732] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033796] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.033861] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.033925] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.033990] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034054] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.034119] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.034183] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.034248] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.034314] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.034379] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.034444] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.034508] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.034573] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034638] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.034703] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.034768] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.034833] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.034898] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.034963] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.035029] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.035094] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.035159] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035223] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.035289] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.035363] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035429] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035494] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.035559] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.035624] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035687] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035757] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.035880] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.035951] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036030] (turtle_brick) StdoutLine: {'line': b'1     E128 continuation line under-indented for visual indent\n'}
[1.036100] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.036162] (turtle_brick) StdoutLine: {'line': b'22    E225 missing whitespace around operator\n'}
[1.036224] (turtle_brick) StdoutLine: {'line': b"47    E231 missing whitespace after ','\n"}
[1.036287] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.036355] (turtle_brick) StdoutLine: {'line': b'2     E261 at least two spaces before inline comment\n'}
[1.036418] (turtle_brick) StdoutLine: {'line': b"2     E262 inline comment should start with '# '\n"}
[1.036486] (turtle_brick) StdoutLine: {'line': b"24    E265 block comment should start with '# '\n"}
[1.036612] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.036711] (turtle_brick) StdoutLine: {'line': b'6     E302 expected 2 blank lines, found 0\n'}
[1.036810] (turtle_brick) StdoutLine: {'line': b'5     E303 too many blank lines (3)\n'}
[1.036910] (turtle_brick) StdoutLine: {'line': b'8     E501 line too long (115 > 99 characters)\n'}
[1.037009] (turtle_brick) StdoutLine: {'line': b"27    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.037149] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.037282] (turtle_brick) StdoutLine: {'line': b'33    W291 trailing whitespace\n'}
[1.037471] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.037602] (turtle_brick) StdoutLine: {'line': b'19    W293 blank line contains whitespace\n'}
[1.037714] (turtle_brick) StdoutLine: {'line': b'1     W391 blank line at end of file\n'}
[1.037827] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037939] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.038051] (turtle_brick) StdoutLine: {'line': b'209 errors\n'}
[1.038164] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038276] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 122\n"}
[1.038388] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 28\n"}
[1.038501] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 59\n"}
[1.038613] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038725] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.038837] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038950] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.039062] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.039174] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.039286] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.039399] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.039511] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.039623] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.039735] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.039847] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.039959] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.040071] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.040183] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.040295] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.040407] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.040532] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.040649] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.040762] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.040875] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.040998] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.041099] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.041206] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.041308] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.041408] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.041509] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.041610] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.041711] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.041811] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.041912] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.042012] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.042113] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.042215] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.042315] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.042407] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.042497] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.042588] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D208: Docstring is over-indented\n'}
[1.042677] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.042767] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.042857] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.042947] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.043037] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.043126] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.043221] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.043312] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.043401] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.043491] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.043581] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.043671] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.043792] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.043947] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.044053] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.044159] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.044275] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.044382] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.044505] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.044612] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.044715] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.044835] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.044937] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.045042] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.045141] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.045198] (turtle_brick) StdoutLine: {'line': b'21 errors\n'}
[1.045254] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.045311] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.045366] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 209 code styl...\n'}
[1.045422] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.045477] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.39s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.045535] (turtle_brick) CommandEnded: {'returncode': 1}
[1.045802] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.045828] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.046291] (-) EventReactorShutdown: {}
