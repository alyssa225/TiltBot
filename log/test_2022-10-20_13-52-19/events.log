[0.000000] (-) TimerEvent: {}
[0.000201] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000345] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000432] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.009678] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.098826] (-) TimerEvent: {}
[0.199119] (-) TimerEvent: {}
[0.245725] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.260048] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.266524] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.266822] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.266990] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.267255] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.267456] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.267703] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1852 - Experimental\n'}
[0.267830] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.267954] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.268074] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.268194] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.268315] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.268451] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.268574] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.268694] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.268773] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.268860] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.268932] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.269005] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.269078] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.269167] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299218] (-) TimerEvent: {}
[0.322029] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.322309] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.384100] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.384399] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.384579] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.384718] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.393408] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.393714] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.399328] (-) TimerEvent: {}
[0.400671] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.400988] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.401102] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.401184] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.401293] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.401401] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.454811] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.455093] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.499449] (-) TimerEvent: {}
[0.523880] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.524133] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.530030] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.530279] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.530463] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.534749] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.534885] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.534968] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.543724] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.543955] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.553272] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.15 sec\n'}
[0.553609] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.553769] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.553888] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.553989] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.554089] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.554199] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.29 sec*proc (2 tests)\n'}
[0.554306] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.15 sec*proc (1 test)\n'}
[0.554421] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.554534] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.29 sec\n'}
[0.554677] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.554810] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.554934] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.572522] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.572743] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.572877] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.574302] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.574773] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.574823] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.599547] (-) TimerEvent: {}
[0.609872] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.610135] (turtle_brick) StdoutLine: {'line': b'collected 5 items                                                              \x1b[0m\n'}
[0.610420] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.641025] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[31mF\x1b[0m\x1b[31m                                                     [ 40%]\x1b[0m\n'}
[0.642142] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[31m                                                 [ 60%]\x1b[0m\n'}
[0.699663] (-) TimerEvent: {}
[0.800123] (-) TimerEvent: {}
[0.819030] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 80%]\x1b[0m\n'}
[0.883850] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.884194] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.884346] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.884467] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m________________________________ test_math_fail ________________________________\x1b[0m\n'}
[0.884587] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/math_test.py\x1b[0m:6: in test_math_fail\n'}
[0.900233] (-) TimerEvent: {}
[0.917151] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m \x1b[94m5\x1b[39;49;00m+\x1b[94m6\x1b[39;49;00m == \x1b[94m20\x1b[39;49;00m\n'}
[0.917541] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert (5 + 6) == 20\x1b[0m\n'}
[0.918450] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.918993] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.919384] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.919633] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 286 code style errors / warnings:\x1b[0m\n'}
[0.919913] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:3:1: F401 'setuptools.find_packages' imported but unused\x1b[0m\n"}
[0.920188] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:14:100: E501 line too long (174 > 99 characters)\x1b[0m\n'}
[0.920492] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:18:43: E231 missing whitespace after ','\x1b[0m\n"}
[0.920775] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:24:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.921056] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\x1b[0m\n"}
[0.921336] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.921739] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\x1b[0m\n"}
[0.922022] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.923506] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\x1b[0m\n"}
[0.927897] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:12:42: W291 trailing whitespace\x1b[0m\n'}
[0.928225] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\x1b[0m\n"}
[0.928353] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.928439] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.928547] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.928647] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:39:53: W291 trailing whitespace\x1b[0m\n'}
[0.928731] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.928887] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:50:33: W291 trailing whitespace\x1b[0m\n'}
[0.928996] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.929126] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.929217] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.929301] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.929380] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.929460] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.929526] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.929615] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.929704] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.929784] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.929850] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.929949] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.930015] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.930105] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.930173] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.930242] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.930310] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.930379] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\x1b[0m\n"}
[0.930448] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.930516] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.930584] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.930653] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.930722] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.930791] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.930860] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.930929] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.930997] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:192:26: W291 trailing whitespace\x1b[0m\n'}
[0.931065] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\x1b[0m\n"}
[0.931140] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\x1b[0m\n"}
[0.931211] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\x1b[0m\n"}
[0.931279] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\x1b[0m\n"}
[0.931347] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.931415] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.931503] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.931577] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\x1b[0m\n"}
[0.931654] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.931723] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.931791] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.931892] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\x1b[0m\n"}
[0.931992] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\x1b[0m\n'}
[0.932115] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.932236] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\x1b[0m\n'}
[0.932364] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.932487] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.932620] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.932738] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\x1b[0m\n"}
[0.932856] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.932974] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.933092] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.933210] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.933328] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.933446] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:272:30: W291 trailing whitespace\x1b[0m\n'}
[0.933564] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\x1b[0m\n'}
[0.933682] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.933800] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\x1b[0m\n"}
[0.933929] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.934045] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\x1b[0m\n'}
[0.934160] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:294:19: W291 trailing whitespace\x1b[0m\n'}
[0.934275] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:295:1: W391 blank line at end of file\x1b[0m\n'}
[0.934399] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.934515] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.934630] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[0.934745] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.934866] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.934981] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.935097] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[0.935212] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[0.935327] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.935441] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.935568] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[0.935684] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[0.935799] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[0.935914] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[0.936030] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[0.936146] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[0.936260] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[0.936375] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[0.936489] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[0.936632] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.936807] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[0.936916] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.937025] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.937133] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.937242] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.937358] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.937467] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.937576] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.937725] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.937834] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.937942] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.938056] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.938164] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.938272] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.938381] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.938489] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.938597] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.938706] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[0.938814] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.938923] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.939032] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[0.939140] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[0.939249] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.939357] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.939492] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.939624] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.939744] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.939873] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.940000] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.940109] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.940218] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.940326] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[0.940435] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[0.940543] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.940651] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.940760] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[0.940868] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.941058] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.941167] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.941275] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.941383] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.941492] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.941600] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.941708] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.941828] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.941935] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.942038] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.942141] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.942243] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.942346] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.942449] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.942552] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.942655] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[0.942758] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[0.942876] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[0.942984] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.943093] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[0.943200] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.943308] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[0.943416] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.943743] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.943959] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[0.944120] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[0.944253] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.944392] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[0.944522] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.944653] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[0.944771] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[0.944936] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.945076] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.945199] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.945322] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.945445] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[0.945569] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.945694] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[0.945817] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[0.945958] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.946079] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.946200] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.946322] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.946445] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.946565] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.946684] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.946803] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.946931] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.947047] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.947153] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.947259] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.947364] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.947483] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.947603] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.947708] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.947814] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.947918] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.948022] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.948127] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.948231] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.948337] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.948441] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.948546] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.948651] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.948756] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.948861] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.948966] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.949071] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.949177] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.949282] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.949387] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.949492] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.949597] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.949702] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.949807] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.949912] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.950016] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.950136] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.950242] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.950348] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.950458] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.950563] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.950668] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.950773] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.950877] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.950982] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.951087] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.951191] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.951296] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.951408] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.951541] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.951642] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.951760] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.951897] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.952021] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.952145] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.952270] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.952394] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.952519] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.952666] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.952792] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:5:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.952933] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:6:21: W292 no newline at end of file\x1b[0m\n'}
[0.953109] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.953251] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.953392] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.953547] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.953652] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.953757] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.953870] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.953975] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.954080] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.954184] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.954289] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.954396] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.954500] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.954606] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.954710] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.954831] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.954941] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.955052] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.955163] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.955273] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.955396] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.955519] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.955633] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.955743] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.955863] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.956021] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.956128] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.956257] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.956392] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.956520] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.956660] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.956781] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.956926] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.957047] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.957168] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.957319] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.957449] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.957564] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.957679] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.957794] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.957909] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.958023] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.958137] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.958251] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.958364] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.958478] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.958592] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.958705] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.958818] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.958932] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.959046] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.959160] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.959274] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.959390] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959513] (turtle_brick) StdoutLine: {'line': b"./setup.py:3:1: F401 'setuptools.find_packages' imported but unused\n"}
[0.959629] (turtle_brick) StdoutLine: {'line': b'from setuptools import setup, find_packages\n'}
[0.959743] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.959858] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959979] (turtle_brick) StdoutLine: {'line': b'./setup.py:14:100: E501 line too long (174 > 99 characters)\n'}
[0.960160] (turtle_brick) StdoutLine: {'line': b"        ('share/' + package_name, ['package.xml', 'launch/show_turtle.launch.py', 'config/turtle_urdf.rviz', 'launch/run_turtle.launch.py', 'launch/turtle_arena.launch.py']),\n"}
[0.960326] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.960484] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960593] (turtle_brick) StdoutLine: {'line': b"./setup.py:18:43: E231 missing whitespace after ','\n"}
[0.960715] (turtle_brick) StdoutLine: {'line': b"    install_requires=['setuptools', 'urdf','rviz'],\n"}
[0.960843] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[0.960959] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961073] (turtle_brick) StdoutLine: {'line': b"./setup.py:24:28: E231 missing whitespace after ','\n"}
[0.961199] (turtle_brick) StdoutLine: {'line': b"    tests_require=['pytest','ament_lint_auto'],\n"}
[0.961316] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.961431] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961546] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\n"}
[0.961661] (turtle_brick) StdoutLine: {'line': b'from xmlrpc.client import Boolean\n'}
[0.961775] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.961899] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962006] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[0.962129] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[0.962238] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.962345] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962451] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\n"}
[0.962558] (turtle_brick) StdoutLine: {'line': b'from math import pi\n'}
[0.962665] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.962772] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962878] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[0.963158] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.963364] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.963494] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963620] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\n"}
[0.963741] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt\n'}
[0.963857] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.963984] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964097] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:12:42: W291 trailing whitespace\n'}
[0.964211] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.964325] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.964439] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964553] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\n"}
[0.964667] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import MarkerArray\n'}
[0.964781] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.964895] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965007] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\n"}
[0.965121] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.965235] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.965348] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965461] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\n'}
[0.965574] (turtle_brick) StdoutLine: {'line': b'class BState(Enum):\n'}
[0.965688] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.965801] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965922] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\n'}
[0.966036] (turtle_brick) StdoutLine: {'line': b'class Arena(Node):\n'}
[0.966150] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.966263] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966375] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:39:53: W291 trailing whitespace\n'}
[0.966488] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.966601] (turtle_brick) StdoutLine: {'line': b'    Creates the arena and places brick when called in command line.\n'}
[0.966715] (turtle_brick) StdoutLine: {'line': b'    Will drop the robot when called in command line.\n'}
[0.966841] (turtle_brick) StdoutLine: {'line': b'        -if robot is underneath the brick, the brick will land on the robot\n'}
[0.966952] (turtle_brick) StdoutLine: {'line': b'        -if nothing is under brick, brick will land on ground\n'}
[0.967069] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.967171] (turtle_brick) StdoutLine: {'line': b'        -robot_sub: continuous robot position\n'}
[0.967273] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.967375] (turtle_brick) StdoutLine: {'line': b'        -marker_pub: publishes walls and brick\n'}
[0.967507] (turtle_brick) StdoutLine: {'line': b'        -drop_pub: sends placement, drop coordinates  \n'}
[0.967635] (turtle_brick) StdoutLine: {'line': b'        -platform_pub: sends true if platform is under brick\n'}
[0.967737] (turtle_brick) StdoutLine: {'line': b'    SERVICES:\n'}
[0.967865] (turtle_brick) StdoutLine: {'line': b'        -Place: place brick at x, y, z location\n'}
[0.968008] (turtle_brick) StdoutLine: {'line': b'        -Drop: Empty drops brick\n'}
[0.968101] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.968193] (turtle_brick) StdoutLine: {'line': b'        -world_brick: connects brick to world\n'}
[0.968284] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.968389] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.968493] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.968596] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968717] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\n"}
[0.968883] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.969029] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.969134] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969233] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:50:33: W291 trailing whitespace\n'}
[0.969331] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.969430] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.969528] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969636] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\n"}
[0.969727] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.969818] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.969908] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969998] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\n"}
[0.970089] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.970179] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.970270] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970362] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\n"}
[0.970454] (turtle_brick) StdoutLine: {'line': b'        #setting state of brick\n'}
[0.970545] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.970636] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970726] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\n"}
[0.970834] (turtle_brick) StdoutLine: {'line': b'        #set up subscribers\n'}
[0.970950] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.971055] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971159] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\n"}
[0.971263] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.971368] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.971480] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971589] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\n"}
[0.971693] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.971797] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.971930] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972044] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\n"}
[0.972142] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.972241] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[0.972339] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972437] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\n"}
[0.972535] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[0.972633] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.972732] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972829] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\n"}
[0.972928] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.973027] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.973133] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973231] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\n"}
[0.973329] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.973428] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.973526] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973623] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\n"}
[0.973722] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.973834] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.973937] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974040] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\n"}
[0.974144] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.974258] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.974363] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974466] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\n"}
[0.974570] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.974674] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.974779] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974887] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\n"}
[0.974983] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.975079] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.975180] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975276] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\n'}
[0.975371] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.975493] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.975582] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975641] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\n'}
[0.975698] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.975754] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.975843] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975916] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\n"}
[0.975976] (turtle_brick) StdoutLine: {'line': b'        #initialize services\n'}
[0.976035] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.976094] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976152] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\n"}
[0.976211] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.976271] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[0.976330] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976388] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\n"}
[0.976446] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.976505] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.976563] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976621] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\n"}
[0.976680] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.976739] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.976847] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976911] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\n"}
[0.976977] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.977042] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.977108] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977173] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\n'}
[0.977239] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.977303] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.977368] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977432] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\n"}
[0.977497] (turtle_brick) StdoutLine: {'line': b'        #creating brick marker\n'}
[0.977561] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.977625] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977689] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\n"}
[0.977753] (turtle_brick) StdoutLine: {'line': b'        #creating wall markers\n'}
[0.977817] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.977893] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977954] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\n'}
[0.978017] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.978079] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.978142] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978203] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\n"}
[0.978266] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.978328] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.978401] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978463] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:192:26: W291 trailing whitespace\n'}
[0.978526] (turtle_brick) StdoutLine: {'line': b'        self.brickz = 0.0 \n'}
[0.978588] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[0.978651] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978712] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\n"}
[0.978775] (turtle_brick) StdoutLine: {'line': b'        self.wall = self.create_timer(0.5,self.wall_callback)\n'}
[0.978849] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.978904] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978959] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\n"}
[0.979015] (turtle_brick) StdoutLine: {'line': b'    def place_callback(self, request,response):\n'}
[0.979070] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.979125] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979180] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\n"}
[0.979236] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.979291] (turtle_brick) StdoutLine: {'line': b'                                  ^\n'}
[0.979346] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979401] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\n"}
[0.979457] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.979544] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.979621] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979676] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\n'}
[0.979732] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.979800] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.979877] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979947] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\n"}
[0.980006] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.980063] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.980121] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980178] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\n'}
[0.980236] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[0.980293] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.980351] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980408] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\n"}
[0.980465] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.980523] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.980580] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980637] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\n"}
[0.980695] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.980753] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.980810] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980867] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\n"}
[0.980925] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.980983] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.981041] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981104] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\n"}
[0.981162] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.981220] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.981278] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981336] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\n"}
[0.981393] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self, request,response):\n'}
[0.981451] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[0.981518] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981576] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\n'}
[0.981633] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[0.981691] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.981748] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981819] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\n"}
[0.981884] (turtle_brick) StdoutLine: {'line': b'        #publishing wall markers\n'}
[0.981949] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.982015] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982079] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\n'}
[0.982145] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[0.982210] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.982276] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982342] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\n'}
[0.982408] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.982474] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.982540] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982605] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\n'}
[0.982671] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.982736] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.982802] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982878] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\n'}
[0.983063] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.983329] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.983418] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983493] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\n"}
[0.983565] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.983633] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.983701] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983768] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\n"}
[0.983834] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.983900] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.983966] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984031] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\n"}
[0.984098] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.984164] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.984229] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984294] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\n'}
[0.984360] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.984426] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.984492] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984558] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\n"}
[0.984634] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.984701] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.984767] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984849] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\n"}
[0.984972] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.985089] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.985163] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985233] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:272:30: W291 trailing whitespace\n'}
[0.985302] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[0.985371] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[0.985439] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985506] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\n'}
[0.985575] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[0.985643] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.985712] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985779] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\n'}
[0.985847] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.985916] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.985984] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986051] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\n"}
[0.986126] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.986195] (turtle_brick) StdoutLine: {'line': b'                                                                 ^\n'}
[0.986263] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986330] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\n'}
[0.986398] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.986466] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.986534] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986601] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\n'}
[0.986669] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[0.986736] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.986804] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986883] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:294:19: W291 trailing whitespace\n'}
[0.986947] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.987010] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.987073] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987136] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:295:1: W391 blank line at end of file\n'}
[0.987200] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987263] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.987325] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987387] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[0.987452] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.987531] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.987595] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987659] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[0.987732] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.987811] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.987876] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987941] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[0.988007] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[0.988072] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.988137] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988202] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[0.988268] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[0.988334] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.988399] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988464] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[0.988530] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.988596] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.988661] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988726] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[0.988791] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.988856] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.988920] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988985] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[0.989050] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[0.989115] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.989180] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989245] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[0.989310] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.989375] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.989439] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989502] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[0.989567] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.989632] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.989696] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989760] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[0.989825] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[0.989889] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.989955] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990020] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[0.990085] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.990149] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.990227] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.990293] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.990358] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.990424] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.990490] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.990556] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.990621] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.990686] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.990750] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.990822] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.990887] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.990953] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.991018] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.991085] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.991151] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.991216] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.991281] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.991346] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.991412] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.991484] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[0.991551] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991615] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[0.991680] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.991745] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.991835] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.991975] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.992061] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.992176] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.992287] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.992367] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.992432] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.992496] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.992559] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.992621] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.992684] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.992746] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.992808] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.992873] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.992951] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.993071] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.993165] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.993259] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.993335] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.993396] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[0.993458] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993519] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[0.993580] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.993640] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.993701] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.993762] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.993845] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.993912] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.993978] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.994044] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.994110] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.994176] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.994242] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.994308] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.994374] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.994441] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.994508] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.994574] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.994641] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.994706] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.994773] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.994849] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.994911] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.994972] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[0.995035] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995097] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[0.995160] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.995222] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.995285] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.995347] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.995409] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.995484] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.995552] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.995614] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.995677] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.995740] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.995815] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.995878] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.995943] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.996008] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.996071] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.996136] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.996490] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.996755] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.997039] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.997673] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.997938] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.998293] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.998405] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998506] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[0.998605] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.998703] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.998839] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.998946] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.999053] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.999159] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.999272] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.999379] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.999496] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.999613] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.999711] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.999809] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.999908] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.000006] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.000104] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.000203] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.000297] (-) TimerEvent: {}
[1.000411] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.000548] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.000647] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.000746] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.000858] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.000999] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.001135] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001238] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[1.001338] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.001436] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.001534] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.001633] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.001731] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.001842] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.001943] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.002043] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.002143] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.002244] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.002344] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.002444] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.002544] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.002644] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.002744] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.002851] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.002952] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.003370] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.003490] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.003570] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.003643] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.003713] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.003783] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003853] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[1.003923] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.003993] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.004064] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.004135] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.004205] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.004277] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.004346] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.004416] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.004486] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.004567] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.004634] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.004702] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.004770] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.004837] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.004905] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.004972] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.005039] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.005107] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.005201] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.005294] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.005387] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.005454] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.005521] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005588] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[1.005655] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.005722] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.005790] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.005870] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.005934] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.005998] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.006061] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.006124] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.006187] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.006260] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.006329] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.006395] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.006459] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.006522] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.006586] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.006661] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.006726] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.006802] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.006864] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.006925] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.006987] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.007048] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[1.007109] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007169] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[1.007229] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.007290] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.007350] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.007412] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.007482] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.007550] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.007612] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.007673] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.007734] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.007795] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.007856] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.007918] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.007979] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.008040] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.008100] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.008161] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.008222] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.008283] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.008344] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.008406] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.008467] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.008527] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.008588] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008648] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[1.008710] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.008770] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.008831] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008890] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[1.009028] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.009145] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.009218] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009286] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[1.009355] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.009423] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.009492] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009560] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[1.009627] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.009706] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.009770] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009832] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[1.009895] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.009958] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.010022] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010084] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[1.010147] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.010210] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.010273] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010335] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[1.010397] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.010460] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.010523] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010609] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[1.010670] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.010732] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.010795] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010857] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[1.010920] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.010983] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.011045] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011107] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[1.011170] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.011239] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.011302] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011364] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[1.011427] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.011505] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.011571] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011633] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[1.011696] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.011765] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.011828] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011889] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[1.011952] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.012015] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.012077] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012139] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[1.012213] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.012274] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[1.012346] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012406] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[1.012467] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.012531] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[1.012606] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012670] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[1.012733] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.012794] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.012854] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012914] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[1.012974] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.013034] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.013094] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013155] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[1.013215] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.013276] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.013336] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013396] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[1.013456] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[1.013515] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.013575] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013636] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[1.013696] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.013756] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.013815] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013875] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[1.013936] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.013995] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.014055] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014115] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[1.014181] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.014241] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.014301] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014361] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[1.014421] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[1.014482] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.014542] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014601] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[1.014662] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[1.014721] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.014781] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014840] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[1.014900] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[1.014959] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.015048] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015150] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[1.015266] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[1.015368] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.015478] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015561] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[1.015619] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[1.015675] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.015732] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015787] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[1.015843] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.015897] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.015952] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016007] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[1.016062] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[1.016117] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.016172] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016228] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[1.016283] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.016339] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[1.016400] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016455] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[1.016511] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.016567] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.016623] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016677] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[1.016732] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.016788] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.016857] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016929] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[1.017011] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.017092] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[1.017170] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017250] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[1.017328] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.017410] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[1.017488] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017569] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[1.017647] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.017743] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.017806] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017895] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[1.017960] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.018023] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.018114] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018176] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[1.018266] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.018332] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.018394] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018483] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[1.018555] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.018645] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.018707] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018768] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[1.018857] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.018919] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.019007] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019068] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[1.019131] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[1.019215] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.019277] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019360] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[1.019425] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.019504] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.019573] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019638] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[1.019703] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.019769] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.019835] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019900] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[1.019967] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.020033] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.020098] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020163] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[1.020229] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.020301] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.020367] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020433] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[1.020499] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.020565] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.020630] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020694] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[1.020758] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.020822] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.020887] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020951] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[1.021015] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.021080] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.021144] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021223] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[1.021290] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.021356] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.021423] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021490] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.021557] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.021624] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.021690] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021756] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[1.021823] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.021912] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.021999] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022058] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[1.022117] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.022181] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.022241] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022300] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[1.022361] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.022421] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.022480] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022540] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[1.022600] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.022660] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.022722] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022782] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[1.022843] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.022902] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.023228] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023358] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[1.023510] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.023654] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.023780] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023945] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[1.024071] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.024198] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.024324] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024450] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[1.024577] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.024703] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.024830] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024974] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[1.025115] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.025241] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.025367] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025493] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[1.025620] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.025746] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.025872] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025998] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[1.026124] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.026251] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.026377] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026504] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[1.026632] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.026759] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.026892] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027006] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[1.027120] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.027234] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.027348] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027490] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[1.027653] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.027768] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.027958] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028110] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[1.028274] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.028408] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.028579] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028742] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[1.028855] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.028947] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.029039] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029130] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[1.029224] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.029332] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.029424] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029523] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[1.029616] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.029708] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.029800] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029892] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[1.029984] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.030077] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.030169] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030261] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[1.030381] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.030492] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.030602] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030712] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[1.030822] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.030933] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.031043] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031152] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[1.031262] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.031371] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.031489] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031608] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[1.031705] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.031798] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.031936] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032048] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[1.032145] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.032241] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.032338] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032434] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[1.032531] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.032627] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.032725] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032821] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[1.032918] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.033058] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.033197] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033319] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[1.033441] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.033563] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.033685] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033805] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[1.033939] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034051] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.034164] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034275] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.034388] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.034501] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.034613] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034725] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.034844] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.034958] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035070] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035183] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.035296] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.035431] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035580] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035717] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.035869] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.036012] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.036125] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036237] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.036351] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.036464] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.036577] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036690] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.036807] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.036920] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.037032] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037145] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.037257] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.037370] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.037483] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037595] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.037708] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.037821] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.037934] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038087] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.038224] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.038361] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038489] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038602] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.038715] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.038827] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038939] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039052] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[1.039166] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.039278] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.039391] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039547] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[1.039672] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.039779] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.039944] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.040068] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.040176] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.040284] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.040396] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.040504] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.040611] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.040718] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.040827] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.040934] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.041152] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.041274] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.041398] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.041505] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.041612] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.041719] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041827] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[1.041934] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.042042] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.042149] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.042257] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.042364] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.042480] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.042588] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.042700] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.042808] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.043247] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.043376] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.043518] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.043653] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.043762] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.043895] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.044024] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.044132] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.044240] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.044348] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044455] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[1.044563] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.044671] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.044807] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044929] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[1.045051] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.045173] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.045295] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045417] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[1.045574] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.045700] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.045838] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045952] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[1.046061] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.046169] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.046278] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046386] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[1.046496] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.046605] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.046713] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046821] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[1.046952] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.047106] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.047437] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047613] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[1.047766] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.047953] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.048138] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048281] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[1.048407] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.048534] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.048708] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048844] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[1.048965] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.049141] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.049287] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049379] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[1.049480] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.049584] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.049712] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049809] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[1.049906] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.050003] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.050099] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050195] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[1.050292] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.050389] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.050486] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050583] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[1.050679] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.050776] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.050873] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050969] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[1.051066] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.051173] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.051270] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051388] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.051517] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.051636] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.051751] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051859] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[1.052003] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.052099] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.052193] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052289] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[1.052384] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.052478] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.052597] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052712] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[1.052811] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.052907] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.053001] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053095] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[1.053190] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.053284] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.053378] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053473] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[1.053567] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.053661] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.053756] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053849] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.053952] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.054046] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.054141] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054234] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.054328] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.054454] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.054567] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054661] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.054754] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.054848] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.054943] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055036] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.055130] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.055225] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.055323] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055417] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.055548] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.055659] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.055752] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055867] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.056011] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.056108] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.056205] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056301] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.056398] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.056494] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.056591] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056687] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.056784] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.056881] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.056978] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057108] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.057225] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.057322] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.057418] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057514] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.057611] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.057708] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.057805] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057901] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.057998] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.058123] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.058217] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058310] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.058404] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.058499] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.058593] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058686] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.058781] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.058875] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.058969] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059062] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.059157] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.059250] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.059345] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059438] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.059547] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.059621] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.059678] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059735] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.059811] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.059988] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.060067] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060168] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.060237] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.060321] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.060429] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060509] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.060567] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.060631] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.060690] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060747] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.060805] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.060862] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.060919] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060976] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.061033] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.061089] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.061145] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061201] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.061257] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.061313] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.061369] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061424] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.061480] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.061536] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.061593] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061648] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.061704] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.061760] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.061829] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061886] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.061943] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.062000] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.062058] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062115] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.062184] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.062396] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.062593] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062680] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.062740] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.062800] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.062865] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062924] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.062982] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.063040] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063097] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.063155] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.063214] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.063271] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063327] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:5:1: E302 expected 2 blank lines, found 1\n'}
[1.063385] (turtle_brick) StdoutLine: {'line': b'def test_math_fail():\n'}
[1.063441] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.063531] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063606] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:6:21: W292 no newline at end of file\n'}
[1.063664] (turtle_brick) StdoutLine: {'line': b'    assert 5+6 == 20                    ^\n'}
[1.063721] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063778] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.063853] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.063922] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.063997] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064053] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.064111] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.064168] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.064225] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064282] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.064340] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.064398] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.064455] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064512] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.064570] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.064627] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.064684] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064742] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.064800] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.064857] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.064914] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064971] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.065049] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.065187] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.065272] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065332] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.065394] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.065453] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.065510] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065568] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.065626] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.065685] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.065744] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065802] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.065860] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.065918] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.065983] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066041] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.066099] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.066156] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066213] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.066271] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.066329] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.066387] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066445] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.066508] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.066568] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.066626] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066684] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.066742] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.066800] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.066871] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066927] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.066983] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.067039] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.067096] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.067152] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.067208] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.067264] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.067320] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.067376] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.067432] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.067527] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.067602] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.067659] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.067714] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.067770] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.067825] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067907] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.067984] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.068041] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.068097] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.068154] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.068211] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.068267] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.068323] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.068378] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.068435] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.068497] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.068554] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.068610] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.068666] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.068722] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.068778] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068834] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.068891] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.068947] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069003] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069058] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.069114] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.069170] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.069226] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069284] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.069341] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.069398] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.069454] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069509] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.069576] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.069633] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069688] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069743] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.069800] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.069857] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.069912] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069968] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.070024] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.070082] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.070139] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070196] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.070253] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.070310] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.070367] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070424] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.070480] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.070537] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.070593] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070649] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.070705] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.070762] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.070826] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070882] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.070939] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.070995] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.071051] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071106] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.071162] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.071217] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.071272] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071327] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.071383] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.071438] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.071525] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071592] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.071662] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.071718] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.071786] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071842] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.071927] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.072004] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.072061] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072117] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.072174] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.072231] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.072288] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072345] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.072402] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.072459] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072516] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.072574] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.072631] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072688] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072745] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.072802] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.072859] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072915] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072971] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.073059] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.073177] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.073259] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073319] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.073378] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.073436] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.073494] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073551] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.073609] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.073667] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.073724] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073781] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.073839] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.073897] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.073954] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074010] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.074068] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.074136] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.074193] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074250] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.074308] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.074365] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.074423] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.074480] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.074537] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.074594] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.074652] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074710] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.074768] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.074826] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.074883] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074941] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.074999] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.075056] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.075114] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075173] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.075236] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.075295] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.075353] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075410] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.075491] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.075565] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.075636] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075693] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.075755] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.075813] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.075896] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075975] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.076032] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.076088] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076144] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.076201] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.076258] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.076315] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076371] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.076427] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.076484] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.076540] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.076597] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.076654] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.076710] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.076767] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.076837] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076893] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.076949] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.077004] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.077059] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.077115] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.077170] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.077225] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.077280] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.077335] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077390] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.077446] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.077502] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.077557] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077612] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.077668] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.077723] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.077778] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077833] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.077889] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.077944] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077999] (turtle_brick) StdoutLine: {'line': b'1     E128 continuation line under-indented for visual indent\n'}
[1.078054] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.078109] (turtle_brick) StdoutLine: {'line': b'27    E225 missing whitespace around operator\n'}
[1.078165] (turtle_brick) StdoutLine: {'line': b"79    E231 missing whitespace after ','\n"}
[1.078221] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.078277] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.078333] (turtle_brick) StdoutLine: {'line': b"3     E262 inline comment should start with '# '\n"}
[1.078388] (turtle_brick) StdoutLine: {'line': b"34    E265 block comment should start with '# '\n"}
[1.078443] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.078506] (turtle_brick) StdoutLine: {'line': b'9     E302 expected 2 blank lines, found 0\n'}
[1.078562] (turtle_brick) StdoutLine: {'line': b'7     E303 too many blank lines (2)\n'}
[1.078617] (turtle_brick) StdoutLine: {'line': b'10    E501 line too long (115 > 99 characters)\n'}
[1.078673] (turtle_brick) StdoutLine: {'line': b"34    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.078729] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.078784] (turtle_brick) StdoutLine: {'line': b'39    W291 trailing whitespace\n'}
[1.078840] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.078895] (turtle_brick) StdoutLine: {'line': b'26    W293 blank line contains whitespace\n'}
[1.078950] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.079004] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079058] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.079113] (turtle_brick) StdoutLine: {'line': b'286 errors\n'}
[1.079168] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079222] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 178\n"}
[1.079277] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 35\n"}
[1.079332] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 73\n"}
[1.079387] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079442] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.079529] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079603] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.079658] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.079713] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.079769] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.079825] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.079905] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.079982] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.080037] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.080093] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.080149] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.080204] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.080259] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.080315] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.080371] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.080428] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.080484] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.080540] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.080596] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.080658] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.080714] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.080769] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.080834] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.080890] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.080945] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.081022] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.081113] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.081214] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.081299] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.081389] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.081449] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.081506] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.081563] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.081620] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.081678] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.081734] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.082012] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.082240] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.082347] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.082433] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.082521] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.082622] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.082723] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.082806] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.082894] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.082990] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.083068] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.083151] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.083247] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.083314] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.083409] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.083484] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.083556] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.083621] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.083694] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.083760] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.083824] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.083888] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.083952] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.084016] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.084079] (turtle_brick) StdoutLine: {'line': b'20 errors\n'}
[1.084143] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.084207] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.084271] (turtle_brick) StdoutLine: {'line': b'FAILED test/math_test.py::test_math_fail - assert (5 + 6) == 20\n'}
[1.084335] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 286 code styl...\n'}
[1.084400] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.084469] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m3 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.40s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.084536] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.084627] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.084690] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.084750] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.084811] (turtle_brick) StderrLine: {'line': b'\n'}
[1.084887] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.084952] (turtle_brick) CommandEnded: {'returncode': 1}
[1.085233] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.085259] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.085578] (-) EventReactorShutdown: {}
