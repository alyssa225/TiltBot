[0.000000] (-) TimerEvent: {}
[0.000160] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000205] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000271] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.009409] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.098471] (-) TimerEvent: {}
[0.198755] (-) TimerEvent: {}
[0.272042] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.284291] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.290798] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.291005] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.291222] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.291335] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.291549] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.291708] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1936 - Experimental\n'}
[0.291821] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.291935] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.292046] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.292155] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.292265] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.292376] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.292485] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.292595] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.292704] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.292814] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.292923] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.293033] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.293144] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.293269] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.298869] (-) TimerEvent: {}
[0.346333] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.346513] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.398997] (-) TimerEvent: {}
[0.405554] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.405714] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.405781] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.405841] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.414850] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.415202] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.422119] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.422425] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.422656] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.422762] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.422891] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.423024] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.476322] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.476564] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.499129] (-) TimerEvent: {}
[0.550651] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.550867] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.555138] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.555329] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.555432] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.599256] (-) TimerEvent: {}
[0.628611] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.628892] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.629146] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.640028] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.641124] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.664615] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.664907] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.665104] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.675756] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.675970] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.686708] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.26 sec\n'}
[0.687204] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.687451] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.687556] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.687625] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.687693] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.687768] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.39 sec*proc (2 tests)\n'}
[0.687836] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.26 sec*proc (1 test)\n'}
[0.687900] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.687964] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.40 sec\n'}
[0.688028] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.688126] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.688191] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.699368] (-) TimerEvent: {}
[0.718230] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.718558] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.718743] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.719723] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.720478] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.720580] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.799488] (-) TimerEvent: {}
[0.846878] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.899574] (-) TimerEvent: {}
[0.909146] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.909485] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.909686] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.909776] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.909856] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.947935] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.948317] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 224 code style errors / warnings:\x1b[0m\n'}
[0.948798] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:202:5: E301 expected 1 blank line, found 0\x1b[0m\n'}
[0.949084] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:209:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.949446] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:216:13: E225 missing whitespace around operator\x1b[0m\n'}
[0.949654] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:243:58: E225 missing whitespace around operator\x1b[0m\n'}
[0.949977] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:246:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.950219] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:247:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.950452] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:248:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.950680] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:253:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.950908] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:262:30: W291 trailing whitespace\x1b[0m\n'}
[0.951133] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:264:42: E225 missing whitespace around operator\x1b[0m\n'}
[0.951361] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:265:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.952213] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:265:100: E501 line too long (101 > 99 characters)\x1b[0m\n'}
[0.953561] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:282:9: E225 missing whitespace around operator\x1b[0m\n'}
[0.956505] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:284:19: W291 trailing whitespace\x1b[0m\n'}
[0.956642] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:285:1: W391 blank line at end of file\x1b[0m\n'}
[0.956769] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.956892] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.957013] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[0.957148] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.957296] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.957418] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.957539] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[0.957661] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[0.957820] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.957967] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.958046] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[0.958116] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[0.958193] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[0.958276] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[0.958344] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[0.958412] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[0.958479] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[0.958559] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[0.958626] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[0.958693] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.958760] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[0.958827] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.958905] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.958969] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.959032] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.959095] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.959159] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.959222] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.959286] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.959350] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.959412] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.959476] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.959539] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.959602] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.959673] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.959743] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.959819] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.959882] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[0.959942] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.960003] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.960070] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[0.960207] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[0.960331] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.960466] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.960599] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.960732] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.960871] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.961004] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.961137] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.961270] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.961402] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.961536] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[0.961669] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[0.961802] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.961934] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.962068] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[0.962224] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.962359] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.962492] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.962625] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.962758] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.962905] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.963038] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.963170] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.963302] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.963434] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.963567] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.963706] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.963839] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.963971] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.964126] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.964260] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.964393] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[0.964526] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[0.964659] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[0.964792] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.964925] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[0.965057] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.965190] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[0.965322] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.965456] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.965590] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[0.965748] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[0.965909] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.966034] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[0.966160] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.966310] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[0.966438] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[0.966565] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.966691] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.966817] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.966953] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.967074] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[0.967213] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.967330] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[0.967448] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[0.967566] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.967685] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.967804] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.967923] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.968042] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.968208] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.968348] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.968485] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.968766] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.968907] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.969057] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.969187] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.969317] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.969447] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.969576] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.969705] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.969834] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.969962] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.970092] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.970243] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.970372] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.970497] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.970623] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.970754] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.970879] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.971005] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.971130] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.971256] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.971381] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.971506] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.971636] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.971762] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.971887] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.972013] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.972171] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.972291] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.972410] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.972529] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.972673] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.972835] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.972954] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.973073] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.973192] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.973312] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.973431] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.973550] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.973669] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.973830] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.973995] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.974124] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.974308] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.974447] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.974575] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.974704] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.974843] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.974980] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.975100] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.975219] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.975338] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.975457] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.975576] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.975696] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.975814] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.975934] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.976074] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.976250] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.976413] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.976598] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.976754] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.976899] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.977044] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.977198] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.977346] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.977470] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.977575] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.977681] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.977786] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.977894] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.978016] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.978122] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.978240] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.978348] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.978454] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.978560] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.978665] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.978771] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.978876] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.978982] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.979087] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.979193] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.979298] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.979403] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.979509] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.979614] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.979720] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.979827] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.979933] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.980040] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.980180] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.980287] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.980393] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.980499] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.980604] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.980715] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.980821] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.980926] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.981032] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.981137] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.981242] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.981347] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.981457] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.981563] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.981668] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.981774] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.981915] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.982007] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982077] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:202:5: E301 expected 1 blank line, found 0\n'}
[0.982159] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self, msg):\n'}
[0.982247] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.982318] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982387] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:209:24: E225 missing whitespace around operator\n'}
[0.982456] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[0.982525] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.982595] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982664] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:216:13: E225 missing whitespace around operator\n'}
[0.982733] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[0.982802] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.982883] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982947] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:243:58: E225 missing whitespace around operator\n'}
[0.983011] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[0.983121] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.983237] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983342] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:246:1: W293 blank line contains whitespace\n'}
[0.983430] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.983498] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.983564] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983628] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:247:1: W293 blank line contains whitespace\n'}
[0.983693] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.983758] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.983823] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983888] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:248:5: E303 too many blank lines (2)\n'}
[0.983953] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self, x, y, z):\n'}
[0.984029] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.984114] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984180] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:253:1: W293 blank line contains whitespace\n'}
[0.984244] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.984311] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.984375] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984439] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:262:30: W291 trailing whitespace\n'}
[0.984504] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[0.984568] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[0.984633] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984697] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:264:42: E225 missing whitespace around operator\n'}
[0.984762] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[0.984826] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.984891] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984956] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:265:65: E261 at least two spaces before inline comment\n'}
[0.985022] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 # has to grab gravity this from yaml\n'}
[0.985088] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.985153] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985217] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:265:100: E501 line too long (101 > 99 characters)\n'}
[0.985281] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 # has to grab gravity this from yaml\n'}
[0.985346] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.985411] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985475] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:282:9: E225 missing whitespace around operator\n'}
[0.985540] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[0.985605] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.985671] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985736] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:284:19: W291 trailing whitespace\n'}
[0.985800] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.985866] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.985929] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985992] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:285:1: W391 blank line at end of file\n'}
[0.986056] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986119] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.986196] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986266] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[0.986331] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.986395] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.986459] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986522] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[0.986585] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.986648] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.986711] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986774] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[0.986836] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[0.986899] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.986960] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987023] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[0.987097] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[0.987175] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.987237] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987299] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[0.987362] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.987425] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.987501] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987567] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[0.987633] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.987700] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.987767] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987833] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[0.987904] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[0.987971] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.988038] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988124] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[0.988193] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.988261] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.988328] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988395] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[0.988463] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.988530] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.988598] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988664] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[0.988733] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[0.988801] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.988869] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988937] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[0.989005] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.989072] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.989141] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.989209] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.989276] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.989344] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.989412] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.989480] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.989547] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.989616] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.989683] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.989752] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.989903] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.990039] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.990192] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.990341] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.990493] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.990635] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.990779] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.990932] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.991067] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.991203] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[0.991338] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991474] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[0.991609] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.991744] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.991880] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.992015] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.992182] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.992373] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.992561] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.992721] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.992852] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.992993] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.993118] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.993242] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.993367] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.993504] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.993625] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.993746] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.993868] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.993989] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.994111] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.994242] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.994366] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.994500] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[0.994625] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994749] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[0.994874] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.994998] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.995123] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.995248] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.995373] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.995499] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.995624] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.995749] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.995873] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.995997] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.996174] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.996351] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.996496] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.996641] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.996785] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.996936] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.997079] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.997253] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.997381] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.997510] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.997637] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.997764] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[0.997921] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998045] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[0.998166] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.998297] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.998399] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.998501] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.998602] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.998704] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.998805] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.998906] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.999008] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.999109] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.999210] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.999311] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.999412] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.999514] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.999611] (-) TimerEvent: {}
[0.999737] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.999861] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.999963] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.000064] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.000223] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.000325] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.000425] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.000527] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.000628] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000729] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[1.000830] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.000931] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.001033] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.001135] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.001246] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.001348] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.001450] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.001552] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.001653] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.001755] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.001891] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.001993] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.002094] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.002243] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.002361] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.002460] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.002560] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.002658] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.002757] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.002856] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.002955] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.003053] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.003152] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003251] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[1.003350] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.003448] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.003547] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.003646] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.003745] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.003844] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.003942] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.004041] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.004188] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.004310] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.004409] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.004507] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.004606] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.004705] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.004804] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.004903] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.005002] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.005100] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.005210] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.005310] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.005408] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.005506] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.005610] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005709] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[1.005807] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.005934] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.006108] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.006201] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.006277] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.006353] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.006413] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.006472] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.006531] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.006590] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.006649] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.006708] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.006767] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.006825] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.006884] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.006944] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.007003] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.007074] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.007133] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.007192] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.007251] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.007310] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.007369] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007427] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[1.007486] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.007544] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.007604] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.007662] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.007721] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.007780] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.007838] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.007896] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.007955] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.008014] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.008073] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.008179] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.008260] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.008318] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.008377] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.008435] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.008500] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.008558] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.008616] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.008675] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.008733] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.008791] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[1.008850] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008908] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[1.008966] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.009024] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.009083] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.009141] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.009199] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.009256] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.009314] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.009371] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.009429] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.009487] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.009545] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.009602] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.009660] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.009718] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.009775] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.009852] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.009921] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.009990] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.010059] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.010139] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.010221] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.010288] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.010353] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010418] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[1.010490] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.010556] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.010622] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010687] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[1.010752] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.010827] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.010905] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010969] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[1.011032] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.011095] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.011171] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011243] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[1.011308] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.011372] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.011435] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011499] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[1.011563] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.011628] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.011692] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011756] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[1.011819] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.011884] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.011948] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012011] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[1.012107] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.012200] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.012256] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012352] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[1.012420] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.012574] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.012689] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012779] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[1.012860] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.012945] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.013022] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013079] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[1.013135] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.013205] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.013261] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013316] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[1.013372] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.013428] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.013484] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013539] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[1.013595] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.013651] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.013707] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013762] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[1.013818] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.013875] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.013936] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014083] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[1.014196] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.014276] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[1.014349] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014419] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[1.014489] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.014560] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[1.014631] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014702] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[1.014772] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.014843] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.014914] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014983] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[1.015054] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.015137] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.015201] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015265] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[1.015329] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.015399] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.015539] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015705] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[1.015844] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[1.015981] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.016145] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016282] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[1.016419] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.016554] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.016694] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016828] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[1.016963] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.017099] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.017239] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017364] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[1.017489] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.017613] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.017738] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017861] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[1.017986] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[1.018109] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.018280] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018405] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[1.018538] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[1.018662] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.018785] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018909] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[1.019033] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[1.019157] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.019280] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019404] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[1.019528] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[1.019652] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.019775] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019898] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[1.020022] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[1.020192] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.020335] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020459] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[1.020584] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.020708] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.020832] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020955] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[1.021080] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[1.021204] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.021329] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021453] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[1.021578] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.021703] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[1.021827] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021951] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[1.022131] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.022286] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.022431] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022555] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[1.022680] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.022804] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.022928] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023053] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[1.023192] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.023318] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[1.023443] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023566] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[1.023690] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.023821] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[1.023945] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024069] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[1.024258] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.024383] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.024506] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024630] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[1.024753] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.024878] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.025001] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025125] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[1.025270] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.025410] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.025562] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025699] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[1.025835] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.025970] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.026114] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026260] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[1.026399] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.026534] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.026671] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026806] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[1.026942] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[1.027092] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.027298] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027621] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[1.027826] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.028046] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.028360] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028982] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[1.029388] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.029665] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.029868] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030010] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[1.030127] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.030258] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.030372] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030484] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[1.030598] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.030712] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.030825] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030939] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[1.031053] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.031178] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.031285] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031392] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[1.031509] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.031616] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.031723] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031830] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[1.031938] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.032045] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.032166] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032273] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[1.032380] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.032487] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.032594] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032701] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.032808] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.032915] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.033022] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033128] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[1.033234] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.033340] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.033447] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033553] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[1.033660] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.033785] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.033910] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034019] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[1.034129] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.034237] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.034310] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034379] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[1.034447] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.034514] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.034581] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034649] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[1.034717] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.034785] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.034852] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034919] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[1.034986] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.035054] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.035121] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035186] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[1.035253] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.035319] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.035388] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035454] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[1.035595] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.035677] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.035762] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035833] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[1.035905] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.035974] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.036045] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036132] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[1.036212] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.036283] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.036353] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036421] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[1.036491] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.036561] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.036645] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036714] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[1.036784] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.036853] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.036937] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037002] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[1.037073] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.037140] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.037223] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037287] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[1.037352] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.037417] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.037482] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037547] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[1.037640] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.037704] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.037768] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037831] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[1.037909] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.037975] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.038041] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038107] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[1.038185] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.038260] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.038327] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038393] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[1.038459] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.038526] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.038592] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038657] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[1.038724] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.038789] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.038861] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038937] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[1.039000] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.039063] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.039140] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039205] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[1.039271] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.039335] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.039401] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039466] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[1.039531] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.039596] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.039661] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039726] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[1.039791] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.039856] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.039920] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039985] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[1.040063] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.040144] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040210] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040274] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[1.040337] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.040400] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040465] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040528] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[1.040592] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.040654] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.040718] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040782] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[1.040846] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.040909] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.040974] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041038] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[1.041102] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041164] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041228] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041291] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.041354] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.041418] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041480] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041543] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.041607] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.041671] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041734] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041796] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.041858] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.041921] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041983] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042084] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.042226] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.042347] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.042467] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042605] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.042747] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.042875] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.042999] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043122] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.043262] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.043381] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.043500] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043619] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.043738] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.043858] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.043983] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044126] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.044271] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.044403] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.044535] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044667] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.044826] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.044965] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.045084] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045203] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.045334] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.045450] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.045565] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045680] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[1.045796] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.045911] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.046026] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046174] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[1.046310] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.046417] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.046525] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.046633] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.046750] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.046858] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.046965] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.047085] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.047203] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.047308] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.047450] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.047611] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.047739] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.047870] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.048003] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.048172] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.048323] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.048428] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048532] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[1.048637] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.048741] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.048845] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.048950] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.049054] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.049159] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.049263] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.049367] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.049472] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.049577] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.049681] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.049785] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.049890] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.049996] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.050111] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.050252] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.050371] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.050473] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.050575] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050676] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[1.050778] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.050880] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.050981] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051083] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[1.051186] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.051287] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.051389] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051490] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[1.051592] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.051694] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.051795] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051896] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[1.051997] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.052099] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.052239] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052355] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[1.052455] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.052556] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.052656] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052763] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[1.052864] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.052965] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.053066] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053166] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[1.053267] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.053368] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.053468] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053569] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[1.053669] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.053770] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.053871] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053971] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[1.054071] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.054250] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.054390] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054498] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[1.054608] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.054717] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.054826] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054943] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[1.055043] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.055145] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.055246] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055346] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[1.055517] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.055647] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.055781] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055891] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[1.056001] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.056116] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.056286] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056423] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[1.056532] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.056640] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.056755] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056855] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.056956] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.057057] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.057157] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057257] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[1.057363] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.057473] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.057574] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057674] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[1.057775] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.057876] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.057977] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058077] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[1.058202] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.058331] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.058432] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058533] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[1.058634] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.058735] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.058835] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058936] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[1.059037] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.059138] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.059238] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059338] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.059439] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.059539] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.059640] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059740] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.059841] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.059942] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.060043] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060168] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.060299] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.060401] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.060502] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060602] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.060703] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.060803] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.060904] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061004] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.061105] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.061205] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.061306] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061406] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.061507] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.061607] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.061708] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061814] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.061915] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.062015] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.062155] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062311] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.062421] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.062529] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.062638] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062746] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.062860] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.062970] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.063088] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063188] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.063289] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.063390] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.063492] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063592] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.063693] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.063793] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.063893] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063994] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.064095] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.064235] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.064352] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064452] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.064553] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.064653] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.064754] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064854] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.064956] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.065057] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.065157] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065259] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.065360] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.065461] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.065562] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065663] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.065764] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.065867] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.065967] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066068] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.066174] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.066330] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.066424] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066523] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.066617] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.066711] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.066806] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066899] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.066993] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.067087] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.067181] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067275] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.067377] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.067472] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.067565] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067658] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.067752] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.067846] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.067939] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068033] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.068129] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.068269] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.068363] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068456] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.068550] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.068643] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.068736] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068829] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.068923] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.069017] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069110] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069203] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.069297] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.069390] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069484] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069577] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.069670] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.069763] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069857] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069950] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.070044] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.070218] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070354] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.070484] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.070606] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070699] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[1.070802] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.070896] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070989] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.071083] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.071191] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071286] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071381] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.071477] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.071573] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071668] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071763] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.071858] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.071954] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072049] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072191] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.072295] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.072398] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072508] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072601] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.072694] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.072787] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072881] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072973] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.073068] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.073161] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.073253] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073346] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.073440] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.073534] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.073627] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073720] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.073814] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.073908] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.074002] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074094] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.074218] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.074353] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.074447] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074540] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.074634] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.074727] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074820] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.074914] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.075008] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.075101] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075194] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.075288] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.075446] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.075631] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075806] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.075952] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.076106] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.076211] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076304] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.076373] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.076468] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.076566] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.076635] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.076737] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.076809] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.076909] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.076989] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.077048] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.077118] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.077175] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.077231] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.077286] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.077341] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.077398] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077453] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.077509] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.077565] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.077621] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.077677] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.077733] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.077790] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.077845] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.077938] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.078006] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.078078] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.078156] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.078238] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.078315] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.078371] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.078427] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078484] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.078540] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.078596] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.078652] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078708] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.078769] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.078842] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.078900] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078956] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.079013] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.079069] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.079125] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079180] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.079235] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.079290] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.079345] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079400] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.079456] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.079512] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.079567] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079622] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.079678] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.079734] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.079790] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079846] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.079902] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.079958] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.080014] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080069] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.080161] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.080232] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.080303] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080360] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.080417] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.080474] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.080530] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080586] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.080643] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.080699] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.080756] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080812] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.080868] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.080925] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.080987] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081043] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.081099] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.081155] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.081211] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081266] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.081322] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.081378] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.081434] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081488] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.081544] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.081600] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.081656] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081711] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.081767] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.081823] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.081879] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081935] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.081991] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.082047] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082116] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.082198] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.082286] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.082344] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082401] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.082465] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.082523] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.082580] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082638] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.082706] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.082765] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.082822] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082879] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.082937] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.082994] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.083070] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083138] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.083206] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.083275] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.083342] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083416] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.083493] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.083550] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.083606] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083663] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.083720] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.083777] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.083834] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083890] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.083948] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.084005] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.084061] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.084151] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.084224] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.084300] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.084357] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084414] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.084471] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.084529] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.084586] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084643] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.084701] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.084759] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.084816] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084873] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.084931] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.084988] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.085045] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085101] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.085158] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.085215] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.085271] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085327] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.085384] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.085441] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.085497] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085553] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.085609] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.085665] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085721] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.085778] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.085834] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.085891] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085947] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.086004] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.086066] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.086123] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.086225] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.086298] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.086375] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.086432] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.086489] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086547] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.086603] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.086660] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.086717] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.086774] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.086831] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.086889] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.086945] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.087002] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087059] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.087129] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.087184] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.087240] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087294] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.087350] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.087405] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.087460] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087515] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.087571] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.087626] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087680] (turtle_brick) StdoutLine: {'line': b'1     E128 continuation line under-indented for visual indent\n'}
[1.087736] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.087791] (turtle_brick) StdoutLine: {'line': b'27    E225 missing whitespace around operator\n'}
[1.087847] (turtle_brick) StdoutLine: {'line': b"47    E231 missing whitespace after ','\n"}
[1.087902] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.087963] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.088020] (turtle_brick) StdoutLine: {'line': b"2     E262 inline comment should start with '# '\n"}
[1.088075] (turtle_brick) StdoutLine: {'line': b"24    E265 block comment should start with '# '\n"}
[1.088162] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.088233] (turtle_brick) StdoutLine: {'line': b'1     E301 expected 1 blank line, found 0\n'}
[1.088308] (turtle_brick) StdoutLine: {'line': b'6     E302 expected 2 blank lines, found 0\n'}
[1.088364] (turtle_brick) StdoutLine: {'line': b'6     E303 too many blank lines (2)\n'}
[1.088420] (turtle_brick) StdoutLine: {'line': b'9     E501 line too long (115 > 99 characters)\n'}
[1.088476] (turtle_brick) StdoutLine: {'line': b"27    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.088532] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.088589] (turtle_brick) StdoutLine: {'line': b'35    W291 trailing whitespace\n'}
[1.088645] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.088702] (turtle_brick) StdoutLine: {'line': b'22    W293 blank line contains whitespace\n'}
[1.088758] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.088821] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088878] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.088934] (turtle_brick) StdoutLine: {'line': b'224 errors\n'}
[1.088991] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089046] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 131\n"}
[1.089102] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 28\n"}
[1.089158] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 65\n"}
[1.089215] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089270] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.089326] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089381] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.089436] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.089516] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.089582] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.089652] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.089708] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.089773] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.089828] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.089883] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.089938] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.089993] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.090048] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.090104] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.090159] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.090247] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.090320] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.090376] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.090433] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.090490] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.090545] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.090602] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.090658] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.090713] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.090769] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.090825] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.090881] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.090937] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.090993] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.091049] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.091106] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.091161] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.091217] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.091272] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.091328] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.091389] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D208: Docstring is over-indented\n'}
[1.091446] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.091502] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.091558] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.091613] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.091669] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.091724] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.091780] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.091835] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.091891] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.091951] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.092008] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.092063] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.092163] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.092236] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.092312] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.092370] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.092428] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.092485] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.092543] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.092600] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.092658] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.092715] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.092772] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.092829] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.092887] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.092943] (turtle_brick) StdoutLine: {'line': b'21 errors\n'}
[1.093001] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.093074] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.093133] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 224 code styl...\n'}
[1.093191] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.093248] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.40s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.093306] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.093378] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.093436] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.093492] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.093548] (turtle_brick) StderrLine: {'line': b'\n'}
[1.093604] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.093661] (turtle_brick) CommandEnded: {'returncode': 1}
[1.093917] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.093941] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.094327] (-) EventReactorShutdown: {}
