[0.000000] (-) TimerEvent: {}
[0.001822] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.002549] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.002616] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.013675] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.100007] (-) TimerEvent: {}
[0.200392] (-) TimerEvent: {}
[0.292946] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/home/alyssa/homework2-alyssa225/src/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '1023', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install:/home/alyssa/homework2-alyssa225/src/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/8bc3aec7_ddb6_470b_8e36_0fa4cd3265dc', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.3813', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/src/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/src/install/turtle_brick:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/src/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/src/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface:/home/alyssa/homework2-alyssa225/src/install/turtle_brick_interfaces', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.300485] (-) TimerEvent: {}
[0.316288] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/home/alyssa/homework2-alyssa225/src/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '1023'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install:/home/alyssa/homework2-alyssa225/src/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/8bc3aec7_ddb6_470b_8e36_0fa4cd3265dc'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.3813'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/src/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/src/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/src/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/src/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface:/home/alyssa/homework2-alyssa225/src/install/turtle_brick_interfaces')]), 'shell': False}
[0.324400] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.324776] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.325120] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.325318] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.325445] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.325649] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221019-0125 - Experimental\n'}
[0.325893] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.326055] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.326258] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.326375] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.326447] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.326527] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.326595] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.326717] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.326830] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.326902] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.326969] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.327035] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.327100] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.327172] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.390877] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.391107] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.400564] (-) TimerEvent: {}
[0.473608] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.473752] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.473824] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.473984] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.485279] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.485549] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.493583] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.17 sec\n'}
[0.493867] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.494083] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.494163] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.494234] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.494310] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.500660] (-) TimerEvent: {}
[0.558285] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.558491] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.600746] (-) TimerEvent: {}
[0.649021] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.649267] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.658224] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.658475] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.658633] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.700830] (-) TimerEvent: {}
[0.743622] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.743895] (turtle_brick) StdoutLine: {'line': b'collected 3 items                                                              \x1b[0m\n'}
[0.744138] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.751853] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 33%]\x1b[0m\n'}
[0.800924] (-) TimerEvent: {}
[0.901296] (-) TimerEvent: {}
[0.941447] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.941790] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.942021] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.953517] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.953881] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.962606] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.47 sec\n'}
[0.962979] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.963122] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.963251] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.963375] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.963499] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.17 sec*proc (1 test)\n'}
[0.963634] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.64 sec*proc (2 tests)\n'}
[0.963760] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.47 sec*proc (1 test)\n'}
[0.963884] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.964016] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.64 sec\n'}
[0.964125] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.964233] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.964341] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.970549] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 66%]\x1b[0m\n'}
[0.983147] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.983345] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.983493] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.985197] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.985742] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.985796] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[1.001381] (-) TimerEvent: {}
[1.049637] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[1.049989] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050099] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[1.050175] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[1.050247] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[1.098885] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[1.099340] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 198 code style errors / warnings:\x1b[0m\n'}
[1.099661] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:3:1: F401 'setuptools.find_packages' imported but unused\x1b[0m\n"}
[1.099975] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:14:100: E501 line too long (141 > 99 characters)\x1b[0m\n'}
[1.100483] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:18:43: E231 missing whitespace after ','\x1b[0m\n"}
[1.100913] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:24:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.101393] (-) TimerEvent: {}
[1.101928] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:18:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[1.106487] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:22:1: F401 'math.pi' imported but unused\x1b[0m\n"}
[1.106697] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:23:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[1.106860] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:24:42: W291 trailing whitespace\x1b[0m\n'}
[1.107027] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:26:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\x1b[0m\n"}
[1.107168] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:27:1: F401 'math' imported but unused\x1b[0m\n"}
[1.107310] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:29:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.107457] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:32:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.107609] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:39:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.107752] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:45:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.107903] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:46:33: W291 trailing whitespace\x1b[0m\n'}
[1.108063] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:51:32: E231 missing whitespace after ','\x1b[0m\n"}
[1.108204] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:52:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.108357] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:59:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.108495] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:68:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.108634] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:69:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.108772] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:47: E231 missing whitespace after ','\x1b[0m\n"}
[1.108906] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.109053] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:46: E231 missing whitespace after ','\x1b[0m\n"}
[1.109178] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:53: E231 missing whitespace after ','\x1b[0m\n"}
[1.109302] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.109426] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:64: E231 missing whitespace after ','\x1b[0m\n"}
[1.109555] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:81:9: F841 local variable 'count' is assigned to but never used\x1b[0m\n"}
[1.109679] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.109804] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:101:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.109944] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:195:9: E303 too many blank lines (2)\x1b[0m\n'}
[1.110072] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:195:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.110193] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:198:26: W291 trailing whitespace\x1b[0m\n'}
[1.110313] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:206:37: E231 missing whitespace after ','\x1b[0m\n"}
[1.110695] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:212:56: W291 trailing whitespace\x1b[0m\n'}
[1.110823] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:217:36: E231 missing whitespace after ','\x1b[0m\n"}
[1.110949] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:222:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.111076] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:224:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.111201] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:225:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.111325] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:231:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.111449] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:233:63: W291 trailing whitespace\x1b[0m\n'}
[1.111571] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:234:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.111695] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:236:9: E303 too many blank lines (2)\x1b[0m\n'}
[1.111819] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.111940] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:236:30: W291 trailing whitespace\x1b[0m\n'}
[1.112070] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:241:42: E225 missing whitespace around operator\x1b[0m\n'}
[1.112194] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:242:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.112318] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:242:66: E262 inline comment should start with '# '\x1b[0m\n"}
[1.112448] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:242:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[1.112573] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:243:36: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.112698] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:243:37: E262 inline comment should start with '# '\x1b[0m\n"}
[1.112834] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:243:75: W291 trailing whitespace\x1b[0m\n'}
[1.112955] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:244:35: W291 trailing whitespace\x1b[0m\n'}
[1.113076] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:248:13: E265 block comment should start with '# '\x1b[0m\n"}
[1.113196] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:249:13: E265 block comment should start with '# '\x1b[0m\n"}
[1.113318] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:250:13: E265 block comment should start with '# '\x1b[0m\n"}
[1.113439] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:250:42: W291 trailing whitespace\x1b[0m\n'}
[1.113560] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:255:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.113679] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:9: E303 too many blank lines (2)\x1b[0m\n'}
[1.113800] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:266:9: E225 missing whitespace around operator\x1b[0m\n'}
[1.113935] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:268:19: W291 trailing whitespace\x1b[0m\n'}
[1.114070] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:269:1: W391 blank line at end of file\x1b[0m\n'}
[1.114193] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:5:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[1.114310] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:5:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[1.114474] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:34: W291 trailing whitespace\x1b[0m\n'}
[1.114656] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: F401 'turtlesim.msg.Pose' imported but unused\x1b[0m\n"}
[1.114823] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:15:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[1.114974] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:15:42: W291 trailing whitespace\x1b[0m\n'}
[1.115107] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:45: W291 trailing whitespace\x1b[0m\n'}
[1.115237] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:17:12: W291 trailing whitespace\x1b[0m\n'}
[1.115372] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.115506] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:19: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.115640] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:19: E262 inline comment should start with '# '\x1b[0m\n"}
[1.115770] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.115899] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:23:5: E265 block comment should start with '# '\x1b[0m\n"}
[1.116038] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:5: E265 block comment should start with '# '\x1b[0m\n"}
[1.116196] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:26:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.116322] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:27:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.116461] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:37:24: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.116599] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:37:26: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.116723] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:37:36: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.116846] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:37:38: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.116983] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:37:46: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.117106] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:37:48: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.117226] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:37:56: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.117343] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:37:58: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.117461] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:38:17: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[1.117577] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:38:24: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.117694] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:38:26: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.117812] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:38:36: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.117964] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:38:38: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.118105] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:38:45: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.118251] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:38:47: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.118398] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:38:54: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.118545] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:38:56: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.118690] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.118831] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.119016] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:33: W291 trailing whitespace\x1b[0m\n'}
[1.119149] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:51:32: E231 missing whitespace after ','\x1b[0m\n"}
[1.119282] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:52:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.119411] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:65: E231 missing whitespace after ','\x1b[0m\n"}
[1.119538] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[1.119676] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.119806] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:62: E231 missing whitespace after ','\x1b[0m\n"}
[1.119936] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:64:51: E231 missing whitespace after ','\x1b[0m\n"}
[1.120068] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:64:62: E231 missing whitespace after ','\x1b[0m\n"}
[1.120187] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:66:61: E231 missing whitespace after ','\x1b[0m\n"}
[1.120309] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:66:74: E231 missing whitespace after ','\x1b[0m\n"}
[1.120430] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:66:93: E231 missing whitespace after ','\x1b[0m\n"}
[1.120550] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:54: E231 missing whitespace after ','\x1b[0m\n"}
[1.120670] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:61: E231 missing whitespace after ','\x1b[0m\n"}
[1.120792] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:80: E231 missing whitespace after ','\x1b[0m\n"}
[1.120912] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:69:53: W291 trailing whitespace\x1b[0m\n'}
[1.121033] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.121162] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:82:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.121291] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:82:19: W291 trailing whitespace\x1b[0m\n'}
[1.121423] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:83:28: W291 trailing whitespace\x1b[0m\n'}
[1.121557] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:100:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.121683] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:110:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.121807] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.122075] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:112:83: E231 missing whitespace after ','\x1b[0m\n"}
[1.122217] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:112:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[1.122356] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:112:103: E231 missing whitespace after ','\x1b[0m\n"}
[1.122490] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:112:127: E202 whitespace before ')'\x1b[0m\n"}
[1.122623] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.122756] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:88: E202 whitespace before ')'\x1b[0m\n"}
[1.122889] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:126:5: E303 too many blank lines (2)\x1b[0m\n'}
[1.123027] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:130:46: E231 missing whitespace after ','\x1b[0m\n"}
[1.123149] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:130:58: E231 missing whitespace after ','\x1b[0m\n"}
[1.123284] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:68: W291 trailing whitespace\x1b[0m\n'}
[1.123415] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:133:68: W291 trailing whitespace\x1b[0m\n'}
[1.123541] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:134:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.123663] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:140:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.123788] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:141:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.123914] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:42: W291 trailing whitespace\x1b[0m\n'}
[1.124049] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:143:38: W291 trailing whitespace\x1b[0m\n'}
[1.124169] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:145:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.124288] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:145:22: W291 trailing whitespace\x1b[0m\n'}
[1.124409] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:146:56: W291 trailing whitespace\x1b[0m\n'}
[1.124541] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.124664] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:170:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.124784] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:1: E303 too many blank lines (4)\x1b[0m\n'}
[1.124905] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:16: E225 missing whitespace around operator\x1b[0m\n'}
[1.125027] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:176:19: W291 trailing whitespace\x1b[0m\n'}
[1.125150] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:1: W391 blank line at end of file\x1b[0m\n'}
[1.125271] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[1.125393] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:18:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[1.125515] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:19:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[1.125638] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:20:1: F401 'math.pi' imported but unused\x1b[0m\n"}
[1.125758] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:21:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[1.125898] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:23:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.126023] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:24:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.126130] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.126246] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:26:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.126351] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:27:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.126475] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.126608] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:40:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.126727] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:41:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.126843] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:43:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.126977] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:5: E265 block comment should start with '# '\x1b[0m\n"}
[1.127099] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:42: W291 trailing whitespace\x1b[0m\n'}
[1.127222] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.127345] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:100: E501 line too long (105 > 99 characters)\x1b[0m\n'}
[1.127467] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:46:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.127593] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:47:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.127737] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:48:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.127864] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:49:5: E265 block comment should start with '# '\x1b[0m\n"}
[1.127999] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:49:19: W291 trailing whitespace\x1b[0m\n'}
[1.128118] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: W291 trailing whitespace\x1b[0m\n'}
[1.128241] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:53:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.128365] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:21: W292 no newline at end of file\x1b[0m\n'}
[1.128486] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[1.128607] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[1.128729] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[1.128852] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:11:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.128973] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:22: E225 missing whitespace around operator\x1b[0m\n'}
[1.129093] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:14:51: E225 missing whitespace around operator\x1b[0m\n'}
[1.129214] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.129350] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:16:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[1.129474] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:18:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[1.129595] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:18:105: E231 missing whitespace after ','\x1b[0m\n"}
[1.129722] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:19:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[1.129854] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:19:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.130001] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:19:92: E262 inline comment should start with '# '\x1b[0m\n"}
[1.130136] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:22:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[1.130268] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:36:89: E231 missing whitespace after ','\x1b[0m\n"}
[1.130396] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:36:96: E231 missing whitespace after ','\x1b[0m\n"}
[1.130526] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:43:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.130656] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:49:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.130791] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:68:7: W292 no newline at end of file\x1b[0m\n'}
[1.130921] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[1.131052] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[1.131184] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[1.131315] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[1.131443] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[1.131572] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[1.131703] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[1.131833] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.131971] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:44:7: W292 no newline at end of file\x1b[0m\n'}
[1.132082] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.132198] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.132320] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.132436] (turtle_brick) StdoutLine: {'line': b"./setup.py:3:1: F401 'setuptools.find_packages' imported but unused\n"}
[1.132563] (turtle_brick) StdoutLine: {'line': b'from setuptools import setup, find_packages\n'}
[1.132684] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.132804] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.132937] (turtle_brick) StdoutLine: {'line': b'./setup.py:14:100: E501 line too long (141 > 99 characters)\n'}
[1.133063] (turtle_brick) StdoutLine: {'line': b"        ('share/' + package_name, ['package.xml', 'launch/show_turtle.launch.py', 'config/turtle_urdf.rviz', 'launch/run_turtle.launch.py']),\n"}
[1.133190] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.133330] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.133457] (turtle_brick) StdoutLine: {'line': b"./setup.py:18:43: E231 missing whitespace after ','\n"}
[1.133587] (turtle_brick) StdoutLine: {'line': b"    install_requires=['setuptools', 'urdf','rviz'],\n"}
[1.133731] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.133880] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.134071] (turtle_brick) StdoutLine: {'line': b"./setup.py:24:28: E231 missing whitespace after ','\n"}
[1.134256] (turtle_brick) StdoutLine: {'line': b"    tests_require=['pytest','ament_lint_auto'],\n"}
[1.134462] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.134624] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.134780] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:18:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.134954] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.135100] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.135243] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.135384] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:22:1: F401 'math.pi' imported but unused\n"}
[1.135528] (turtle_brick) StdoutLine: {'line': b'from math import pi\n'}
[1.135671] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.135809] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.135949] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:23:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.136093] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.136222] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.136350] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.136480] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:24:42: W291 trailing whitespace\n'}
[1.136606] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.136733] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.136878] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.137021] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:26:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\n"}
[1.137149] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import MarkerArray\n'}
[1.137273] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.137398] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.137522] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:27:1: F401 'math' imported but unused\n"}
[1.137649] (turtle_brick) StdoutLine: {'line': b'import math\n'}
[1.137770] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.137922] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.138060] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:29:1: E265 block comment should start with '# '\n"}
[1.138195] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[1.138330] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.138462] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.138596] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:32:1: E302 expected 2 blank lines, found 1\n'}
[1.138730] (turtle_brick) StdoutLine: {'line': b'class BState(Enum):\n'}
[1.138863] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.139001] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.139125] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:39:1: E302 expected 2 blank lines, found 1\n'}
[1.139250] (turtle_brick) StdoutLine: {'line': b'class Arena(Node):\n'}
[1.139374] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.139496] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.139619] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:45:9: E265 block comment should start with '# '\n"}
[1.139743] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.139867] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.140000] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.140120] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:46:33: W291 trailing whitespace\n'}
[1.140260] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.140382] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.140501] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.140619] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:51:32: E231 missing whitespace after ','\n"}
[1.140743] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',0.0),\n"}
[1.140862] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.140995] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.141117] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:52:27: E231 missing whitespace after ','\n"}
[1.141242] (turtle_brick) StdoutLine: {'line': b"                ('gravity',0.0)\n"}
[1.141366] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.141489] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.141609] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:59:9: E265 block comment should start with '# '\n"}
[1.141732] (turtle_brick) StdoutLine: {'line': b'        #setting state of brick\n'}
[1.141865] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.142007] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.142116] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:68:1: W293 blank line contains whitespace\n'}
[1.142243] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.142378] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.142538] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.142645] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:69:9: E265 block comment should start with '# '\n"}
[1.142755] (turtle_brick) StdoutLine: {'line': b'        #initialize services\n'}
[1.142887] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.143041] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.143156] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:47: E231 missing whitespace after ','\n"}
[1.143271] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"place",self.place_callback)\n'}
[1.143386] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[1.143504] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.143616] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:55: E231 missing whitespace after ','\n"}
[1.143732] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"place",self.place_callback)\n'}
[1.143848] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.143965] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.144077] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:46: E231 missing whitespace after ','\n"}
[1.144198] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"drop",self.drop_callback)\n'}
[1.144307] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.144423] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.144527] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:53: E231 missing whitespace after ','\n"}
[1.144644] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"drop",self.drop_callback)\n'}
[1.144768] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.144887] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.145060] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:55: E231 missing whitespace after ','\n"}
[1.145194] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'marker',10)\n"}
[1.145332] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.145463] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.145591] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:64: E231 missing whitespace after ','\n"}
[1.145725] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'marker',10)\n"}
[1.145883] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.146033] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.146144] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:81:9: F841 local variable 'count' is assigned to but never used\n"}
[1.146257] (turtle_brick) StdoutLine: {'line': b'        count = 0\n'}
[1.146379] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.146503] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.146616] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:9: E265 block comment should start with '# '\n"}
[1.146732] (turtle_brick) StdoutLine: {'line': b'        #creating brick marker\n'}
[1.146845] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.146960] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.147071] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:101:9: E265 block comment should start with '# '\n"}
[1.147184] (turtle_brick) StdoutLine: {'line': b'        #creating wall markers\n'}
[1.147298] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.147427] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.147550] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:195:9: E303 too many blank lines (2)\n'}
[1.147664] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[1.147778] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.147890] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.148022] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:195:9: E265 block comment should start with '# '\n"}
[1.148151] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[1.148278] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.148404] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.148526] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:198:26: W291 trailing whitespace\n'}
[1.148652] (turtle_brick) StdoutLine: {'line': b'        self.brickz = 0.0 \n'}
[1.148784] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[1.148913] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.149042] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:206:37: E231 missing whitespace after ','\n"}
[1.149168] (turtle_brick) StdoutLine: {'line': b'    def place_callback(self, request,response):\n'}
[1.149283] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.149414] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.149532] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:212:56: W291 trailing whitespace\n'}
[1.149644] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz \n'}
[1.149758] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.149882] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.150020] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:217:36: E231 missing whitespace after ','\n"}
[1.150139] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self, request,response):\n'}
[1.150258] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[1.150377] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.150497] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:222:9: E265 block comment should start with '# '\n"}
[1.150617] (turtle_brick) StdoutLine: {'line': b'        #creating the brick marker\n'}
[1.150735] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.150857] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.150999] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:224:1: W293 blank line contains whitespace\n'}
[1.151149] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.151294] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.151443] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.151591] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:225:9: E265 block comment should start with '# '\n"}
[1.151755] (turtle_brick) StdoutLine: {'line': b'        #publishing wall markers\n'}
[1.151900] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.152056] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.152187] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:231:9: E265 block comment should start with '# '\n"}
[1.152317] (turtle_brick) StdoutLine: {'line': b'        #update transform\n'}
[1.152448] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.152580] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.152712] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:233:63: W291 trailing whitespace\n'}
[1.152847] (turtle_brick) StdoutLine: {'line': b'        self.world_brick.transform.translation.y = self.bricky \n'}
[1.152989] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.153111] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.153235] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:234:1: W293 blank line contains whitespace\n'}
[1.153358] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.153479] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.153602] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.153765] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:236:9: E303 too many blank lines (2)\n'}
[1.153949] (turtle_brick) StdoutLine: {'line': b'        #updating brick frame \n'}
[1.154115] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.154254] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.154382] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\n"}
[1.154512] (turtle_brick) StdoutLine: {'line': b'        #updating brick frame \n'}
[1.154639] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.154761] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.154880] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:236:30: W291 trailing whitespace\n'}
[1.155017] (turtle_brick) StdoutLine: {'line': b'        #updating brick frame \n'}
[1.155143] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[1.155268] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.155390] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:241:42: E225 missing whitespace around operator\n'}
[1.155515] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[1.155641] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.155767] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.155903] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:242:65: E261 at least two spaces before inline comment\n'}
[1.156029] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.156159] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.156286] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.156413] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:242:66: E262 inline comment should start with '# '\n"}
[1.156536] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.156665] (turtle_brick) StdoutLine: {'line': b'                                                                 ^\n'}
[1.156795] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.156923] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:242:100: E501 line too long (100 > 99 characters)\n'}
[1.157049] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.157178] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.157307] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.157433] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:243:36: E261 at least two spaces before inline comment\n'}
[1.157579] (turtle_brick) StdoutLine: {'line': b'            if self.brickz <= 0.05: #change the 0 to height of platform or \n'}
[1.157708] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[1.157847] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.157996] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:243:37: E262 inline comment should start with '# '\n"}
[1.158135] (turtle_brick) StdoutLine: {'line': b'            if self.brickz <= 0.05: #change the 0 to height of platform or \n'}
[1.158270] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.158409] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.158546] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:243:75: W291 trailing whitespace\n'}
[1.158683] (turtle_brick) StdoutLine: {'line': b'            if self.brickz <= 0.05: #change the 0 to height of platform or \n'}
[1.158818] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[1.158955] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.159102] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:244:35: W291 trailing whitespace\n'}
[1.159229] (turtle_brick) StdoutLine: {'line': b'                self.brickz = 0.05 \n'}
[1.159354] (turtle_brick) StdoutLine: {'line': b'                                  ^\n'}
[1.159483] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.159609] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:248:13: E265 block comment should start with '# '\n"}
[1.159738] (turtle_brick) StdoutLine: {'line': b'            #self.world_brick.transform.translation.x = platform.x\n'}
[1.159861] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.160002] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.160119] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:249:13: E265 block comment should start with '# '\n"}
[1.160251] (turtle_brick) StdoutLine: {'line': b'            #self.world_brick.transform.translation.y = platform.y\n'}
[1.160367] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.160482] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.160600] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:250:13: E265 block comment should start with '# '\n"}
[1.160720] (turtle_brick) StdoutLine: {'line': b'            #if tilt subscriber not = 0.0 \n'}
[1.160838] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.160963] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.161074] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:250:42: W291 trailing whitespace\n'}
[1.161194] (turtle_brick) StdoutLine: {'line': b'            #if tilt subscriber not = 0.0 \n'}
[1.161307] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.161417] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.161529] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:255:1: W293 blank line contains whitespace\n'}
[1.161643] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.161756] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.161884] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.162002] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:256:9: E303 too many blank lines (2)\n'}
[1.162117] (turtle_brick) StdoutLine: {'line': b'        self.broadcaster.sendTransform(self.world_brick)\n'}
[1.162253] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.162366] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.162480] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:266:9: E225 missing whitespace around operator\n'}
[1.162600] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[1.162716] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.162833] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.162963] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:268:19: W291 trailing whitespace\n'}
[1.163086] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.163213] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.163349] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.163470] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:269:1: W391 blank line at end of file\n'}
[1.163592] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.163716] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.163840] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.163970] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:5:1: F401 'tokenize.Double' imported but unused\n"}
[1.164100] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[1.164214] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.164329] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.164440] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:5:1: F401 'tokenize.String' imported but unused\n"}
[1.164553] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[1.164693] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.164807] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.164937] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:34: W291 trailing whitespace\n'}
[1.165056] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[1.165175] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.165295] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.165423] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: F401 'turtlesim.msg.Pose' imported but unused\n"}
[1.165535] (turtle_brick) StdoutLine: {'line': b'from turtlesim.msg import Pose\n'}
[1.165664] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.165781] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.165905] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:15:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[1.166024] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.166144] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.166265] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.166379] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:15:42: W291 trailing whitespace\n'}
[1.166491] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.166609] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.166727] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.166842] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:45: W291 trailing whitespace\n'}
[1.166971] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[1.167089] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.167208] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.167328] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17:12: W291 trailing whitespace\n'}
[1.167447] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.167572] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.167692] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.167812] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:18:1: E265 block comment should start with '# '\n"}
[1.167955] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[1.168117] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.168280] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.168441] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:19: E261 at least two spaces before inline comment\n'}
[1.168602] (turtle_brick) StdoutLine: {'line': b'def turtle_odom():#, child_id, x,y,z,):\n'}
[1.168759] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.168916] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.169075] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:21:19: E262 inline comment should start with '# '\n"}
[1.169206] (turtle_brick) StdoutLine: {'line': b'def turtle_odom():#, child_id, x,y,z,):\n'}
[1.169337] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.169470] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.169618] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:1: W293 blank line contains whitespace\n'}
[1.169751] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.169890] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.170034] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.170158] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:23:5: E265 block comment should start with '# '\n"}
[1.170283] (turtle_brick) StdoutLine: {'line': b'    ##and how to write the return\n'}
[1.170405] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.170525] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.170649] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:24:5: E265 block comment should start with '# '\n"}
[1.170774] (turtle_brick) StdoutLine: {'line': b'    #returns the joint state of the robot\n'}
[1.170897] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.171036] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.171168] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:26:1: W293 blank line contains whitespace\n'}
[1.171293] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.171416] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.171539] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.171665] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:27:1: E302 expected 2 blank lines, found 1\n'}
[1.171789] (turtle_brick) StdoutLine: {'line': b'def turtle_twist(xdot, ydot, omega):\n'}
[1.171910] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.172032] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.172156] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:37:24: E251 unexpected spaces around keyword / parameter equals\n'}
[1.172283] (turtle_brick) StdoutLine: {'line': b'    return Twist(linear = Vector3(x = xdot, y = ydot, z = 0.0),\n'}
[1.172406] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.172530] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.172654] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:37:26: E251 unexpected spaces around keyword / parameter equals\n'}
[1.172779] (turtle_brick) StdoutLine: {'line': b'    return Twist(linear = Vector3(x = xdot, y = ydot, z = 0.0),\n'}
[1.172900] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[1.173037] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.173161] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:37:36: E251 unexpected spaces around keyword / parameter equals\n'}
[1.173355] (turtle_brick) StdoutLine: {'line': b'    return Twist(linear = Vector3(x = xdot, y = ydot, z = 0.0),\n'}
[1.173596] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[1.173736] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.173880] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:37:38: E251 unexpected spaces around keyword / parameter equals\n'}
[1.174034] (turtle_brick) StdoutLine: {'line': b'    return Twist(linear = Vector3(x = xdot, y = ydot, z = 0.0),\n'}
[1.174168] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.174296] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.174425] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:37:46: E251 unexpected spaces around keyword / parameter equals\n'}
[1.174557] (turtle_brick) StdoutLine: {'line': b'    return Twist(linear = Vector3(x = xdot, y = ydot, z = 0.0),\n'}
[1.174690] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.174819] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.174946] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:37:48: E251 unexpected spaces around keyword / parameter equals\n'}
[1.175084] (turtle_brick) StdoutLine: {'line': b'    return Twist(linear = Vector3(x = xdot, y = ydot, z = 0.0),\n'}
[1.175205] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.175325] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.175443] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:37:56: E251 unexpected spaces around keyword / parameter equals\n'}
[1.175577] (turtle_brick) StdoutLine: {'line': b'    return Twist(linear = Vector3(x = xdot, y = ydot, z = 0.0),\n'}
[1.175698] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.175820] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.175938] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:37:58: E251 unexpected spaces around keyword / parameter equals\n'}
[1.176070] (turtle_brick) StdoutLine: {'line': b'    return Twist(linear = Vector3(x = xdot, y = ydot, z = 0.0),\n'}
[1.176201] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.176320] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.176436] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:38:17: E128 continuation line under-indented for visual indent\n'}
[1.176552] (turtle_brick) StdoutLine: {'line': b'                angular = Vector3(x = 0.0, y = 0.0, z = omega))\n'}
[1.176669] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.176787] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.176901] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:38:24: E251 unexpected spaces around keyword / parameter equals\n'}
[1.177015] (turtle_brick) StdoutLine: {'line': b'                angular = Vector3(x = 0.0, y = 0.0, z = omega))\n'}
[1.177131] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.177251] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.177378] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:38:26: E251 unexpected spaces around keyword / parameter equals\n'}
[1.177504] (turtle_brick) StdoutLine: {'line': b'                angular = Vector3(x = 0.0, y = 0.0, z = omega))\n'}
[1.177618] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[1.177753] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.177882] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:38:36: E251 unexpected spaces around keyword / parameter equals\n'}
[1.178003] (turtle_brick) StdoutLine: {'line': b'                angular = Vector3(x = 0.0, y = 0.0, z = omega))\n'}
[1.178118] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[1.178235] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.178354] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:38:38: E251 unexpected spaces around keyword / parameter equals\n'}
[1.178473] (turtle_brick) StdoutLine: {'line': b'                angular = Vector3(x = 0.0, y = 0.0, z = omega))\n'}
[1.178587] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.178703] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.178819] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:38:45: E251 unexpected spaces around keyword / parameter equals\n'}
[1.178951] (turtle_brick) StdoutLine: {'line': b'                angular = Vector3(x = 0.0, y = 0.0, z = omega))\n'}
[1.179075] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.179201] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.179327] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:38:47: E251 unexpected spaces around keyword / parameter equals\n'}
[1.179456] (turtle_brick) StdoutLine: {'line': b'                angular = Vector3(x = 0.0, y = 0.0, z = omega))\n'}
[1.179582] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[1.179711] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.179837] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:38:54: E251 unexpected spaces around keyword / parameter equals\n'}
[1.179963] (turtle_brick) StdoutLine: {'line': b'                angular = Vector3(x = 0.0, y = 0.0, z = omega))\n'}
[1.180088] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.180205] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.180321] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:38:56: E251 unexpected spaces around keyword / parameter equals\n'}
[1.180446] (turtle_brick) StdoutLine: {'line': b'                angular = Vector3(x = 0.0, y = 0.0, z = omega))\n'}
[1.180556] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.180668] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.180786] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:1: E302 expected 2 blank lines, found 1\n'}
[1.180902] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[1.181016] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.181131] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.181248] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:9: E265 block comment should start with '# '\n"}
[1.181363] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.181474] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.181589] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.181705] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:46:33: W291 trailing whitespace\n'}
[1.181823] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.181962] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.182082] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.182200] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:51:32: E231 missing whitespace after ','\n"}
[1.182329] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',0.0),\n"}
[1.182448] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.182566] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.182685] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:52:27: E231 missing whitespace after ','\n"}
[1.182807] (turtle_brick) StdoutLine: {'line': b"                ('gravity',0.0)\n"}
[1.182945] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.183064] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.183199] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:65: E231 missing whitespace after ','\n"}
[1.183335] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.183466] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.183594] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.183722] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[1.183854] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.184006] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.184152] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.184293] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:63:55: E231 missing whitespace after ','\n"}
[1.184439] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'odom',10)\n"}
[1.184583] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.184720] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.184859] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:63:62: E231 missing whitespace after ','\n"}
[1.185019] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'odom',10)\n"}
[1.185148] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.185277] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.185402] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:64:51: E231 missing whitespace after ','\n"}
[1.185530] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.185658] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.185805] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.185958] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:64:62: E231 missing whitespace after ','\n"}
[1.186083] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.186209] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.186332] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.186454] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:66:61: E231 missing whitespace after ','\n"}
[1.186574] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.186702] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.186826] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.186962] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:66:74: E231 missing whitespace after ','\n"}
[1.187091] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.187221] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[1.187350] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.187479] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:66:93: E231 missing whitespace after ','\n"}
[1.187605] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.187730] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[1.187859] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.188000] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:67:54: E231 missing whitespace after ','\n"}
[1.188122] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'tilt',self.tilt_callback,10)\n"}
[1.188247] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.188391] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.188516] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:67:61: E231 missing whitespace after ','\n"}
[1.188640] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'tilt',self.tilt_callback,10)\n"}
[1.188761] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.188884] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.189008] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:67:80: E231 missing whitespace after ','\n"}
[1.189133] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'tilt',self.tilt_callback,10)\n"}
[1.189255] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.189378] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.189504] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:69:53: W291 trailing whitespace\n'}
[1.189628] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[1.189750] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.189882] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.190009] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:73:1: W293 blank line contains whitespace\n'}
[1.190134] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.190258] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.190380] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.190502] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:82:9: E265 block comment should start with '# '\n"}
[1.190626] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.190764] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.190886] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.191032] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:82:19: W291 trailing whitespace\n'}
[1.191170] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.191307] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.191443] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.191578] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:83:28: W291 trailing whitespace\n'}
[1.191727] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[1.191867] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.192015] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.192136] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:100:9: E265 block comment should start with '# '\n"}
[1.192261] (turtle_brick) StdoutLine: {'line': b'        #joint state publisher\n'}
[1.192387] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.192511] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.192632] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:110:1: W293 blank line contains whitespace\n'}
[1.192755] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.192878] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.193013] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.193189] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:27: E231 missing whitespace after ','\n"}
[1.193377] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[1.193515] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.193649] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.193781] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:112:83: E231 missing whitespace after ','\n"}
[1.193928] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('message recieved: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.194069] (turtle_brick) StdoutLine: {'line': b'                                                                                  ^\n'}
[1.194191] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.194312] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:112:100: E501 line too long (128 > 99 characters)\n'}
[1.194432] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('message recieved: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.194555] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.194677] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.194799] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:112:103: E231 missing whitespace after ','\n"}
[1.194921] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('message recieved: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.195053] (turtle_brick) StdoutLine: {'line': b'                                                                                                      ^\n'}
[1.195170] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.195285] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:112:127: E202 whitespace before ')'\n"}
[1.195404] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('message recieved: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.195530] (turtle_brick) StdoutLine: {'line': b'                                                                                                                              ^\n'}
[1.195650] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.195784] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[1.195933] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.196096] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.196259] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.196407] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:88: E202 whitespace before ')'\n"}
[1.196562] (turtle_brick) StdoutLine: {'line': b'        self.get_logger().info(\'message recieved: "%s %s"\' % (msg.alpha, type(msg.alpha )))\n'}
[1.196709] (turtle_brick) StdoutLine: {'line': b'                                                                                       ^\n'}
[1.196862] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.197017] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:126:5: E303 too many blank lines (2)\n'}
[1.197151] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):\n'}
[1.197274] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.197393] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.197511] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:130:46: E231 missing whitespace after ','\n"}
[1.197646] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.197779] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.197909] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.198029] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:130:58: E231 missing whitespace after ','\n"}
[1.198150] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.198271] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.198390] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.198509] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:68: W291 trailing whitespace\n'}
[1.198660] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.199112] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.199663] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.200003] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:133:68: W291 trailing whitespace\n'}
[1.200444] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.200581] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.200710] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.200842] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:134:1: W293 blank line contains whitespace\n'}
[1.200990] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.201113] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.201258] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.201368] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:140:9: E265 block comment should start with '# '\n"}
[1.201528] (-) TimerEvent: {}
[1.201666] (turtle_brick) StdoutLine: {'line': b'        #publisher and broadcaster\n'}
[1.201803] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.201982] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.202113] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:141:1: W293 blank line contains whitespace\n'}
[1.202256] (turtle_brick) StdoutLine: {'line': b'               \n'}
[1.202380] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.202507] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.202673] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:142:42: W291 trailing whitespace\n'}
[1.202840] (turtle_brick) StdoutLine: {'line': b'        # self.odom_pub.publish(odometry)  \n'}
[1.202980] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.203117] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.203254] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:143:38: W291 trailing whitespace\n'}
[1.203401] (turtle_brick) StdoutLine: {'line': b'        # self.vel_pub.publish(twist)  \n'}
[1.203540] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.203682] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.203818] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:145:9: E265 block comment should start with '# '\n"}
[1.203970] (turtle_brick) StdoutLine: {'line': b'        #broadcasting \n'}
[1.204091] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.204211] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.204330] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:145:22: W291 trailing whitespace\n'}
[1.204451] (turtle_brick) StdoutLine: {'line': b'        #broadcasting \n'}
[1.204580] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.204691] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.204800] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:146:56: W291 trailing whitespace\n'}
[1.204922] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.205036] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.205147] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.205260] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:1: W293 blank line contains whitespace\n'}
[1.205374] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.205485] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.205598] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.205710] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:170:1: W293 blank line contains whitespace\n'}
[1.205824] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.205976] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.206087] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.206196] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:172:1: E303 too many blank lines (4)\n'}
[1.206305] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.206415] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.206525] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.206632] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:16: E225 missing whitespace around operator\n'}
[1.206727] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.206796] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.206864] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.206932] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:176:19: W291 trailing whitespace\n'}
[1.207000] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.207066] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.207133] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.207199] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:1: W391 blank line at end of file\n'}
[1.207265] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.207330] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.207395] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.207460] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:17:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.207526] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.207593] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.207693] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.207793] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.207863] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.207930] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.207997] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.208063] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:19:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.208130] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped\n'}
[1.208196] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.208262] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.208335] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:20:1: F401 'math.pi' imported but unused\n"}
[1.208401] (turtle_brick) StdoutLine: {'line': b'from math import pi\n'}
[1.208466] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.208531] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.208596] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:21:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.208662] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.208728] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.208793] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.208858] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:23:1: E265 block comment should start with '# '\n"}
[1.208924] (turtle_brick) StdoutLine: {'line': b'#states\n'}
[1.208988] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.209053] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.209117] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:24:1: E265 block comment should start with '# '\n"}
[1.209182] (turtle_brick) StdoutLine: {'line': b'#WAIT\n'}
[1.209246] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.209312] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.209376] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:25:1: E265 block comment should start with '# '\n"}
[1.209441] (turtle_brick) StdoutLine: {'line': b'#FAIL\n'}
[1.209508] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.209572] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.209636] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26:1: E265 block comment should start with '# '\n"}
[1.209701] (turtle_brick) StdoutLine: {'line': b'#CATCH\n'}
[1.209767] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.209841] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.209959] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:27:1: E302 expected 2 blank lines, found 1\n'}
[1.210029] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.210097] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.210162] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.210228] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:39:9: E265 block comment should start with '# '\n"}
[1.210294] (turtle_brick) StdoutLine: {'line': b'        #client to place topic and place callback\n'}
[1.210360] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.210425] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.210490] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:40:9: E265 block comment should start with '# '\n"}
[1.210555] (turtle_brick) StdoutLine: {'line': b'        #client to drop topic and drop callback\n'}
[1.210620] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.210685] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.210749] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:41:9: E265 block comment should start with '# '\n"}
[1.210814] (turtle_brick) StdoutLine: {'line': b'        #publish to goal_pose\n'}
[1.210879] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.210943] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.211007] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:43:1: W293 blank line contains whitespace\n'}
[1.211072] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.211138] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.211202] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.211268] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:5: E265 block comment should start with '# '\n"}
[1.211380] (turtle_brick) StdoutLine: {'line': b'    #place callback grabs x,y,z placement \n'}
[1.211492] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.211600] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.211710] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:44:42: W291 trailing whitespace\n'}
[1.211804] (turtle_brick) StdoutLine: {'line': b'    #place callback grabs x,y,z placement \n'}
[1.211874] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.211961] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.212036] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:45:9: E265 block comment should start with '# '\n"}
[1.212121] (turtle_brick) StdoutLine: {'line': b'        #calc time takes robot to move to x,y position from current position in max velocity speed (0.22)\n'}
[1.212212] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.212274] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.212335] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:100: E501 line too long (105 > 99 characters)\n'}
[1.212396] (turtle_brick) StdoutLine: {'line': b'        #calc time takes robot to move to x,y position from current position in max velocity speed (0.22)\n'}
[1.212543] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.212724] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.212816] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:46:9: E265 block comment should start with '# '\n"}
[1.212888] (turtle_brick) StdoutLine: {'line': b'        #calc time it takes for brick to fall from placed height to platform height\n'}
[1.212957] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.213026] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.213093] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:47:9: E265 block comment should start with '# '\n"}
[1.213161] (turtle_brick) StdoutLine: {'line': b'        #if time robot < time fall --> CATCH\n'}
[1.213229] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.213295] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.213362] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:48:9: E265 block comment should start with '# '\n"}
[1.213442] (turtle_brick) StdoutLine: {'line': b'        #if time robot > time fall --> FAIL\n'}
[1.213510] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.213577] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.213643] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:49:5: E265 block comment should start with '# '\n"}
[1.213710] (turtle_brick) StdoutLine: {'line': b'    #drop callback \n'}
[1.213776] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.213857] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.213975] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:49:19: W291 trailing whitespace\n'}
[1.214045] (turtle_brick) StdoutLine: {'line': b'    #drop callback \n'}
[1.214112] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.214179] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.214246] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:51:27: W291 trailing whitespace\n'}
[1.214313] (turtle_brick) StdoutLine: {'line': b'        # if state = catch \n'}
[1.214380] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.214447] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.214513] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:53:1: W293 blank line contains whitespace\n'}
[1.214580] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.214646] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.214712] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.214778] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:64:21: W292 no newline at end of file\n'}
[1.214854] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.214953] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.215022] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.215090] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.215157] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.215223] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.215289] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.215363] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.215430] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.215497] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.215563] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.215631] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.215698] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.215797] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.215908] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:11:1: E302 expected 2 blank lines, found 1\n'}
[1.216017] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.216123] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.216231] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.216348] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:22: E225 missing whitespace around operator\n'}
[1.216468] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.216589] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.216708] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.216827] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:14:51: E225 missing whitespace around operator\n'}
[1.216945] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.217075] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.217183] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.217291] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:1: W293 blank line contains whitespace\n'}
[1.217424] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.217569] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.217695] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.217846] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:16:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.217992] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.218143] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.218269] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.218342] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:18:100: E501 line too long (115 > 99 characters)\n'}
[1.218413] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.218483] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.218552] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.218622] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:18:105: E231 missing whitespace after ','\n"}
[1.218690] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.218759] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.218834] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.218953] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:19:37: E128 continuation line under-indented for visual indent\n'}
[1.219060] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.219177] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.219327] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.219449] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:19:92: E261 at least two spaces before inline comment\n'}
[1.219538] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.219605] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.219674] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.219753] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:19:92: E262 inline comment should start with '# '\n"}
[1.219822] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.219889] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.219954] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.220017] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:22:100: E501 line too long (100 > 99 characters)\n'}
[1.220080] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.220144] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.220207] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.220270] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:36:89: E231 missing whitespace after ','\n"}
[1.220333] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.220412] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.220480] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.220546] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:36:96: E231 missing whitespace after ','\n"}
[1.220611] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.220675] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.220750] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.220818] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:43:56: E231 missing whitespace after ','\n"}
[1.220882] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.220959] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.221021] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.221083] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:49:56: E231 missing whitespace after ','\n"}
[1.221144] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.221207] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.221270] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.221332] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:68:7: W292 no newline at end of file\n'}
[1.221394] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.221457] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.221519] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.221643] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.221764] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.221896] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.222021] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.222139] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.222259] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.222384] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.222501] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.222632] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.222766] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.222902] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.223034] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.223167] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.223301] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.223433] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.223581] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.223696] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.223791] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.223887] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.223982] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.224076] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.224172] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.224267] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.224361] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.224456] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.224551] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.224647] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.224741] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.224850] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:1: W293 blank line contains whitespace\n'}
[1.224957] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.225066] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.225173] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.225280] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:44:7: W292 no newline at end of file\n'}
[1.225389] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.225497] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.225605] (turtle_brick) StdoutLine: {'line': b'2     E128 continuation line under-indented for visual indent\n'}
[1.225713] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.225821] (turtle_brick) StdoutLine: {'line': b'5     E225 missing whitespace around operator\n'}
[1.225972] (turtle_brick) StdoutLine: {'line': b"38    E231 missing whitespace after ','\n"}
[1.226085] (turtle_brick) StdoutLine: {'line': b'16    E251 unexpected spaces around keyword / parameter equals\n'}
[1.226197] (turtle_brick) StdoutLine: {'line': b'4     E261 at least two spaces before inline comment\n'}
[1.226326] (turtle_brick) StdoutLine: {'line': b"4     E262 inline comment should start with '# '\n"}
[1.226441] (turtle_brick) StdoutLine: {'line': b"35    E265 block comment should start with '# '\n"}
[1.226556] (turtle_brick) StdoutLine: {'line': b'6     E302 expected 2 blank lines, found 1\n'}
[1.226671] (turtle_brick) StdoutLine: {'line': b'5     E303 too many blank lines (2)\n'}
[1.226785] (turtle_brick) StdoutLine: {'line': b'6     E501 line too long (115 > 99 characters)\n'}
[1.226904] (turtle_brick) StdoutLine: {'line': b"24    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.227031] (turtle_brick) StdoutLine: {'line': b"2     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.227140] (turtle_brick) StdoutLine: {'line': b'28    W291 trailing whitespace\n'}
[1.227253] (turtle_brick) StdoutLine: {'line': b'3     W292 no newline at end of file\n'}
[1.227362] (turtle_brick) StdoutLine: {'line': b'16    W293 blank line contains whitespace\n'}
[1.227470] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.227614] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.227721] (turtle_brick) StdoutLine: {'line': b'10 files checked\n'}
[1.227872] (turtle_brick) StdoutLine: {'line': b'198 errors\n'}
[1.228003] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.228112] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 123\n"}
[1.228220] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 26\n"}
[1.228329] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 49\n"}
[1.228438] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.228546] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.228662] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.228770] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.228878] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.228987] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.229093] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.229237] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.229347] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.229457] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.229577] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.229692] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.229788] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.229954] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.230078] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.230192] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.230317] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.230420] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.230540] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.230642] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.230743] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.230844] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.230954] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.231067] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.231163] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.231258] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.231354] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.231450] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.231553] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.231649] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:33 in public class `BState`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.231751] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:33 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.231848] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:33 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.231943] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:33 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.232054] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.232149] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.232239] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.232390] (turtle_brick) StderrLine: {'line': b'\n'}
[1.232513] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.232659] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:40 in public class `Arena`: D200: One-line docstring should fit on one line with quotes (found 3)\n'}
[1.232798] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:40 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.232935] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:40 in public class `Arena`: D400: First line should end with a period (not 's')\n"}
[1.233072] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:40 in public class `Arena`: D415: First line should end with a period, question mark, or exclamation point (not 's')\n"}
[1.233209] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.233346] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.233482] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:1 at module level: D200: One-line docstring should fit on one line with quotes (found 4)\n'}
[1.233619] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:1 at module level: D400: First line should end with a period (not 'e')\n"}
[1.233757] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:1 at module level: D415: First line should end with a period, question mark, or exclamation point (not 'e')\n"}
[1.233927] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28 in public function `turtle_twist`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.234065] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28 in public function `turtle_twist`: D213: Multi-line docstring summary should start at the second line\n'}
[1.234222] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:28 in public function `turtle_twist`: D400: First line should end with a period (not 'e')\n"}
[1.234365] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:28 in public function `turtle_twist`: D415: First line should end with a period, question mark, or exclamation point (not 'e')\n"}
[1.234505] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:28 in public function `turtle_twist`: D413: Missing blank line after last section ('Returns')\n"}
[1.234644] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:28 in public function `turtle_twist`: D407: Missing dashed underline after section ('Returns')\n"}
[1.234783] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:28 in public function `turtle_twist`: D406: Section name should end with a newline ('Returns', not 'Returns:')\n"}
[1.234923] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:41 in public class `Turtle_robot`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.235062] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:41 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.235214] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:41 in public class `Turtle_robot`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.235348] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:41 in public class `Turtle_robot`: D213: Multi-line docstring summary should start at the second line\n'}
[1.235482] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:41 in public class `Turtle_robot`: D400: First line should end with a period (not 'e')\n"}
[1.235654] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:41 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not 'e')\n"}
[1.235792] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.235929] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.236095] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.236231] (turtle_brick) StdoutLine: {'line': b'24 errors\n'}
[1.236384] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.236523] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.236670] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 198 code styl...\n'}
[1.236808] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.236964] (turtle_brick) StdoutLine: {'line': b'\x1b[31m=================== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.46s\x1b[0m\x1b[31m ===================\x1b[0m\n'}
[1.237135] (turtle_brick) CommandEnded: {'returncode': 1}
[1.237665] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.237710] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.238227] (-) EventReactorShutdown: {}
