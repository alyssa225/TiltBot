[0.000000] (-) TimerEvent: {}
[0.000152] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000224] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000277] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.011591] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.097966] (-) TimerEvent: {}
[0.198269] (-) TimerEvent: {}
[0.270724] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.284730] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.291991] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.292370] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.292651] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.292879] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.293072] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.293369] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1958 - Experimental\n'}
[0.293575] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.293713] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.293826] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.293901] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.293971] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.294040] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.294125] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.294195] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.294263] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.294331] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.294400] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.294467] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.294552] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.294639] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.298398] (-) TimerEvent: {}
[0.357141] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.357342] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.398486] (-) TimerEvent: {}
[0.423275] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.423520] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.423672] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.423813] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.436345] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.436611] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.446009] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.15 sec\n'}
[0.446412] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.446638] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.446781] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.446872] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.446999] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.498603] (-) TimerEvent: {}
[0.504669] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.505020] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.575599] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.575944] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.583155] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.583419] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.583577] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.598701] (-) TimerEvent: {}
[0.603477] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.603728] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.603871] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.616713] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.616881] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.627221] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.18 sec\n'}
[0.627961] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.628178] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.628327] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.628465] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.628601] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.15 sec*proc (1 test)\n'}
[0.628753] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.33 sec*proc (2 tests)\n'}
[0.628890] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.18 sec*proc (1 test)\n'}
[0.629025] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.629170] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.33 sec\n'}
[0.629295] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.629420] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.629573] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.647306] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.647555] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.647698] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.649171] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.649726] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.649793] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.675617] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.675963] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.676133] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.687303] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.688241] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.698853] (-) TimerEvent: {}
[0.799167] (-) TimerEvent: {}
[0.899560] (-) TimerEvent: {}
[0.921678] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.988785] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.989132] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989251] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.989359] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.989477] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.999685] (-) TimerEvent: {}
[1.027143] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[1.027824] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 118 code style errors / warnings:\x1b[0m\n'}
[1.028254] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:14: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.028618] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:16: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.029911] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:200:20: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.031981] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:200:22: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.032119] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:19: W291 trailing whitespace\x1b[0m\n'}
[1.032287] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[1.032398] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[1.032509] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[1.032619] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[1.032729] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[1.032839] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[1.032948] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[1.033057] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[1.033167] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[1.033277] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.033386] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.033496] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[1.033613] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[1.033723] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.033884] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[1.033995] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[1.034105] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.034214] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.034322] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.034428] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.034519] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.034606] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[1.034772] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[1.034896] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[1.035065] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[1.035282] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.035487] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[1.035617] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.035753] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[1.035881] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[1.036023] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[1.036164] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[1.036304] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[1.036443] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[1.036581] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.036717] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[1.036865] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.037010] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.037136] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.037260] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.037383] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[1.037507] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.037629] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[1.037753] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.037902] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.038025] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[1.038146] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.038267] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[1.038389] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[1.038525] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[1.038647] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[1.038768] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[1.038890] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.039011] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[1.039138] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[1.039260] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.039382] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.039503] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.039623] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[1.039908] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[1.040221] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.040348] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[1.040475] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[1.040602] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[1.040728] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[1.040899] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[1.041040] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[1.041181] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[1.041348] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[1.041485] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.041641] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[1.041969] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[1.042123] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[1.042271] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[1.042417] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[1.042571] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[1.042716] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[1.042852] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.042989] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[1.043126] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[1.043263] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.043399] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[1.043536] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[1.043674] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[1.043814] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[1.043953] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.044102] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[1.044251] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[1.044406] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[1.044560] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[1.044741] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.044876] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.045009] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[1.045167] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[1.045324] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[1.045470] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[1.045615] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[1.045770] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[1.045920] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[1.046065] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[1.046213] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[1.046342] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[1.046463] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.046585] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.046706] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[1.046829] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.046950] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[1.047072] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[1.047243] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[1.047364] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[1.047487] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.047634] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.047862] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[1.048037] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.048249] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.048439] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048624] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:199:14: E251 unexpected spaces around keyword / parameter equals\n'}
[1.048785] (turtle_brick) StdoutLine: {'line': b'def main(args = None):\n'}
[1.048919] (turtle_brick) StdoutLine: {'line': b'             ^\n'}
[1.049033] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049173] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:199:16: E251 unexpected spaces around keyword / parameter equals\n'}
[1.049281] (turtle_brick) StdoutLine: {'line': b'def main(args = None):\n'}
[1.049388] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.049509] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049622] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:200:20: E251 unexpected spaces around keyword / parameter equals\n'}
[1.049743] (turtle_brick) StdoutLine: {'line': b'    rclpy.init(args = args)\n'}
[1.049866] (turtle_brick) StdoutLine: {'line': b'                   ^\n'}
[1.049975] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050081] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:200:22: E251 unexpected spaces around keyword / parameter equals\n'}
[1.050188] (turtle_brick) StdoutLine: {'line': b'    rclpy.init(args = args)\n'}
[1.050295] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.050403] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050511] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:203:19: W291 trailing whitespace\n'}
[1.050619] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.050742] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.050855] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050969] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.051083] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.051205] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.051319] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051431] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.051546] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.051660] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.051786] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051939] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.052084] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.052229] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.052373] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052518] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.052663] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.052826] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.052990] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053151] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.053305] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.053441] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.053576] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053712] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.053872] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.054010] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.054145] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054280] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.054416] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.054552] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.054687] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054823] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.054958] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.055094] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.055239] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055412] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.055553] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.055694] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.055862] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055998] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.056148] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.056283] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.056417] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056552] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[1.056687] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.056823] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.056957] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057092] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[1.057228] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.057364] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.057499] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.057641] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.057787] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.057920] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.058049] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.058178] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.058308] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.058438] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.058566] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.058714] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.058867] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.059025] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.059173] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.059321] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.059467] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.059763] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060023] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[1.060180] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.060285] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.060398] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.060515] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.060648] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.060769] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.060896] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.061009] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.061125] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.061234] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.061341] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.061449] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.061558] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.061666] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.061786] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.061898] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.062007] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.062115] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.062258] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062371] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[1.062510] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.062640] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.062781] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062922] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[1.063061] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.063201] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.063341] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063480] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[1.063629] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.063769] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.063946] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064073] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[1.064216] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.064348] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.064479] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064610] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[1.064741] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.064873] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.065005] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065135] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[1.065266] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.065398] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.065533] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065647] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[1.065773] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.065886] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.065990] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066094] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[1.066198] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.066314] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.066418] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066521] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[1.066626] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.066730] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.066863] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066993] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[1.067125] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.067256] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.067387] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067518] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[1.067649] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.067775] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.067884] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067979] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[1.068074] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.068204] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.068311] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068417] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[1.068523] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.068641] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.068755] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068857] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[1.068960] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.069062] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.069166] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069269] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.069372] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.069482] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.069604] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069709] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[1.069825] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.069932] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.070035] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070138] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[1.070242] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.070346] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.070450] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070553] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[1.070657] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.070760] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.070870] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070974] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[1.071077] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.071182] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.071285] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071389] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[1.071520] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.071641] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.071763] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071894] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.072026] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.072158] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.072289] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072420] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.072552] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.072683] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.072815] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072945] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.073076] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.073208] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.073339] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073470] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.073612] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.073753] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.073899] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074030] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.074162] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.074293] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.074425] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074555] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.074686] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.074844] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.074985] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075157] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.075308] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.075456] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.075604] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075756] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.075900] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.076019] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.076149] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076259] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.076370] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.076480] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.076590] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076700] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.076812] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.076924] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.077035] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077145] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.077258] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.077369] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.077480] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077591] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.077703] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.077828] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.077942] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078054] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.078166] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.078278] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.078390] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078516] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.078622] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.078726] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.078831] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078937] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.079061] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.079303] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.079559] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079678] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.079798] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.079906] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.080013] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080119] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.080239] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.080345] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.080449] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080552] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.080655] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.080760] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.080864] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080967] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.081071] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.081175] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.081279] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081382] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.081486] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.081590] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.081693] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081798] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.081866] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.081929] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.081992] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082053] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.082115] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.082177] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.082239] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082300] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.082361] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.082422] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.082483] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082544] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.082605] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.082667] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.082727] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082788] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.082849] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.082910] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.082971] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083031] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.083100] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.083161] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.083221] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083290] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.083352] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.083412] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083472] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.083533] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.083593] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083653] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[1.083714] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.083802] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083880] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.083944] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.084007] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.084070] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084133] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.084195] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.084258] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.084320] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084381] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.084457] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.084550] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.084643] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084763] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.084883] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.085002] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.085122] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085252] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.085368] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.085485] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.085600] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085715] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.085845] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.085962] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.086097] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086216] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.086337] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.086457] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.086576] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086695] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.086831] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.086946] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.087058] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087172] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.087286] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.087418] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.087532] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.087644] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.087762] (turtle_brick) StderrLine: {'line': b'\n'}
[1.087874] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.087987] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.088102] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.088238] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088357] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.088477] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.088626] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088742] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.088860] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.088977] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.089094] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089211] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.089329] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.089447] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.089580] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089699] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.089825] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.089930] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.090047] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090160] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.090273] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.090386] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.090501] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.090614] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.090728] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.090842] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.090955] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.091070] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.091186] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.091326] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.091472] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.091610] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.091740] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.091869] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.092056] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092227] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.092382] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.092536] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.092690] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.092843] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.093014] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.093194] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.093324] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.093455] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.093585] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.093716] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.093921] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.094115] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.094245] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.094376] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.094506] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094637] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.094769] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.094899] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.095029] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.095159] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.095290] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.095421] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.095551] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.095680] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.095810] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.095941] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.096071] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.096201] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.096365] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.096610] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.096744] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.096877] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.097013] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.097147] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.097292] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.097421] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.097552] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.097683] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.097838] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.097969] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.098100] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.098232] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.098369] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.098499] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.098631] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.098761] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.099079] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.099313] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.099427] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.099538] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.099649] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.099754] (-) TimerEvent: {}
[1.099874] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.100002] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.100125] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.100245] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.100365] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.100485] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.100607] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.100739] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.100855] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.100972] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.101089] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.101224] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.101345] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.101466] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.101586] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.101706] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.101840] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.101962] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.102082] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.102202] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.102342] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.102479] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.102604] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.102728] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.102852] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.102976] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.103099] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.103236] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.103354] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.103471] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.103587] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.103703] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.103826] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.103943] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.104058] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.104174] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.104291] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.104408] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.104524] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.104640] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.104780] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.104903] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.105026] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.105177] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.105297] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.105418] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.105538] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.105657] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.105786] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.105912] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.106032] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.106153] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.106274] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.106395] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.106515] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.106634] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.106754] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.106875] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.106996] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.107117] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.107237] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.107357] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.107477] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.107598] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.107734] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.107858] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.107998] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.108125] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.108270] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.108415] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.108529] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.108638] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.108748] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.108868] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.108978] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.109111] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.109225] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.109339] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.109453] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.109589] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.109706] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.109833] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.109948] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.110061] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.110191] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.110300] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.110410] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.110520] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.110630] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.110740] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.110849] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.110959] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.111074] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.111199] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.111306] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.111407] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.111518] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.111635] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.111748] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.111870] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.112007] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.112129] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.112204] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.112271] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.112337] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.112419] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.112480] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.112554] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.112617] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.112679] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.112741] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.112803] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.112864] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.112925] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.112986] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.113047] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.113108] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.113169] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.113230] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.113291] (turtle_brick) StdoutLine: {'line': b'1     E128 continuation line under-indented for visual indent\n'}
[1.113353] (turtle_brick) StdoutLine: {'line': b'6     E225 missing whitespace around operator\n'}
[1.113414] (turtle_brick) StdoutLine: {'line': b"25    E231 missing whitespace after ','\n"}
[1.113475] (turtle_brick) StdoutLine: {'line': b'6     E251 unexpected spaces around keyword / parameter equals\n'}
[1.113556] (turtle_brick) StdoutLine: {'line': b'2     E261 at least two spaces before inline comment\n'}
[1.113618] (turtle_brick) StdoutLine: {'line': b"2     E262 inline comment should start with '# '\n"}
[1.113681] (turtle_brick) StdoutLine: {'line': b"9     E265 block comment should start with '# '\n"}
[1.113744] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.114213] (turtle_brick) StdoutLine: {'line': b'5     E302 expected 2 blank lines, found 0\n'}
[1.114474] (turtle_brick) StdoutLine: {'line': b'3     E303 too many blank lines (3)\n'}
[1.114921] (turtle_brick) StdoutLine: {'line': b'7     E501 line too long (115 > 99 characters)\n'}
[1.115088] (turtle_brick) StdoutLine: {'line': b"23    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.115403] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.115555] (turtle_brick) StdoutLine: {'line': b'11    W291 trailing whitespace\n'}
[1.115662] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.115740] (turtle_brick) StdoutLine: {'line': b'10    W293 blank line contains whitespace\n'}
[1.115804] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.115867] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.115974] (turtle_brick) StdoutLine: {'line': b'118 errors\n'}
[1.116045] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.116125] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 67\n"}
[1.116192] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 24\n"}
[1.116258] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 27\n"}
[1.116325] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.116391] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.116458] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.116524] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.116591] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.116657] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.116734] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.116798] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.116861] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.116924] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.116988] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.117051] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.117113] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.117195] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.117302] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.117407] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.117514] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.117620] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.117727] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.117846] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.117915] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.117982] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.118047] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.118112] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.118185] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.118268] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.118334] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.118400] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.118467] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.118786] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.118885] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.119012] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.119141] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.119266] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.119392] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.119519] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.119656] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.119786] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D208: Docstring is over-indented\n'}
[1.119938] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.120061] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.120179] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.120295] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.120413] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.120534] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.120651] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.120769] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.120885] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.121001] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.121119] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.121235] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.121352] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.121469] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.121586] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.121701] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.121848] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:14 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.121965] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:14 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.122075] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.122184] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.122293] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.122401] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.122510] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.122619] (turtle_brick) StdoutLine: {'line': b'19 errors\n'}
[1.122729] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.122840] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.122951] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 118 code styl...\n'}
[1.123061] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.123225] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.46s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.123334] (turtle_brick) CommandEnded: {'returncode': 1}
[1.123749] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.123787] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.124267] (-) EventReactorShutdown: {}
