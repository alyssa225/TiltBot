[0.000000] (-) TimerEvent: {}
[0.000788] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000947] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.001023] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.012109] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.099378] (-) TimerEvent: {}
[0.199700] (-) TimerEvent: {}
[0.252899] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.265502] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.272626] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.272954] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.273475] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.273573] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.273674] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.273837] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1917 - Experimental\n'}
[0.274122] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.274275] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.274387] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.274501] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.274649] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.274783] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.274918] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.275051] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.275194] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.275334] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.275468] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.275603] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.275737] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.275891] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299785] (-) TimerEvent: {}
[0.328210] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.328408] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.388021] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.388238] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.388362] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.388480] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.398004] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.398390] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.399881] (-) TimerEvent: {}
[0.408485] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.408771] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.408850] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.408918] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.408985] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.409054] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.465430] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.465595] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.500007] (-) TimerEvent: {}
[0.532860] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.533042] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.537202] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.537426] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.537499] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.600138] (-) TimerEvent: {}
[0.625512] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.625695] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.625995] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.637179] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.638549] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.664889] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.665090] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.665177] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.678533] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.678882] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.689689] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.28 sec\n'}
[0.690115] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.690325] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.690441] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.690547] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.690635] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.690736] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.42 sec*proc (2 tests)\n'}
[0.690841] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.28 sec*proc (1 test)\n'}
[0.690914] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.690986] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.42 sec\n'}
[0.691064] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.691134] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.691227] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.700268] (-) TimerEvent: {}
[0.715239] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.715610] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.715817] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.715970] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.716500] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.716556] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.800395] (-) TimerEvent: {}
[0.855595] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.900520] (-) TimerEvent: {}
[0.915892] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.916129] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.916327] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.916475] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.916618] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.951052] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.951338] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 281 code style errors / warnings:\x1b[0m\n'}
[0.951676] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\x1b[0m\n"}
[0.952138] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.952439] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\x1b[0m\n"}
[0.952747] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.953069] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\x1b[0m\n"}
[0.953375] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:12:42: W291 trailing whitespace\x1b[0m\n'}
[0.953837] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\x1b[0m\n"}
[0.954159] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.954498] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.954805] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.955107] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:39:53: W291 trailing whitespace\x1b[0m\n'}
[0.955961] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.956997] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:50:33: W291 trailing whitespace\x1b[0m\n'}
[0.957959] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.958889] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.959144] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.959308] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.959453] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.959605] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.959727] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.959908] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.960011] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.960086] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.960157] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.960228] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.960298] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.960368] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.960438] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.960516] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.960613] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.960683] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\x1b[0m\n"}
[0.960768] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.960838] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.960907] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.960976] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.961045] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.961113] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.961182] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.961250] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.961319] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:192:26: W291 trailing whitespace\x1b[0m\n'}
[0.961399] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\x1b[0m\n"}
[0.961464] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\x1b[0m\n"}
[0.961531] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\x1b[0m\n"}
[0.961597] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\x1b[0m\n"}
[0.961663] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.961730] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.961796] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.961863] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\x1b[0m\n"}
[0.961928] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.961999] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.962066] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.962132] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\x1b[0m\n"}
[0.962197] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\x1b[0m\n'}
[0.962262] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.962328] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\x1b[0m\n'}
[0.962393] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.962465] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.962530] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.962596] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\x1b[0m\n"}
[0.962660] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.962725] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.962789] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.962859] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.962940] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.963009] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:272:30: W291 trailing whitespace\x1b[0m\n'}
[0.963076] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\x1b[0m\n'}
[0.963145] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.963229] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\x1b[0m\n"}
[0.963306] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.963365] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\x1b[0m\n'}
[0.963424] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:294:19: W291 trailing whitespace\x1b[0m\n'}
[0.963482] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:295:1: W391 blank line at end of file\x1b[0m\n'}
[0.963541] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.963600] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.963658] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[0.963738] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.963821] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.963909] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.964020] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[0.964119] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[0.964217] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.964316] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.964397] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[0.964489] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[0.964586] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[0.964681] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[0.964771] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[0.964862] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[0.964927] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[0.964992] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[0.965057] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[0.965122] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.965187] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[0.965253] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.965319] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.965386] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.965453] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.965519] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.965584] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.965649] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.965715] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.965780] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.965845] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.965911] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.966063] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.966131] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.966198] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.966263] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.966329] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.966398] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[0.966535] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.966656] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.966788] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[0.966926] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[0.967060] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.967196] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.967327] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.967449] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.967528] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.967599] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.967670] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.967740] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.967809] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.967877] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[0.967963] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[0.968032] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.968100] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.968168] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[0.968237] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.968305] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.968374] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.968454] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.968519] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.968585] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.968650] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.968715] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.968780] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.968852] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.968917] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.968982] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.969048] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.969112] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.969178] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.969243] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.969314] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[0.969380] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[0.969446] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[0.969511] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.969577] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[0.969642] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.969707] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[0.969772] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.969837] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.969903] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[0.969967] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[0.970031] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.970096] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[0.970160] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.970224] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[0.970289] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[0.970353] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.970417] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.970481] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.970556] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.970621] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[0.970686] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.970751] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[0.970826] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[0.970892] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.970957] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.971023] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.971089] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.971154] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.971236] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.971303] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.971368] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.971434] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.971499] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.971564] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.971628] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.971693] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.971757] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.971821] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.971893] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.971959] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.972024] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.972088] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.972153] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.972218] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.972288] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.972352] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.972417] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.972481] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.972545] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.972608] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.972672] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.972736] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.972800] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.972864] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.972928] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.972992] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.973056] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.973119] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.973183] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.973247] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.973311] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.973375] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.973440] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.973506] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.973571] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.973635] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.973699] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.973762] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.973837] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.973902] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.973967] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.974032] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.974102] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.974166] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.974231] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.974296] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.974360] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.974426] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.974513] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.974607] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.974680] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.974748] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.974814] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.974880] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.974946] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.975011] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.975078] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.975143] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.975232] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.975300] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.975366] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.975435] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.975501] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.975567] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.975633] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.975698] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.975765] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.975833] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.975907] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.975972] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.976037] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.976103] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.976169] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.976234] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.976300] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.976368] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.976447] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.976511] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.976575] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.976638] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.976715] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.976778] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.976854] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.976917] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.976979] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.977042] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.977104] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.977167] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.977229] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.977292] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.977358] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.977420] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.977482] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.977564] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.977630] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.977696] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.977761] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.977827] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.977892] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.977957] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.978023] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.978088] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.978154] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.978218] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.978284] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.978349] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.978414] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.978480] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.978548] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978614] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\n"}
[0.978681] (turtle_brick) StdoutLine: {'line': b'from xmlrpc.client import Boolean\n'}
[0.978763] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.978828] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978906] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[0.978974] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[0.979040] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.979107] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979173] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\n"}
[0.979377] (turtle_brick) StdoutLine: {'line': b'from math import pi\n'}
[0.979532] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.979642] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979757] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[0.979827] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.979906] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.979988] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980054] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\n"}
[0.980122] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt\n'}
[0.980216] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.980269] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980392] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:12:42: W291 trailing whitespace\n'}
[0.980554] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.980636] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.980720] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980816] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\n"}
[0.980897] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import MarkerArray\n'}
[0.980980] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.981076] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981172] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\n"}
[0.981239] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.981306] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.981373] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981441] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\n'}
[0.981508] (turtle_brick) StdoutLine: {'line': b'class BState(Enum):\n'}
[0.981577] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.981644] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981723] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\n'}
[0.981789] (turtle_brick) StdoutLine: {'line': b'class Arena(Node):\n'}
[0.981853] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.981918] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981982] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:39:53: W291 trailing whitespace\n'}
[0.982047] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.982112] (turtle_brick) StdoutLine: {'line': b'    Creates the arena and places brick when called in command line.\n'}
[0.982177] (turtle_brick) StdoutLine: {'line': b'    Will drop the robot when called in command line.\n'}
[0.982241] (turtle_brick) StdoutLine: {'line': b'        -if robot is underneath the brick, the brick will land on the robot\n'}
[0.982306] (turtle_brick) StdoutLine: {'line': b'        -if nothing is under brick, brick will land on ground\n'}
[0.982384] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.982448] (turtle_brick) StdoutLine: {'line': b'        -robot_sub: continuous robot position\n'}
[0.982538] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.982618] (turtle_brick) StdoutLine: {'line': b'        -marker_pub: publishes walls and brick\n'}
[0.982691] (turtle_brick) StdoutLine: {'line': b'        -drop_pub: sends placement, drop coordinates  \n'}
[0.982759] (turtle_brick) StdoutLine: {'line': b'        -platform_pub: sends true if platform is under brick\n'}
[0.982824] (turtle_brick) StdoutLine: {'line': b'    SERVICES:\n'}
[0.982889] (turtle_brick) StdoutLine: {'line': b'        -Place: place brick at x, y, z location\n'}
[0.982954] (turtle_brick) StdoutLine: {'line': b'        -Drop: Empty drops brick\n'}
[0.983018] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.983082] (turtle_brick) StdoutLine: {'line': b'        -world_brick: connects brick to world\n'}
[0.983147] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.983228] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.983295] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.983358] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983422] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\n"}
[0.983486] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.983549] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.983612] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983684] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:50:33: W291 trailing whitespace\n'}
[0.983802] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.983896] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.984008] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984112] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\n"}
[0.984184] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.984250] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.984317] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984383] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\n"}
[0.984448] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.984513] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.984577] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984640] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\n"}
[0.984705] (turtle_brick) StdoutLine: {'line': b'        #setting state of brick\n'}
[0.984769] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.984846] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984907] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\n"}
[0.984969] (turtle_brick) StdoutLine: {'line': b'        #set up subscribers\n'}
[0.985029] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.985089] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985149] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\n"}
[0.985210] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.985271] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.985332] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985392] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\n"}
[0.985453] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.985514] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.985575] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985635] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\n"}
[0.985695] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.985756] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[0.985817] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985877] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\n"}
[0.985938] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[0.985998] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.986062] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986124] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\n"}
[0.986185] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.986247] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.986308] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986368] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\n"}
[0.986429] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.986491] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.986553] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986615] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\n"}
[0.986690] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.986769] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.986843] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986908] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\n"}
[0.986974] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.987039] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.987104] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987168] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\n"}
[0.987260] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.987321] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.987379] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987437] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\n"}
[0.987494] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.987553] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.987611] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987667] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\n'}
[0.987760] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.987835] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.987894] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987953] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\n'}
[0.988013] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.988071] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.988130] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988188] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\n"}
[0.988248] (turtle_brick) StdoutLine: {'line': b'        #initialize services\n'}
[0.988307] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.988367] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988426] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\n"}
[0.988492] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.988553] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[0.988612] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988687] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\n"}
[0.988754] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.988821] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.988888] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988955] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\n"}
[0.989021] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.989088] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.989154] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989220] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\n"}
[0.989286] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.989364] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.989430] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989497] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\n'}
[0.989563] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.989629] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.989714] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989777] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\n"}
[0.989841] (turtle_brick) StdoutLine: {'line': b'        #creating brick marker\n'}
[0.989904] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.989967] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990029] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\n"}
[0.990091] (turtle_brick) StdoutLine: {'line': b'        #creating wall markers\n'}
[0.990154] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.990217] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990279] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\n'}
[0.990344] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.990406] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.990469] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990531] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\n"}
[0.990609] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.990702] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.990767] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990831] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:192:26: W291 trailing whitespace\n'}
[0.990896] (turtle_brick) StdoutLine: {'line': b'        self.brickz = 0.0 \n'}
[0.990959] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[0.991021] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991084] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\n"}
[0.991148] (turtle_brick) StdoutLine: {'line': b'        self.wall = self.create_timer(0.5,self.wall_callback)\n'}
[0.991231] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.991296] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991359] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\n"}
[0.991422] (turtle_brick) StdoutLine: {'line': b'    def place_callback(self, request,response):\n'}
[0.991484] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.991547] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991609] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\n"}
[0.991672] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.991758] (turtle_brick) StdoutLine: {'line': b'                                  ^\n'}
[0.991826] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991894] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\n"}
[0.991962] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.992030] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.992099] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992166] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\n'}
[0.992234] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.992301] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.992368] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992435] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\n"}
[0.992503] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.992570] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.992638] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992705] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\n'}
[0.992781] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[0.992841] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.992911] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992971] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\n"}
[0.993031] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.993092] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.993151] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993211] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\n"}
[0.993270] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.993331] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.993391] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993452] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\n"}
[0.993513] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.993574] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.993634] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993694] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\n"}
[0.993754] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.993814] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.993875] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993936] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\n"}
[0.993997] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self, request,response):\n'}
[0.994058] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[0.994124] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994186] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\n'}
[0.994247] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[0.994308] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.994369] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994429] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\n"}
[0.994490] (turtle_brick) StdoutLine: {'line': b'        #publishing wall markers\n'}
[0.994551] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.994611] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994670] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\n'}
[0.994731] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[0.994792] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.994852] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994912] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\n'}
[0.994973] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.995034] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.995095] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995156] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\n'}
[0.995273] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.995335] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.995396] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995456] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\n'}
[0.995516] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.995576] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.995637] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995697] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\n"}
[0.995798] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.995858] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.995918] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995978] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\n"}
[0.996038] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.996098] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.996157] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996217] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\n"}
[0.996277] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.996337] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.996397] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996457] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\n'}
[0.996517] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.996577] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.996637] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996710] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\n"}
[0.996773] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.996837] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.996900] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996963] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\n"}
[0.997027] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.997091] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.997155] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997218] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:272:30: W291 trailing whitespace\n'}
[0.997294] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[0.997358] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[0.997422] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997486] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\n'}
[0.997550] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[0.997614] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.997679] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997755] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\n'}
[0.997815] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.997875] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.997934] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997993] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\n"}
[0.998052] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.998111] (turtle_brick) StdoutLine: {'line': b'                                                                 ^\n'}
[0.998170] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998229] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\n'}
[0.998288] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.998348] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.998407] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998466] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\n'}
[0.998550] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[0.998616] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.998763] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998878] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:294:19: W291 trailing whitespace\n'}
[0.999020] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.999164] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.999303] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999396] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:295:1: W391 blank line at end of file\n'}
[0.999479] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999547] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.999614] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999696] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[0.999767] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.999838] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.999909] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999978] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[1.000048] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[1.000117] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.000187] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000256] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[1.000326] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[1.000397] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.000467] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000534] (-) TimerEvent: {}
[1.000631] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[1.000772] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[1.000841] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.000913] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000977] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[1.001040] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.001103] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.001164] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001225] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[1.001286] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.001347] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.001408] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001469] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[1.001530] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[1.001591] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.001652] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001725] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[1.001784] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.001843] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.001903] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001962] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[1.002022] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[1.002081] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.002140] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002198] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[1.002264] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[1.002323] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.002384] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002443] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[1.002502] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.002562] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.002623] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.002696] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.002764] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.002832] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.002900] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.002967] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.003035] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.003103] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.003171] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.003256] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.003324] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.003392] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.003460] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.003528] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.003596] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.003664] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.003761] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.003837] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.003896] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.003954] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[1.004013] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004072] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[1.004131] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.004190] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.004249] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.004309] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.004367] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.004425] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.004483] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.004541] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.004615] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.004688] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.004748] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.004810] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.004870] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.004930] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.004989] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.005055] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.005116] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.005175] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.005235] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.005294] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.005354] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.005414] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[1.005474] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005534] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[1.005593] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.005652] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.005731] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.005799] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.005866] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.005934] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.006001] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.006068] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.006143] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.006210] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.006277] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.006345] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.006413] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.006480] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.006548] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.006616] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.006698] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.006808] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.006879] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.006943] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.007008] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.007071] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.007134] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007223] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[1.007289] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.007352] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.007415] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.007478] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.007540] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.007604] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.007684] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.007754] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.007825] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.007906] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.007978] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.008049] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.008120] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.008191] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.008262] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.008332] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.008403] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.008474] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.008544] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.008615] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.008687] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.008766] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.008828] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008890] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[1.008952] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.009014] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.009076] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.009139] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.009200] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.009262] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.009325] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.009387] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.009449] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.009511] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.009573] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.009635] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.009710] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.009770] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.009830] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.009892] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.009952] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.010013] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.010074] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.010135] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.010197] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.010258] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.010325] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010409] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[1.010474] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.010548] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.010609] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.010688] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.010750] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.010831] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.010895] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.010959] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.011024] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.011090] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.011155] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.011240] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.011315] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.011381] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.011446] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.011524] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.011587] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.011663] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.011732] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.011801] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.011870] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.011938] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.012008] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012077] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[1.012147] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.012218] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.012286] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.012355] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.012424] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.012491] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.012559] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.012627] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.012708] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.012770] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.012832] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.012894] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.012955] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.013017] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.013079] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.013142] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.013204] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.013267] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.013329] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.013398] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.013461] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.013523] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.013585] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013647] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[1.013710] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.013782] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.013842] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.013901] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.013961] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.014020] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.014079] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.014138] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.014198] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.014257] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.014316] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.014375] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.014434] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.014493] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.014552] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.014612] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.014692] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.014771] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.014886] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.014957] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.015024] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.015089] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[1.015156] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015242] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[1.015309] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.015374] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.015439] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.015504] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.015569] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.015637] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.015721] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.015793] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.015864] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.015936] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.016008] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.016082] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.016154] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.016226] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.016309] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.016387] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.016460] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.016532] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.016603] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.016687] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.016778] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.016841] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.016904] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016968] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[1.017032] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.017095] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.017158] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017220] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[1.017285] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.017349] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.017413] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017475] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[1.017538] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.017603] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.017665] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017727] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[1.017791] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.017853] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.017916] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017978] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[1.018041] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.018104] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.018166] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018227] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[1.018289] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.018350] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.018413] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018475] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[1.018536] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.018598] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.018660] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018835] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[1.019018] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.019187] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.019340] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019408] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[1.019483] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.019548] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.019611] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019698] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[1.019857] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.019963] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.020081] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020205] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[1.020295] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.020360] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.020423] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020486] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[1.020550] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.020612] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.020675] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020738] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[1.020800] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.020862] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.020925] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020987] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[1.021049] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.021113] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[1.021176] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021238] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[1.021301] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.021364] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[1.021426] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021487] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[1.021551] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.021613] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.021683] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021755] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[1.021813] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.021871] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.021928] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021985] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[1.022043] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.022101] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.022167] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022224] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[1.022282] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[1.022339] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.022397] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022454] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[1.022512] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.022569] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.022626] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022701] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[1.022765] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.022828] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.022929] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023008] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[1.023089] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.023156] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.023241] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023308] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[1.023371] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[1.023434] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.023499] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023562] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[1.023628] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[1.023692] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.023757] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023823] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[1.023889] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[1.023953] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.024017] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024080] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[1.024145] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[1.024208] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.024271] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024334] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[1.024397] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[1.024459] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.024521] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024583] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[1.024646] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.024708] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.024770] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024831] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[1.024893] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[1.024955] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.025017] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025078] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[1.025141] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.025204] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[1.025273] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025336] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[1.025399] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.025461] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.025524] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025586] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[1.025649] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.025724] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.025786] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025847] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[1.025909] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.025972] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[1.026033] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026094] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[1.026156] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.026217] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[1.026278] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026339] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[1.026400] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.026461] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.026539] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026602] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[1.026665] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.026729] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.026798] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026862] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[1.026925] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.026988] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.027051] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027114] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[1.027186] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.027256] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.027320] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027383] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[1.027447] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.027511] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.027574] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027636] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[1.027724] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[1.027800] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.027884] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027958] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[1.028034] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.028108] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.028183] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028258] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[1.028334] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.028409] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.028484] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028559] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[1.028635] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.028722] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.028793] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028862] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[1.028933] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.029003] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.029073] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029143] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[1.029213] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.029284] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.029353] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029421] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[1.029491] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.029559] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.029628] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029696] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[1.029765] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.029834] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.029903] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029971] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[1.030040] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.030109] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.030178] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030246] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.030333] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.030402] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.030471] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030539] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[1.030609] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.030695] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.030767] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030838] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[1.030916] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.031059] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.031186] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031275] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[1.031348] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.031420] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.031499] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031571] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[1.031643] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.031726] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.031794] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031862] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[1.031932] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.032002] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.032072] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032140] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[1.032210] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.032279] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.032347] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032415] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[1.032486] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.032555] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.032624] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032693] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[1.032770] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.032833] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.032895] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032957] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[1.033020] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.033083] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.033145] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033208] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[1.033270] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.033332] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.033399] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033462] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[1.033524] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.033586] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.033647] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033709] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[1.033771] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.033832] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.033894] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033955] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[1.034016] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.034079] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.034140] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034202] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[1.034265] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.034327] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.034395] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034457] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[1.034519] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.034582] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.034644] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034707] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[1.034769] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.034833] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.034896] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034959] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[1.035023] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.035086] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.035149] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035230] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[1.035295] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.035358] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.035420] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035482] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[1.035546] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.035608] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.035671] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035733] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[1.035797] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.035859] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.035921] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035982] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[1.036044] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.036106] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.036168] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036229] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[1.036291] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.036352] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.036413] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036475] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[1.036537] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.036599] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.036660] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036732] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[1.036788] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.036844] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.036899] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036955] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[1.037011] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.037067] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.037124] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037180] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[1.037243] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.037301] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.037357] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037414] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[1.037481] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.037539] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.037597] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037652] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[1.037709] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037765] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.037820] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037875] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.037932] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.037986] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038041] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038096] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.038152] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.038315] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038495] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038617] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.038738] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.038803] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038898] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038996] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.039064] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.039129] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.039203] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039271] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.039335] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.039405] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.039469] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039532] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.039595] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.039658] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.039720] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039781] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.039845] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.039919] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.039980] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040040] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.040101] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.040161] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.040222] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040282] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.040344] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.040405] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040466] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040534] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.040596] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.040657] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040733] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040795] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[1.040859] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.040923] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040986] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041049] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[1.041113] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.041175] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.041238] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.041301] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.041365] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.041429] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.041493] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.041557] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.041620] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.041684] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.041746] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.041808] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.041870] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.041932] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.041995] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.042056] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.042118] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.042180] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042241] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[1.042303] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.042364] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.042426] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.042489] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.042551] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.042614] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.042677] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.042739] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.042801] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.042865] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.042943] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.043009] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.043075] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.043140] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.043219] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.043301] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.043357] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.043412] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.043467] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043522] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[1.043715] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.043938] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.044328] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044922] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[1.045370] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.045657] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.045776] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045891] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[1.046007] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.046123] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.046241] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046336] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[1.046432] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.046528] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.046623] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046737] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[1.046838] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.047009] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.047152] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047273] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[1.047337] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.047397] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.047458] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047519] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[1.047580] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.047663] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.047731] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047843] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[1.047914] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.047987] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.048075] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048144] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[1.048214] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.048284] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.048353] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048422] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[1.048522] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.048589] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.048655] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048723] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[1.048791] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.048865] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.048933] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048999] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[1.049066] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.049134] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.049202] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049269] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[1.049338] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.049407] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.049474] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049543] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[1.049611] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.049679] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.049747] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049816] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.049884] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.049952] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.050019] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050086] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[1.050153] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.050220] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.050286] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050353] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[1.050420] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.050486] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.050552] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050618] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[1.050685] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.050752] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.050819] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050885] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[1.050952] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.051019] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.051085] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051152] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[1.051237] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.051307] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.051373] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051440] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.051507] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.051581] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.051648] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051785] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.051881] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.051980] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.052076] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052144] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.052206] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.052267] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.052328] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052389] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.052449] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.052510] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.052570] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052631] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.052692] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.052753] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.052825] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052883] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.052949] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.053008] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.053068] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053127] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.053186] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.053245] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.053303] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053362] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.053421] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.053480] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.053539] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053598] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.053658] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.053717] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.053776] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053835] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.053894] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.053954] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.054022] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054081] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.054155] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.054215] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.054275] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054336] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.054396] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.054456] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.054516] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054576] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.054641] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.054701] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.054760] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054832] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.054891] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.055026] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.055150] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055252] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.055315] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.055374] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.055434] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055493] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.055553] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.055613] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.055672] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055729] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.055787] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.055846] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.055905] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055963] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.056022] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.056082] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.056141] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056199] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.056257] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.056316] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.056375] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056434] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.056493] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.056553] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.056611] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056670] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.056745] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.056825] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.056898] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056951] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.057004] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.057058] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.057116] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057169] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.057221] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.057274] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.057325] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057378] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.057430] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.057482] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.057534] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057586] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.057638] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.057712] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.057785] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057837] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.057895] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.057948] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.058001] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058053] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.058106] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.058158] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058210] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.058263] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.058408] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058594] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[1.058763] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.058860] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058955] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.059050] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.059145] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.059262] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059331] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.059384] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.059437] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.059490] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059543] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.059596] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.059648] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.059701] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059773] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.059862] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.059950] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.060038] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060096] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.060154] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.060213] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.060271] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060329] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.060388] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.060446] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.060504] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060562] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.060621] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.060679] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.060743] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060801] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.060860] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.060919] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.060977] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061035] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.061094] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.061153] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.061223] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061282] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.061341] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.061399] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061456] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.061515] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.061574] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.061631] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061702] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.061761] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.061820] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.061878] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061937] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.061996] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.062055] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.062113] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062172] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.062230] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.062288] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.062347] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.062406] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.062464] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.062523] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.062581] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.062640] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.062699] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.062759] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.062818] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.062877] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.062964] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.063034] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.063110] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063168] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.063296] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.063357] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.063417] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.063476] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.063536] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.063596] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.063654] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.063714] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.063772] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.063838] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.063911] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.063966] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.064021] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.064076] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.064131] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064186] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.064241] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.064296] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.064350] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064404] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.064459] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.064514] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.064568] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064623] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.064678] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.064732] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.064787] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064840] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.064895] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.064949] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.065003] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065058] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.065113] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.065169] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.065223] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065278] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.065333] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.065389] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.065445] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065500] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.065556] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.065612] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.065672] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065727] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.065783] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.065838] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.065894] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065949] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.066004] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.066060] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.066116] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066171] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.066227] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.066282] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.066346] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066402] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.066456] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.066511] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.066566] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066621] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.066675] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.066730] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.066785] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066839] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.066894] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.066948] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.067003] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067057] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.067112] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.067168] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.067346] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067436] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.067494] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.067547] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.067599] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067650] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.067708] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.067779] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067865] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.067959] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.068046] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.068132] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068188] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.068245] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.068301] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.068357] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068413] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.068470] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.068527] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.068583] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068638] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.068695] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.068751] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.068808] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068864] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.068921] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.068977] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069034] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069090] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.069147] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.069204] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069260] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069317] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.069374] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.069430] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069486] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069542] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.069597] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.069653] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.069709] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.069765] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.069820] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.069875] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.069931] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069986] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.070042] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.070097] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.070153] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070208] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.070264] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.070320] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.070376] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070437] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.070494] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.070550] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.070606] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070662] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.070719] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.070775] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.070832] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070888] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.070958] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.071043] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071114] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071194] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.071283] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.071342] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071400] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.071459] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.071518] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.071577] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071636] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.071709] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.071781] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.071838] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.071902] (turtle_brick) StderrLine: {'line': b'\n'}
[1.071959] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.072017] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.072075] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.072133] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.072190] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.072248] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.072310] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.072368] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.072425] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.072482] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072539] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.072596] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.072652] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.072709] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.072766] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.072828] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.072885] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.072942] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.072999] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073056] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.073114] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.073176] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.073233] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073291] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.073348] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.073406] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.073463] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073520] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.073578] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.073635] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073693] (turtle_brick) StdoutLine: {'line': b'1     E128 continuation line under-indented for visual indent\n'}
[1.073752] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.073809] (turtle_brick) StdoutLine: {'line': b'27    E225 missing whitespace around operator\n'}
[1.073867] (turtle_brick) StdoutLine: {'line': b"77    E231 missing whitespace after ','\n"}
[1.073925] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.073983] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.074041] (turtle_brick) StdoutLine: {'line': b"3     E262 inline comment should start with '# '\n"}
[1.074098] (turtle_brick) StdoutLine: {'line': b"34    E265 block comment should start with '# '\n"}
[1.074156] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.074214] (turtle_brick) StdoutLine: {'line': b'8     E302 expected 2 blank lines, found 0\n'}
[1.074271] (turtle_brick) StdoutLine: {'line': b'7     E303 too many blank lines (2)\n'}
[1.074330] (turtle_brick) StdoutLine: {'line': b'9     E501 line too long (115 > 99 characters)\n'}
[1.074388] (turtle_brick) StdoutLine: {'line': b"33    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.074446] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.074504] (turtle_brick) StdoutLine: {'line': b'39    W291 trailing whitespace\n'}
[1.074562] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.074619] (turtle_brick) StdoutLine: {'line': b'26    W293 blank line contains whitespace\n'}
[1.074677] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.074733] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074790] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.074847] (turtle_brick) StdoutLine: {'line': b'281 errors\n'}
[1.074904] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074961] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 174\n"}
[1.075018] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 34\n"}
[1.075075] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 73\n"}
[1.075132] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075221] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.075301] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075359] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.075416] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.075473] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.075530] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.075587] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.075644] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.075701] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.075756] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.075813] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.075870] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.075927] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.075984] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.076042] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.076105] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.076163] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.076221] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.076279] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.076337] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.076395] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.076453] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.076510] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.076568] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.076625] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.076695] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.076753] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.076812] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.076870] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.076929] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.076987] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.077045] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.077104] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.077162] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.077221] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.077280] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.077339] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.077399] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.077457] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.077516] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.077581] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.077640] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.077705] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.077764] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.077823] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.077887] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.077950] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.078009] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.078068] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.078128] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.078316] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.078560] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.078684] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.078790] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.078876] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.078966] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.079067] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.079138] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.079230] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.079305] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.079377] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.079448] (turtle_brick) StdoutLine: {'line': b'20 errors\n'}
[1.079518] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.079589] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.079659] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 281 code styl...\n'}
[1.079729] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.079798] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.43s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.079872] (turtle_brick) CommandEnded: {'returncode': 1}
[1.080173] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.080203] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.080541] (-) EventReactorShutdown: {}
