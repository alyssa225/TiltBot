[0.000000] (-) TimerEvent: {}
[0.000169] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000237] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000271] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.010236] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.098703] (-) TimerEvent: {}
[0.198982] (-) TimerEvent: {}
[0.252457] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.264960] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.272070] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.272321] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.272464] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.272704] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.272849] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.272985] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1915 - Experimental\n'}
[0.273155] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.273378] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.273494] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.273605] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.273733] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.273852] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.273969] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.274085] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.274201] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.274355] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.274498] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.274614] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.274731] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.274865] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299097] (-) TimerEvent: {}
[0.326270] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.326500] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.388331] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.388584] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.388799] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.389017] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.396747] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.397057] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.399184] (-) TimerEvent: {}
[0.404739] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.404984] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.405169] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.405337] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.405500] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.405660] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.459130] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.459378] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.499299] (-) TimerEvent: {}
[0.526334] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.526588] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.531355] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.531506] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.531590] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.599420] (-) TimerEvent: {}
[0.608619] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.608803] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.609106] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.617169] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.618215] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.639072] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.639360] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.639589] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.652539] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.658324] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.674392] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.27 sec\n'}
[0.674652] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.674800] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.674946] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.675088] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.675227] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.676392] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.40 sec*proc (2 tests)\n'}
[0.676552] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.27 sec*proc (1 test)\n'}
[0.676704] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.676848] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.40 sec\n'}
[0.676991] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.677130] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.677270] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.697706] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.698076] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.701455] (-) TimerEvent: {}
[0.701887] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.705104] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.705759] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.705815] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.801575] (-) TimerEvent: {}
[0.878675] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.901691] (-) TimerEvent: {}
[0.943221] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.943479] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.943691] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.943884] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.944101] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.977881] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.978280] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 285 code style errors / warnings:\x1b[0m\n'}
[0.979688] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:15:37: E127 continuation line over-indented for visual indent\x1b[0m\n'}
[0.980423] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:20:43: E231 missing whitespace after ','\x1b[0m\n"}
[0.980875] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:26:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.981349] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:26:48: W291 trailing whitespace\x1b[0m\n'}
[0.981614] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\x1b[0m\n"}
[0.981823] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.982025] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\x1b[0m\n"}
[0.983106] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.985181] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\x1b[0m\n"}
[0.985347] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:12:42: W291 trailing whitespace\x1b[0m\n'}
[0.985477] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\x1b[0m\n"}
[0.985606] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.985732] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.985857] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.985982] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:39:53: W291 trailing whitespace\x1b[0m\n'}
[0.986107] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.986232] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:50:33: W291 trailing whitespace\x1b[0m\n'}
[0.986357] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.986482] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.986613] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.986739] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.986865] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.986989] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.987113] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.987237] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.987361] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.987485] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.987609] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.987739] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.987864] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.987988] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.988112] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.988317] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.988442] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.988566] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\x1b[0m\n"}
[0.988690] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.988819] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.988994] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.989139] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.989256] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.989387] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.989506] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.989622] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.989739] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:192:26: W291 trailing whitespace\x1b[0m\n'}
[0.989856] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\x1b[0m\n"}
[0.989974] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\x1b[0m\n"}
[0.990101] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\x1b[0m\n"}
[0.990211] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\x1b[0m\n"}
[0.990321] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.990433] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.990544] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.990665] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\x1b[0m\n"}
[0.990774] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.990883] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.990992] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.991101] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\x1b[0m\n"}
[0.991222] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\x1b[0m\n'}
[0.991331] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.991439] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\x1b[0m\n'}
[0.991548] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.991658] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.991766] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.991881] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\x1b[0m\n"}
[0.991992] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.992100] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.992209] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.992319] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.992428] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.992537] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:272:30: W291 trailing whitespace\x1b[0m\n'}
[0.992646] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\x1b[0m\n'}
[0.992755] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.992865] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\x1b[0m\n"}
[0.992974] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.993083] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\x1b[0m\n'}
[0.993193] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:294:19: W291 trailing whitespace\x1b[0m\n'}
[0.993302] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:295:1: W391 blank line at end of file\x1b[0m\n'}
[0.993399] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.993469] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.993537] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[0.993618] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.993685] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.993759] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.993829] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[0.993965] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[0.994053] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.994120] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.994186] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[0.994250] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[0.994314] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[0.994379] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[0.994443] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[0.994510] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[0.994584] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[0.994661] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[0.994756] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[0.994900] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.995032] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[0.995162] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.995291] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.995420] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.995550] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.995698] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.995816] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.995934] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.996062] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.996181] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.996300] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.996418] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.996550] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.996669] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.996788] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.996952] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.997088] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.997202] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[0.997313] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.997441] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.997553] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[0.997664] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[0.997775] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.997886] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.997997] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.998108] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.998257] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.998392] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.998497] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.998643] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.998760] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.998876] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[0.998991] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[0.999106] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.999221] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.999347] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[0.999458] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.999569] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.999680] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.999792] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.999903] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[1.000021] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.000132] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[1.000243] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[1.000354] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.000465] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.000576] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.000687] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.000798] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.000915] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.001026] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.001137] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.001248] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[1.001372] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[1.001486] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[1.001608] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.001713] (-) TimerEvent: {}
[1.001838] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[1.002009] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.002146] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[1.002280] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.002388] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.002496] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[1.002619] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[1.002687] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[1.002752] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[1.002814] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.002877] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[1.002947] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[1.003010] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.003071] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.003133] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.003194] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.003268] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[1.003330] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[1.003392] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[1.003454] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[1.003516] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[1.003578] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[1.003640] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[1.003703] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[1.003766] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[1.003828] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[1.003890] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[1.003951] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[1.004012] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[1.004074] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.004136] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.004197] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[1.004265] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[1.004327] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.004389] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[1.004450] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[1.004512] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.004579] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.004642] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.004704] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.004765] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.004826] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[1.004916] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[1.005079] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[1.005159] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[1.005227] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.005295] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[1.005379] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.005448] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[1.005515] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[1.005582] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[1.005649] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[1.005717] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[1.005785] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[1.005852] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.005919] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[1.005985] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.006064] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.006141] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.006202] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.006264] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[1.006338] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.006399] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[1.006459] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.006519] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.006624] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[1.006692] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.006756] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[1.006834] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[1.006902] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[1.006970] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[1.007037] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[1.007104] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.007172] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[1.007247] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[1.007316] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.007383] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.007451] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.007518] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[1.007595] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[1.007659] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.007722] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[1.007786] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[1.007850] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[1.007914] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[1.007977] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[1.008040] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[1.008103] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[1.008167] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[1.008230] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.008294] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[1.008358] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[1.008427] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[1.008491] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[1.008555] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[1.008619] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[1.008683] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[1.008746] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.008811] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[1.008875] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[1.008939] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.009002] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[1.009066] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[1.009129] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[1.009192] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[1.009257] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.009349] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[1.009417] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[1.009482] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[1.009546] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[1.009610] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.009674] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.009739] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[1.009802] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[1.009873] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[1.009938] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[1.010003] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[1.010073] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[1.010138] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[1.010202] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[1.010283] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[1.010349] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[1.010417] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.010484] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.010556] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[1.010624] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.010680] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[1.010735] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[1.010790] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[1.010845] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[1.010900] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.010955] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.011009] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[1.011063] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.011119] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.011176] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011233] (turtle_brick) StdoutLine: {'line': b'./setup.py:15:37: E127 continuation line over-indented for visual indent\n'}
[1.011289] (turtle_brick) StdoutLine: {'line': b"                                    'config/turtle_urdf.rviz', 'launch/run_turtle.launch.py',\n"}
[1.011346] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.011402] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011457] (turtle_brick) StdoutLine: {'line': b"./setup.py:20:43: E231 missing whitespace after ','\n"}
[1.011527] (turtle_brick) StdoutLine: {'line': b"    install_requires=['setuptools', 'urdf','rviz'],\n"}
[1.011587] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.011647] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011707] (turtle_brick) StdoutLine: {'line': b"./setup.py:26:28: E231 missing whitespace after ','\n"}
[1.011767] (turtle_brick) StdoutLine: {'line': b"    tests_require=['pytest','ament_lint_auto'], \n"}
[1.011828] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.011888] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011961] (turtle_brick) StdoutLine: {'line': b'./setup.py:26:48: W291 trailing whitespace\n'}
[1.012070] (turtle_brick) StdoutLine: {'line': b"    tests_require=['pytest','ament_lint_auto'], \n"}
[1.012164] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.012255] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012355] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\n"}
[1.012454] (turtle_brick) StdoutLine: {'line': b'from xmlrpc.client import Boolean\n'}
[1.012567] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.012675] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012783] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.012892] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.013040] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.013117] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013185] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\n"}
[1.013254] (turtle_brick) StdoutLine: {'line': b'from math import pi\n'}
[1.013333] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.013409] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013477] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.013545] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.013615] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.013684] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013750] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\n"}
[1.013833] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt\n'}
[1.013901] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.013970] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014037] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:12:42: W291 trailing whitespace\n'}
[1.014104] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.014172] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.014240] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014307] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\n"}
[1.014381] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import MarkerArray\n'}
[1.014449] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.014516] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014614] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\n"}
[1.014683] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[1.014748] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.014811] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014874] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\n'}
[1.014938] (turtle_brick) StdoutLine: {'line': b'class BState(Enum):\n'}
[1.015002] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.015064] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015127] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\n'}
[1.015189] (turtle_brick) StdoutLine: {'line': b'class Arena(Node):\n'}
[1.015252] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.015314] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015376] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:39:53: W291 trailing whitespace\n'}
[1.015439] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.015501] (turtle_brick) StdoutLine: {'line': b'    Creates the arena and places brick when called in command line.\n'}
[1.015564] (turtle_brick) StdoutLine: {'line': b'    Will drop the robot when called in command line.\n'}
[1.015626] (turtle_brick) StdoutLine: {'line': b'        -if robot is underneath the brick, the brick will land on the robot\n'}
[1.015695] (turtle_brick) StdoutLine: {'line': b'        -if nothing is under brick, brick will land on ground\n'}
[1.015758] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.015821] (turtle_brick) StdoutLine: {'line': b'        -robot_sub: continuous robot position\n'}
[1.015884] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.015946] (turtle_brick) StdoutLine: {'line': b'        -marker_pub: publishes walls and brick\n'}
[1.016008] (turtle_brick) StdoutLine: {'line': b'        -drop_pub: sends placement, drop coordinates  \n'}
[1.016070] (turtle_brick) StdoutLine: {'line': b'        -platform_pub: sends true if platform is under brick\n'}
[1.016133] (turtle_brick) StdoutLine: {'line': b'    SERVICES:\n'}
[1.016195] (turtle_brick) StdoutLine: {'line': b'        -Place: place brick at x, y, z location\n'}
[1.016257] (turtle_brick) StdoutLine: {'line': b'        -Drop: Empty drops brick\n'}
[1.016319] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.016381] (turtle_brick) StdoutLine: {'line': b'        -world_brick: connects brick to world\n'}
[1.016443] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.016505] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.016580] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.016641] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016703] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\n"}
[1.016764] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.016825] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.016887] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016948] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:50:33: W291 trailing whitespace\n'}
[1.017008] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.017070] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.017132] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017194] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\n"}
[1.017257] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.017330] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.017398] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017460] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\n"}
[1.017537] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.017602] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.017668] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017735] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\n"}
[1.017802] (turtle_brick) StdoutLine: {'line': b'        #setting state of brick\n'}
[1.017868] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.017933] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017998] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\n"}
[1.018064] (turtle_brick) StdoutLine: {'line': b'        #set up subscribers\n'}
[1.018131] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.018259] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018369] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\n"}
[1.018440] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.018508] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.018592] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018662] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\n"}
[1.018728] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.018805] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.018870] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018935] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\n"}
[1.019001] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.019079] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.019142] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019204] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\n"}
[1.019282] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.019346] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.019411] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019475] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\n"}
[1.019540] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.019605] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.019670] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019735] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\n"}
[1.019800] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.019865] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.019929] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019994] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\n"}
[1.020058] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[1.020122] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.020186] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020250] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\n"}
[1.020320] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[1.020385] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.020449] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020513] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\n"}
[1.020577] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[1.020642] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.020705] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020769] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\n"}
[1.020834] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[1.020898] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.020985] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021102] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\n'}
[1.021186] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.021253] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.021327] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021401] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\n'}
[1.021467] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.021532] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.021596] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021660] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\n"}
[1.021731] (turtle_brick) StdoutLine: {'line': b'        #initialize services\n'}
[1.021795] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.021859] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021924] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\n"}
[1.021988] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[1.022053] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[1.022118] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022182] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\n"}
[1.022247] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[1.022311] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.022375] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022439] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\n"}
[1.022503] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[1.022598] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.022670] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022737] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\n"}
[1.022804] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[1.022870] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.022937] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023003] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\n'}
[1.023070] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.023138] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.023204] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023270] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\n"}
[1.023337] (turtle_brick) StdoutLine: {'line': b'        #creating brick marker\n'}
[1.023403] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.023469] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023536] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\n"}
[1.023617] (turtle_brick) StdoutLine: {'line': b'        #creating wall markers\n'}
[1.023686] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.023755] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023822] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\n'}
[1.023891] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[1.023959] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.024027] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024096] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\n"}
[1.024165] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[1.024234] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.024302] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024370] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:192:26: W291 trailing whitespace\n'}
[1.024439] (turtle_brick) StdoutLine: {'line': b'        self.brickz = 0.0 \n'}
[1.024508] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[1.024589] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024651] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\n"}
[1.024715] (turtle_brick) StdoutLine: {'line': b'        self.wall = self.create_timer(0.5,self.wall_callback)\n'}
[1.024777] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.024840] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024912] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\n"}
[1.024977] (turtle_brick) StdoutLine: {'line': b'    def place_callback(self, request,response):\n'}
[1.025054] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.025118] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025183] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\n"}
[1.025248] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[1.025313] (turtle_brick) StdoutLine: {'line': b'                                  ^\n'}
[1.025394] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025459] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\n"}
[1.025525] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[1.025590] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.025655] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025721] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\n'}
[1.025786] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.025851] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.025916] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025980] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\n"}
[1.026058] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.026121] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.026185] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026247] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\n'}
[1.026311] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[1.026374] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.026437] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026513] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\n"}
[1.026613] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[1.026684] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.026752] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026818] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\n"}
[1.026885] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[1.026953] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.027065] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027211] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\n"}
[1.027354] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[1.027496] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.027654] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027801] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\n"}
[1.027947] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[1.028096] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.028245] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028391] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\n"}
[1.028552] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self, request,response):\n'}
[1.028690] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[1.028827] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028988] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\n'}
[1.029137] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[1.029296] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.029449] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029600] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\n"}
[1.029736] (turtle_brick) StdoutLine: {'line': b'        #publishing wall markers\n'}
[1.029871] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.030007] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030151] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\n'}
[1.030282] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[1.030411] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.030555] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030676] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\n'}
[1.030801] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.030909] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.031016] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031123] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\n'}
[1.031230] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.031338] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.031444] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031567] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\n'}
[1.031684] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.031800] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.031916] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032032] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\n"}
[1.032148] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.032264] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.032380] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032498] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\n"}
[1.032625] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.032729] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.032833] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032937] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\n"}
[1.033042] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.033147] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.033251] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033372] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\n'}
[1.033480] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.033596] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.033695] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033794] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\n"}
[1.033893] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[1.033991] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.034090] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034188] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\n"}
[1.034286] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[1.034385] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.034483] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034591] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:272:30: W291 trailing whitespace\n'}
[1.034693] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[1.034802] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[1.034901] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035001] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\n'}
[1.035101] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[1.035201] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.035300] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035399] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\n'}
[1.035498] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.035612] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.035714] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035815] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\n"}
[1.035917] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.036018] (turtle_brick) StdoutLine: {'line': b'                                                                 ^\n'}
[1.036120] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036222] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\n'}
[1.036324] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.036426] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.036548] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036648] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\n'}
[1.036746] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[1.036846] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.036945] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037051] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:294:19: W291 trailing whitespace\n'}
[1.037206] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.037338] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.037422] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037485] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:295:1: W391 blank line at end of file\n'}
[1.037547] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037608] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.037669] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037731] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[1.037793] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[1.037854] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.037914] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037974] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[1.038052] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[1.038153] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038317] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038408] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[1.038479] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[1.038564] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.038652] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038723] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[1.038795] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[1.038876] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038946] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039016] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[1.039087] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.039157] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.039227] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039296] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[1.039366] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.039436] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.039507] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039586] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[1.039650] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[1.039715] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.039780] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039845] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[1.039910] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.039975] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.040040] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040103] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[1.040167] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[1.040230] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040292] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040355] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[1.040418] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[1.040480] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040557] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040618] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[1.040680] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.040741] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.040802] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.040863] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.040924] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.040986] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.041046] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.041107] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.041167] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.041228] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.041289] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.041383] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.041446] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.041508] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.041569] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.041630] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.041691] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.041753] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.041819] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.041880] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.041941] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.042002] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[1.042075] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042134] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[1.042194] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.042253] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.042313] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.042388] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.042449] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.042511] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.042590] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.042655] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.042717] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.042780] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.042843] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.042912] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.042976] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.043038] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.043099] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.043161] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.043224] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.043286] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.043347] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.043409] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.043471] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.043547] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[1.043614] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043682] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[1.043749] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.043817] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.043886] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.043953] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.044020] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.044088] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.044156] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.044223] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.044291] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.044359] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.044426] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.044494] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.044579] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.044643] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.044706] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.044771] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.044835] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.044899] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.044963] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.045027] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.045104] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.045265] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.045371] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045441] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[1.045507] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.045587] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.045656] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.045725] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.045794] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.045862] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.045930] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.045998] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.046067] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.046135] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.046214] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.046288] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.046363] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.046433] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.046504] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.046604] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.046686] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.046767] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.046848] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.046927] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.047007] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.047087] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.047168] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047248] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[1.047329] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.047408] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.047490] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.047586] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.047658] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.047729] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.047826] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.047897] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.047968] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.048040] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.048110] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.048181] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.048252] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.048323] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.048394] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.048473] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.048546] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.048632] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.048730] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.048802] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.048870] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.048937] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.049005] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049072] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[1.049140] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.049207] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.049274] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.049357] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.049428] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.049495] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.049575] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.049640] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.049705] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.049770] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.049834] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.049898] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.049963] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.050027] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.050092] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.050157] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.050222] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.050286] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.050351] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.050415] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.050480] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.050558] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.050627] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050695] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[1.050777] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.050846] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.050916] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.050985] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.051053] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.051121] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.051190] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.051258] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.051383] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.051516] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.051625] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.051694] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.051762] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.051829] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.051897] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.051964] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.052031] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.052098] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.052165] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.052231] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.052298] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.052364] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.052431] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052497] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[1.052577] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.052642] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.052707] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.052772] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.052838] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.052902] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.052967] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.053032] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.053097] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.053217] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.053364] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.053439] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.053505] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.053585] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.053653] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.053720] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.053824] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.053904] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.053979] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.054047] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.054114] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.054180] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[1.054248] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054317] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[1.054383] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.054450] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.054528] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.054613] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.054682] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.054750] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.054819] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.054886] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.054954] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.055022] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.055088] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.055156] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.055223] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.055290] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.055356] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.055423] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.055490] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.055556] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.055639] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.055698] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.055757] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.055818] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.055877] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055935] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[1.055994] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.056053] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.056111] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056170] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[1.056229] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.056288] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.056348] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056406] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[1.056465] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.056539] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.056614] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056676] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[1.056739] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.056808] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.056871] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056933] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[1.056996] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.057060] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.057123] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057186] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[1.057249] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.057311] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.057389] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057452] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[1.057514] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.057577] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.057640] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057703] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[1.057766] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.057829] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.057893] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057955] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[1.058018] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.058086] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.058226] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058357] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[1.058457] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.058524] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.058602] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058670] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[1.058738] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.058806] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.058876] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058941] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[1.059008] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.059075] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.059149] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059217] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[1.059284] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.059351] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.059418] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059484] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[1.059574] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.059646] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[1.059716] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059786] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[1.059857] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.059927] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[1.059999] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060069] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[1.060266] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.060695] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.061358] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061907] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[1.062240] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.062365] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.062441] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062513] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[1.062582] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.062651] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.062719] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062788] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[1.062857] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[1.062926] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.063008] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063073] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[1.063137] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.063201] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.063264] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063326] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[1.063392] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.063455] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.063518] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063580] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[1.063643] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.063705] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.063767] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063830] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[1.063892] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[1.063954] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.064017] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064078] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[1.064141] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[1.064203] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.064273] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064335] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[1.064397] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[1.064458] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.064520] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064582] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[1.064644] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[1.064706] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.064768] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064829] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[1.064891] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[1.064953] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.065015] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065093] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[1.065159] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.065225] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.065290] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065373] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[1.065442] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[1.065508] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.065574] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065640] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[1.065706] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.065773] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[1.065840] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065906] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[1.065972] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.066051] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.066114] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066176] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[1.066239] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.066309] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.066372] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066434] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[1.066496] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.066559] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[1.066619] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066681] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[1.066743] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.066805] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[1.066867] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066928] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[1.066996] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.067058] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.067121] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067182] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[1.067245] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.067306] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.067369] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067430] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[1.067493] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.067554] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.067616] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067677] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[1.067739] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.067801] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.067863] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067926] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[1.068000] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.068065] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.068128] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068191] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[1.068255] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[1.068317] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.068380] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068443] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[1.068505] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.068568] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.068630] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068692] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[1.068767] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.068829] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.068892] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068954] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[1.069016] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.069079] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.069141] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069257] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[1.069372] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.069468] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.069560] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069620] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[1.069712] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.069773] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.069864] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069924] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[1.069988] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.070078] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.070150] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070213] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[1.070277] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.070340] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.070403] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070465] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[1.070528] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.070591] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.070653] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070715] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.070777] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.070840] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.070902] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070964] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[1.071027] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.071090] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.071151] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071213] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[1.071290] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.071351] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.071411] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071472] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[1.071532] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.071593] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.071653] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071713] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[1.071774] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.071834] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.071897] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071958] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[1.072020] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.072086] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.072148] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072209] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[1.072270] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.072330] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.072391] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072451] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[1.072510] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.072570] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.072630] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072689] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[1.072749] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.072809] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.072868] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072928] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[1.072993] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.073053] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.073113] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073173] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[1.073233] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.073293] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.073365] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073426] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[1.073487] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.073547] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.073608] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073667] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[1.073728] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.073788] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.073849] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073910] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[1.073971] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.074032] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.074092] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074152] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[1.074226] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.074288] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.074350] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074412] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[1.074474] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.074536] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.074598] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074659] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[1.074721] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.074783] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.074845] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074907] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[1.074969] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.075032] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.075094] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075156] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[1.075218] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.075280] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.075353] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075412] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[1.075472] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.075532] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.075606] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075666] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[1.075742] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.075803] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.075864] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075924] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[1.075985] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.076045] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.076105] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076166] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[1.076226] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.076286] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.076346] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076406] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[1.076467] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.076527] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.076587] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076647] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[1.076707] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.076766] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.076825] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076884] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[1.076944] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.077005] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.077065] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077125] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[1.077187] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.077347] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.077421] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077494] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[1.077555] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.077611] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.077666] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077721] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[1.077776] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077830] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.077884] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077995] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.078156] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.078268] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.078398] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078495] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.078575] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.078669] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.078749] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078838] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.078916] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.079014] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.079103] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079215] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.079339] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.079454] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.079568] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079681] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.079795] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.079909] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.080022] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080135] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.080249] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.080362] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.080476] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080590] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.080703] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.080816] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.080930] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081043] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.081156] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.081269] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.081392] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081506] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.081620] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.081733] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.081846] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081958] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.082072] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.082185] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.082298] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082411] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[1.082525] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.082634] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.082747] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082859] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[1.082973] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.083086] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.083200] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.083314] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.083428] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.083562] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.083681] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.083802] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.083921] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.084041] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.084161] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.084281] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.084400] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.084520] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.084647] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.084767] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.084887] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.085007] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085143] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[1.085301] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.085433] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.085553] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.085647] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.085740] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.085833] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.085926] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.086019] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.086112] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.086206] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.086318] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.086428] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.086551] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.086668] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.086774] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.086870] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.086979] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.087081] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.087179] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087276] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[1.087374] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.087471] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.087569] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087666] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[1.087764] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.087861] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.087959] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088056] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[1.088153] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.088251] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.088348] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088445] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[1.088543] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.088641] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.088738] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088835] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[1.088933] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.089030] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.089128] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089225] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[1.089352] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.089478] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.089575] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089672] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[1.089770] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.089867] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.089964] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090061] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[1.090159] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.090257] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.090353] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090449] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[1.090547] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.090643] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.090706] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090766] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[1.090825] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.090885] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.090944] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091003] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[1.091062] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.091120] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.091179] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091238] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[1.091297] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.091357] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.091416] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091475] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[1.091534] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.091606] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.091664] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091721] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[1.091779] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.091837] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.091895] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091952] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.092010] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.092067] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.092124] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092181] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[1.092238] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.092302] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.092359] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092416] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[1.092474] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.092531] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.092589] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092646] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[1.092703] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.092761] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.092819] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092876] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[1.092933] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.092991] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.093049] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093107] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[1.093165] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.093275] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.093400] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093476] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.093536] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.093594] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.093653] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093712] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.093771] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.093829] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.093887] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093944] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.094002] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.094059] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.094130] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094187] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.094246] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.094303] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.094360] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094417] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.094474] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.094553] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.094615] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094701] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.094767] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.094861] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.094927] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094992] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.095082] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.095155] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.095243] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.095311] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.095380] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.095449] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.095517] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.095585] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.095653] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.095733] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.095800] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.095865] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.095931] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.095999] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.096065] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.096131] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.096197] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.096262] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.096328] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.096393] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.096458] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.096523] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.096599] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.096659] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.096718] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.096778] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.096839] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.096899] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.096960] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.097020] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.097080] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.097140] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.097202] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.097262] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.097331] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.097397] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.097488] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.097592] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.097681] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.097762] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.097835] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.097895] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.097955] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.098014] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.098075] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.098142] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.098203] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.098263] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.098323] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.098383] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.098443] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.098502] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.098582] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.098691] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.098753] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.098813] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.098873] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.098934] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.098993] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.099053] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.099113] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.099173] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.099232] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.099290] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.099349] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.099407] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.099465] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.099523] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.099582] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.099640] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.099699] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.099758] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.099817] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.099875] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.099933] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.099992] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.100051] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.100110] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.100168] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.100227] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.100286] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.100345] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.100404] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.100463] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.100522] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.100581] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[1.100641] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.100701] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.100765] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.100825] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.100895] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.100954] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.101013] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.101072] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.101131] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.101189] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.101335] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.101422] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.101484] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.101545] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.101616] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.101675] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.101731] (-) TimerEvent: {}
[1.101815] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.101882] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.101941] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.101999] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.102056] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.102113] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.102169] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.102225] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.102282] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.102337] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.102393] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.102450] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.102506] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.102596] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.102698] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.102753] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.102807] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.102860] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.102912] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.102965] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.103018] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.103070] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.103122] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.103174] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.103227] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.103279] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.103332] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.103384] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.103436] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.103488] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.103540] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.103593] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.103651] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.103702] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.103754] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.103806] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.103858] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.103909] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.103960] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.104012] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.104064] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.104121] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.104174] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.104225] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.104277] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.104329] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.104382] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.104434] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.104516] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.104581] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.104660] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.104727] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.104795] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.104862] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.104940] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.105060] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.105187] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.105310] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.105459] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.105534] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.105595] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.105654] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.105721] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.105826] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.105924] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.106032] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.106111] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.106171] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.106232] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.106334] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.106420] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.106481] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.106540] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.106666] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.106728] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.106832] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.106935] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.106998] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.107060] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.107119] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.107179] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.107238] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.107297] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.107357] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.107455] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.107534] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.107594] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.107653] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.107712] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.107771] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.107830] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.107891] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.107950] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.108009] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.108068] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.108139] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.108197] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.108256] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.108315] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.108373] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.108432] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.108489] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.108548] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.108607] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.108666] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.108724] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.108783] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.108842] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.108924] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.109034] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.109137] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.109236] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.109408] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.109496] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.109584] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.109644] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.109704] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.109763] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.109821] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.109881] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.109939] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.109998] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.110056] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.110116] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.110175] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.110254] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.110323] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.110393] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.110462] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.110531] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.110632] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.110704] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.110774] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.110845] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.110915] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.110984] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.111063] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.111123] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.111182] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.111240] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.111298] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.111356] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.111414] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.111472] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.111529] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.111587] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.111657] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.111714] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.111770] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.111828] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.111886] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.111942] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.111997] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.112062] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.112118] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.112175] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.112231] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.112288] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.112343] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.112399] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.112455] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.112511] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.112567] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.112624] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.112680] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.112736] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.112793] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.112850] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.112906] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.112962] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.113018] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.113074] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.113129] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.113195] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.113247] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.113309] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.113405] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.113474] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.113525] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.113577] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.113628] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.113680] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.113731] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.113783] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.113834] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.113885] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.113936] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.113987] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.114038] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.114091] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.114143] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.114200] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.114253] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.114306] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.114358] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.114410] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.114462] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.114513] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.114592] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.114684] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.114752] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.114805] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.114857] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.114909] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.114961] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.115013] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.115064] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.115115] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.115167] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.115219] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.115271] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.115322] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.115374] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.115425] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.115477] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.115529] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.115581] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.115632] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.115685] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.115737] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.115789] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.115841] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.115893] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.115945] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.115997] (turtle_brick) StdoutLine: {'line': b'1     E127 continuation line over-indented for visual indent\n'}
[1.116050] (turtle_brick) StdoutLine: {'line': b'1     E128 continuation line under-indented for visual indent\n'}
[1.116102] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.116155] (turtle_brick) StdoutLine: {'line': b'27    E225 missing whitespace around operator\n'}
[1.116207] (turtle_brick) StdoutLine: {'line': b"79    E231 missing whitespace after ','\n"}
[1.116260] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.116311] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.116363] (turtle_brick) StdoutLine: {'line': b"3     E262 inline comment should start with '# '\n"}
[1.116415] (turtle_brick) StdoutLine: {'line': b"34    E265 block comment should start with '# '\n"}
[1.116467] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.116518] (turtle_brick) StdoutLine: {'line': b'8     E302 expected 2 blank lines, found 0\n'}
[1.116583] (turtle_brick) StdoutLine: {'line': b'7     E303 too many blank lines (2)\n'}
[1.116636] (turtle_brick) StdoutLine: {'line': b'9     E501 line too long (115 > 99 characters)\n'}
[1.116688] (turtle_brick) StdoutLine: {'line': b"33    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.116741] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.116794] (turtle_brick) StdoutLine: {'line': b'40    W291 trailing whitespace\n'}
[1.116847] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.116899] (turtle_brick) StdoutLine: {'line': b'26    W293 blank line contains whitespace\n'}
[1.116952] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.117004] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.117063] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.117116] (turtle_brick) StdoutLine: {'line': b'285 errors\n'}
[1.117169] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.117222] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 177\n"}
[1.117305] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 34\n"}
[1.117518] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 74\n"}
[1.117601] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.117708] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.117785] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.117844] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.117904] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.117963] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.118023] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.118082] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.118140] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.118199] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.118258] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.118317] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.118376] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.118434] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.118492] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.118550] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.118665] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.118742] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.118801] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.118860] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.118919] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.118979] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.119038] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.119096] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.119155] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.119214] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.119272] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.119330] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.119389] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.119447] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.119505] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.119569] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.119629] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.119687] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.119746] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.119804] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.119875] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.119935] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.119999] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.120059] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.120118] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.120178] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.120236] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.120295] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.120354] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.120412] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.120471] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.120530] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.120588] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.120648] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.120706] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.120765] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.120824] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.120883] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.120941] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.121000] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.121059] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.121119] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.121177] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.121235] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.121294] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.121405] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.121481] (turtle_brick) StdoutLine: {'line': b'20 errors\n'}
[1.121541] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.121613] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.121684] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.121748] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.121805] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.121862] (turtle_brick) StderrLine: {'line': b'\n'}
[1.121919] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.121976] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.122035] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 285 code styl...\n'}
[1.122093] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.122151] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.46s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.122210] (turtle_brick) CommandEnded: {'returncode': 1}
[1.122471] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.122496] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.122880] (-) EventReactorShutdown: {}
