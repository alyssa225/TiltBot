[0.000000] (-) TimerEvent: {}
[0.000184] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000304] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000406] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.009354] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.098709] (-) TimerEvent: {}
[0.198995] (-) TimerEvent: {}
[0.241961] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.254917] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.262481] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.262761] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.263055] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.263219] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.263420] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.263671] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1935 - Experimental\n'}
[0.263831] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.263981] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.264130] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.264324] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.264459] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.264582] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.264715] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.264860] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.264984] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.265108] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.265232] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.265356] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.265480] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.265620] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299114] (-) TimerEvent: {}
[0.318344] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.318588] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.378598] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.378795] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.378877] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.378949] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.386765] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.387093] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.394535] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.394899] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.394982] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.395082] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.395176] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.395326] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.399241] (-) TimerEvent: {}
[0.449619] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.449828] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.499330] (-) TimerEvent: {}
[0.519483] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.519728] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.524333] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.524475] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.524585] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.595091] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.595231] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.595448] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.599432] (-) TimerEvent: {}
[0.604847] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.605868] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.699533] (-) TimerEvent: {}
[0.748856] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.749081] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.749226] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.759155] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.759457] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.769705] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.37 sec\n'}
[0.770085] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.770261] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.770395] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.770509] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.770605] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.770716] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.51 sec*proc (2 tests)\n'}
[0.770789] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.37 sec*proc (1 test)\n'}
[0.770872] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.770958] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.51 sec\n'}
[0.771032] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.771104] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.771176] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.789786] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.789943] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.790030] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.791535] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.791805] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.791831] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.799628] (-) TimerEvent: {}
[0.818674] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.882943] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.883340] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.883506] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.883614] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.883718] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.899746] (-) TimerEvent: {}
[0.918612] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.919588] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 224 code style errors / warnings:\x1b[0m\n'}
[0.919884] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:202:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.920074] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:210:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.920331] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:217:13: E225 missing whitespace around operator\x1b[0m\n'}
[0.920643] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:244:58: E225 missing whitespace around operator\x1b[0m\n'}
[0.920978] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:247:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.921379] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:248:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.921647] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:249:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.921906] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:254:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.923454] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:263:30: W291 trailing whitespace\x1b[0m\n'}
[0.924650] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:265:42: E225 missing whitespace around operator\x1b[0m\n'}
[0.925899] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:266:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.926372] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:266:100: E501 line too long (101 > 99 characters)\x1b[0m\n'}
[0.926499] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:283:9: E225 missing whitespace around operator\x1b[0m\n'}
[0.926617] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:285:19: W291 trailing whitespace\x1b[0m\n'}
[0.926735] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:286:1: W391 blank line at end of file\x1b[0m\n'}
[0.926851] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.926968] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.927085] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[0.927200] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.927330] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.927448] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.927565] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[0.927681] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[0.927796] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.927914] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.928031] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[0.928147] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[0.928264] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[0.928582] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[0.928703] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[0.928820] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[0.928937] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[0.929068] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[0.929184] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[0.929301] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.929418] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[0.929534] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.929650] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.929766] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.929902] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.930037] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.930207] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.930369] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.930532] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.930692] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.930855] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.931012] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.931115] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.931228] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.931331] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.931441] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.931512] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.931576] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[0.931639] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.931702] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.931777] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[0.931862] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[0.931928] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.931995] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.932062] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.932129] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.932202] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.932269] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.932336] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.932418] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.932492] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.932558] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[0.932625] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[0.932691] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.932757] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.932823] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[0.932888] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.932954] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.933020] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933085] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.933174] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.933250] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933317] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.933383] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.933450] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.933516] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933582] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.933653] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933720] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.933787] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.933853] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.933920] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933987] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[0.934053] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[0.934131] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[0.934193] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.934256] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[0.934317] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.934379] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[0.934440] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.934503] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.934572] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[0.934636] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[0.934698] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.934761] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[0.934836] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.934908] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[0.934975] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[0.935041] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.935109] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.935176] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.935242] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.935309] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[0.935381] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.935448] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[0.935514] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[0.935580] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.935646] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.935714] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.935781] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.935849] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.935915] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.935982] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.936049] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.936126] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.936193] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.936258] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.936324] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.936404] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.936476] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.936542] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.936608] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.936674] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.936740] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.936806] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.936870] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.936937] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.937002] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.937068] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.937141] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.937207] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.937272] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.937339] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.937405] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.937471] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.937537] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.937609] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.937676] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.937743] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.937809] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.937876] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.937943] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.938009] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.938076] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.938142] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.938209] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.938275] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.938342] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.938408] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.938474] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.938541] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.938608] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.938673] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.938740] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.938806] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.938871] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.938937] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.939008] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.939074] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.939140] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.939217] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.939282] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.939348] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.939413] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.939492] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.939599] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.939705] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.939810] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.939934] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.940049] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.940166] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.940290] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.940419] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.940567] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.940714] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.940856] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.940986] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.941064] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.941148] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.941219] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.941307] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.941378] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.941448] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.941519] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.941652] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.941807] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.941957] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.942105] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.942255] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.942403] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.942578] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.942714] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.942848] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.942983] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.943117] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.943272] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.943414] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.943557] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.943700] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.943842] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.943986] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.944129] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.944310] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.944457] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.944606] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.944738] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.944888] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.945026] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.945164] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.945310] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.945448] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.945586] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.945724] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.945863] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.946001] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.946139] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.946284] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.946422] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.946560] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.946697] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.946836] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.946976] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.947114] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:202:1: W293 blank line contains whitespace\n'}
[0.947252] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.947389] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.947526] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.947663] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:210:24: E225 missing whitespace around operator\n'}
[0.947801] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[0.947939] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.948077] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948215] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:217:13: E225 missing whitespace around operator\n'}
[0.948353] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[0.948507] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.948646] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.948802] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:244:58: E225 missing whitespace around operator\n'}
[0.948944] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[0.949156] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.949375] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.949581] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:247:1: W293 blank line contains whitespace\n'}
[0.949773] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.949971] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.950106] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950243] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:248:1: W293 blank line contains whitespace\n'}
[0.950381] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.950517] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.950655] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950791] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:249:5: E303 too many blank lines (2)\n'}
[0.950929] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self, x, y, z):\n'}
[0.951078] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.951216] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951353] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:254:1: W293 blank line contains whitespace\n'}
[0.951491] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.951629] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.951766] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951903] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:263:30: W291 trailing whitespace\n'}
[0.952039] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[0.952177] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[0.952313] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952461] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:265:42: E225 missing whitespace around operator\n'}
[0.952600] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[0.952738] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.952877] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953015] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:266:65: E261 at least two spaces before inline comment\n'}
[0.953160] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 # has to grab gravity this from yaml\n'}
[0.953313] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.953450] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953587] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:266:100: E501 line too long (101 > 99 characters)\n'}
[0.953725] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 # has to grab gravity this from yaml\n'}
[0.953864] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.954001] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954137] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:283:9: E225 missing whitespace around operator\n'}
[0.954275] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[0.954412] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.954548] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954684] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:285:19: W291 trailing whitespace\n'}
[0.954821] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.954962] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.955084] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955206] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:286:1: W391 blank line at end of file\n'}
[0.955329] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955451] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.955573] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.955694] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[0.955817] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.955940] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.956062] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956184] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[0.956306] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.956474] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.956599] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956722] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[0.956844] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[0.956967] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.957089] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957231] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[0.957407] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[0.957578] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.957701] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957823] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[0.957946] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.958069] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.958191] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958312] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[0.958435] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.958558] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.958679] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958800] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[0.958923] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[0.959050] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.959173] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959295] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[0.959417] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.959540] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.959661] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959783] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[0.959905] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.960027] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.960149] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960270] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[0.960403] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[0.960573] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.960695] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960817] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[0.960939] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.961061] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.961184] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.961307] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.961468] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.961648] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.961794] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.961916] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.962038] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.962161] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.962282] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.962405] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.962527] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.962650] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.962773] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.962897] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.963019] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.963149] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.963271] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.963394] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.963516] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.963638] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[0.963760] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963882] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[0.964003] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.964125] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.964247] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.964369] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.964539] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.964662] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.964784] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.964906] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.965028] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.965150] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.965272] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.965466] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.965626] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.965747] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.965869] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.965993] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.966115] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.966238] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.966363] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.966487] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.966611] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.966734] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[0.966858] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966980] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[0.967103] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.967225] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.967348] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.967470] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.967593] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.967716] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.967839] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.967961] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.968084] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.968207] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.968329] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.968515] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.968639] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.968763] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.968885] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.969013] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.969136] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.969258] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.969381] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.969504] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.969626] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.969748] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[0.969870] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969992] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[0.970125] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.970247] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.970369] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.970492] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.970614] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.970736] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.970858] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.970980] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.971102] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.971225] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.971347] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.971469] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.971591] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.971713] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.971835] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.971958] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.972080] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.972202] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.972324] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.972484] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.972622] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.972744] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.972881] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973005] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[0.973131] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.973256] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.973411] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.973583] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.973722] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.973860] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.973985] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.974111] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.974236] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.974362] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.974488] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.974614] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.974741] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.974878] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.975000] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.975123] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.975247] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.975370] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.975492] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.975616] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.975739] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.975861] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[0.975984] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976106] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[0.976228] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.976379] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.976537] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.976661] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.976783] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.976905] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.977028] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.977150] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.977271] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.977395] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.977517] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.977639] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.977762] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.977899] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.978025] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.978152] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.978278] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.978402] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.978528] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.978663] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.978790] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.978916] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[0.979041] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979171] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[0.979297] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.979422] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.979548] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.979674] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.979799] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.979925] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.980051] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.980205] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.980345] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.980505] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.980631] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.980758] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.980944] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.981082] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.981206] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.981308] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.981408] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.981508] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.981621] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.981721] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.981832] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.981928] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[0.982024] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982120] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[0.982216] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.982311] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.982407] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.982503] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.982599] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.982695] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.982791] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.982886] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.982982] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.983078] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.983174] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.983270] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.983365] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.983461] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.983557] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.983653] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.983755] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.983865] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.983963] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.984062] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.984160] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.984258] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[0.984356] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984505] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[0.984605] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.984704] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.984802] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.984921] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.985020] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.985119] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.985217] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.985340] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.985451] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.985561] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.985675] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.985774] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.985888] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.985989] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.986090] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.986191] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.986293] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.986393] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.986495] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.986595] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.986696] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.986797] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.986898] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986998] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[0.987107] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.987208] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.987309] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987409] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[0.987510] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.987611] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.987711] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987812] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[0.987913] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.988013] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.988114] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988215] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[0.988321] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.988446] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.988531] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988594] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[0.988655] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[0.988717] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.988778] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988898] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[0.988963] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[0.989108] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[0.989180] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989326] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[0.989400] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[0.989478] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.989541] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989603] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[0.989665] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[0.989726] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[0.989800] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989864] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[0.989928] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[0.989993] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[0.990057] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990121] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[0.990185] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[0.990249] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.990327] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990392] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[0.990454] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[0.990519] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[0.990583] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990646] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[0.990710] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[0.990774] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.990851] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990913] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[0.990975] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[0.991038] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.991099] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991167] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[0.991229] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[0.991292] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[0.991354] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991416] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[0.991479] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[0.991542] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[0.991604] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991667] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[0.991729] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[0.991792] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.991854] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991915] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[0.991977] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[0.992039] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.992100] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992163] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[0.992225] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[0.992293] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[0.992356] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992453] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[0.992532] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[0.992595] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[0.992658] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992720] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[0.992782] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.992852] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.992933] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992996] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[0.993059] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[0.993122] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.993187] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993250] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[0.993313] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[0.993376] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.993440] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993502] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[0.993564] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[0.993626] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.993687] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993749] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[0.993823] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[0.993890] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.993950] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994009] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[0.994070] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[0.994130] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.994190] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994249] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[0.994309] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[0.994369] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.994429] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994488] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[0.994549] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[0.994608] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.994667] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994727] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[0.994803] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.994865] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.994928] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994989] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[0.995052] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[0.995115] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.995177] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995239] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[0.995302] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.995366] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[0.995428] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995490] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[0.995553] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.995617] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[0.995679] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995741] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[0.995804] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.995866] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.995929] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995991] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[0.996053] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.996127] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[0.996190] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996253] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[0.996315] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.996378] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[0.996497] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996561] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[0.996623] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.996686] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.996748] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996810] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[0.996924] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.996992] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.997143] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997226] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[0.997289] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.997351] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[0.997414] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997476] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[0.997538] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[0.997600] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.997662] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997723] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[0.997793] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.997856] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.997917] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997978] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[0.998039] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[0.998100] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.998161] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998222] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[0.998283] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.998344] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.998404] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998465] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[0.998526] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[0.998586] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.998647] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998708] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[0.998769] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[0.998847] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.999678] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999844] (-) TimerEvent: {}
[1.000291] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[1.000533] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.000688] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.000868] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001014] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[1.001200] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.001336] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.001451] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001566] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[1.001689] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.001802] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.001916] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002038] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[1.002145] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.002252] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.002359] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002465] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[1.002572] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.002679] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.002785] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002892] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.002999] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.003106] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.003213] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003320] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[1.003427] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.003535] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.003641] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003748] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[1.003855] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.003962] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.004069] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004176] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[1.004283] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.004399] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.004510] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004617] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[1.004725] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.004876] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.004998] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005111] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[1.005225] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.005339] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.005453] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005566] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[1.005687] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.005794] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.005912] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006016] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[1.006120] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.006224] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.006329] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006432] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[1.006537] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.006642] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.006745] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006856] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[1.006960] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.007064] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.007168] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007272] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[1.007376] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.007481] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.007584] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007704] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[1.007811] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.007919] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.008036] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008143] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[1.008250] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.008369] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.008451] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008516] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[1.008580] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.008650] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.008714] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008775] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[1.008838] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.008900] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.008962] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009024] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[1.009086] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.009148] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.009210] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009271] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[1.009332] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.009394] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.009455] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009515] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[1.009576] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.009638] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.009699] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009760] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[1.009834] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.009896] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.009958] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010020] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[1.010083] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.010145] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.010227] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010292] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[1.010357] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.010422] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.010486] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010549] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[1.010614] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.010678] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.010742] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010807] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[1.010872] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.010936] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.011000] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011065] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[1.011130] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.011195] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.011273] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011376] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[1.011501] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.011626] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.011750] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011874] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[1.011998] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.012131] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.012251] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012370] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[1.012506] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.012612] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.012717] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012818] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[1.013013] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.013168] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.013273] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013378] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[1.013484] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013588] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.013693] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013797] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.013902] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.014007] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.014111] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014215] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.014321] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.014426] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.014530] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014634] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.014739] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.014844] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.014956] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015061] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.015161] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.015261] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.015360] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015459] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.015560] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.015659] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.015759] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015858] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.015958] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.016058] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.016157] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016256] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.016356] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.016531] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.016632] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016731] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.016855] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.016983] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.017072] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017160] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.017249] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.017337] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.017425] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017513] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.017602] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.017690] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.017778] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017866] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[1.017954] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.018042] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.018130] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018218] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[1.018306] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.018395] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.018484] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.018573] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.018670] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.018759] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.018848] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.018936] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.019024] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.019113] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.019202] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.019291] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.019380] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.019473] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.019584] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.019684] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.019784] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.019896] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019994] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[1.020095] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.020206] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.020327] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.020467] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.020594] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.020774] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.020951] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.021138] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.021310] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.021412] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.021511] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.021610] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.021708] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.021809] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.021919] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.022028] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.022119] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.022209] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.022300] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022390] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[1.022481] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.022570] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.022660] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022751] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[1.022842] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.022932] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.023022] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023112] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[1.023203] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.023293] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.023383] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023472] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[1.023562] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.023652] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.023757] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023850] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[1.023946] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.024040] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.024134] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024235] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[1.024329] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.024466] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.024572] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024658] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[1.024746] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.024863] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.024955] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025007] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[1.025059] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.025110] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.025161] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025210] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[1.025260] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.025311] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.025367] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025417] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[1.025468] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.025517] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.025567] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025617] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[1.025666] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.025716] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.025766] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025816] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[1.025866] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.025916] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.025966] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026016] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[1.026066] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.026116] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.026165] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026215] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[1.026265] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.026315] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.026365] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026449] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.026506] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.026563] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.026620] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026676] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[1.026741] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.026807] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.026864] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026921] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[1.026977] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.027034] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.027091] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027147] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[1.027204] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.027275] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.027334] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027392] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[1.027450] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.027508] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.027567] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027625] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[1.027684] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.027742] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.027799] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027857] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.027916] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.027974] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.028032] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028089] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.028147] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.028218] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.028275] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028331] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.028435] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.028525] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.028582] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028638] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.028695] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.028751] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.028807] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028960] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.029058] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.029117] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.029175] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029231] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.029288] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.029345] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.029402] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029469] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.029529] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.029579] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.029629] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029679] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.029729] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.029779] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.029829] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029879] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.029935] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.029986] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.030036] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030086] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.030137] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.030188] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.030238] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030288] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.030339] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.030390] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.030465] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030535] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.030611] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.030698] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.030785] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030872] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.030931] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.030989] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.031047] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031105] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.031164] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.031223] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.031281] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031340] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.031399] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.031458] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.031516] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031573] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.031632] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.031691] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.031749] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031820] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.031878] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.031935] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.031993] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032051] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.032115] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.032188] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.032247] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032305] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.032364] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.032505] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.032604] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032701] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.032799] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.032907] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.033369] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033529] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.033659] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.033784] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.033905] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034038] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.034186] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.034329] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.034469] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034607] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.034749] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.034901] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035024] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035148] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.035276] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.035404] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035528] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035654] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.035780] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.035909] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.036033] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036159] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.036284] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.036421] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.036550] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036674] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.036802] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.036926] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037046] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.037170] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.037290] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037413] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[1.037553] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.037687] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037835] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.037992] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.038150] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038301] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038427] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.038573] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.038702] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038839] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038941] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.039044] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.039162] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.039288] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039420] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.039546] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.039712] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.039865] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040012] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.040157] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.040294] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040453] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040611] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.040774] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.040939] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041074] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041240] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.041390] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.041552] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041684] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041807] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.041932] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.042054] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.042179] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042302] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.042426] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.042550] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.042677] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042810] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.042970] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.043129] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043343] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.043556] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.043733] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.043891] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044055] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.044216] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.044395] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.044548] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044662] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.044775] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.044893] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.045013] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045149] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.045279] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.045402] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.045517] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.045694] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.045863] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.046051] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.046234] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.046419] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.046608] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.046780] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.046928] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.047051] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.047177] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.047298] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.047418] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047539] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.047660] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.047776] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.047911] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.048041] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.048164] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.048289] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.048426] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.048581] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.048734] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.048910] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.049058] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.049211] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.049362] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.049513] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.049663] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049817] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.049971] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.050115] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.050253] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050392] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.050522] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.050668] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.050807] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050942] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.051079] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.051209] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.051339] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051471] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.051605] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.051737] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.051887] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052027] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.052192] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.052352] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.052532] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052681] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.052817] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.052961] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.053070] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053181] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.053291] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.053408] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.053528] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053650] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.053770] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.053904] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.054018] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054136] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.054250] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.054360] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.054471] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054590] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.054706] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.054821] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.054955] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055079] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.055196] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.055313] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.055444] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055562] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.055699] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.055824] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.055941] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.056055] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056173] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.056292] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.056415] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.056537] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056654] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.056771] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.056909] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.057035] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057163] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.057304] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.057441] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.057560] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057680] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.057815] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.057925] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058034] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.058142] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.058262] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.058375] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058478] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.058613] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.058730] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.058850] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058965] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.059047] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.059111] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.059176] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059237] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.059301] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.059362] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.059422] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059482] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.059545] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.059612] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.059671] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059729] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.059790] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.059850] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.059909] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059968] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.060028] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.060087] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.060163] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060226] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.060290] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.060353] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.060438] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.060506] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.060570] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.060634] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.060699] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060763] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.060827] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.060892] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.060956] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061020] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.061100] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.061209] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.061287] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061391] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.061496] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.061600] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.061703] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061806] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.061910] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.062014] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.062119] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062222] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.062325] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.062428] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.062533] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062636] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.062739] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.062841] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062943] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.063048] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.063151] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.063254] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063357] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.063468] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.063571] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.063695] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.063812] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.063928] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.064043] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.064160] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.064272] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064392] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.064513] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.064630] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.064746] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.064863] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.064979] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.065094] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.065208] (turtle_brick) StderrLine: {'line': b'\n'}
[1.065322] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.065436] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.065550] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.065664] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.065779] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.065894] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066008] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.066124] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.066239] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.066355] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066481] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.066586] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.066734] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.066863] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067007] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.067187] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.067321] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067444] (turtle_brick) StdoutLine: {'line': b'1     E128 continuation line under-indented for visual indent\n'}
[1.067567] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.067690] (turtle_brick) StdoutLine: {'line': b'27    E225 missing whitespace around operator\n'}
[1.067812] (turtle_brick) StdoutLine: {'line': b"47    E231 missing whitespace after ','\n"}
[1.067944] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.068059] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.068174] (turtle_brick) StdoutLine: {'line': b"2     E262 inline comment should start with '# '\n"}
[1.068290] (turtle_brick) StdoutLine: {'line': b"24    E265 block comment should start with '# '\n"}
[1.068411] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.068536] (turtle_brick) StdoutLine: {'line': b'6     E302 expected 2 blank lines, found 0\n'}
[1.068639] (turtle_brick) StdoutLine: {'line': b'6     E303 too many blank lines (2)\n'}
[1.068742] (turtle_brick) StdoutLine: {'line': b'9     E501 line too long (115 > 99 characters)\n'}
[1.068867] (turtle_brick) StdoutLine: {'line': b"27    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.069000] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.069148] (turtle_brick) StdoutLine: {'line': b'35    W291 trailing whitespace\n'}
[1.069323] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.069462] (turtle_brick) StdoutLine: {'line': b'23    W293 blank line contains whitespace\n'}
[1.069568] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.069673] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069778] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.069903] (turtle_brick) StdoutLine: {'line': b'224 errors\n'}
[1.070017] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070130] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 130\n"}
[1.070253] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 28\n"}
[1.070365] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 66\n"}
[1.070478] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070589] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.070701] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070826] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.070946] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.071067] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.071187] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.071307] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.071426] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.071564] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.071721] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.071879] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.071994] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.072097] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.072199] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.072301] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.072411] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.072519] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.072622] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.072725] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.072845] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.072955] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.073064] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.073172] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.073280] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.073388] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.073497] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.073605] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.073712] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.073820] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.073936] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.074037] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.074138] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.074246] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.074348] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.074449] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.074554] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.074656] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D208: Docstring is over-indented\n'}
[1.074757] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.074859] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:16 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.074963] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.075065] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.075167] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.075267] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.075369] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.075480] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.075582] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.075684] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.075809] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.075918] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.076027] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.076131] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.076234] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.076337] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.076453] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.076561] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.076664] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.076766] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.076903] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.077026] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.077163] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.077336] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.077445] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.077555] (turtle_brick) StdoutLine: {'line': b'21 errors\n'}
[1.077665] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.077774] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.077900] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 224 code styl...\n'}
[1.078003] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.078106] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.41s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.078211] (turtle_brick) CommandEnded: {'returncode': 1}
[1.078619] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.078655] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.079059] (-) EventReactorShutdown: {}
