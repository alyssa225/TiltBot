[0.000000] (-) TimerEvent: {}
[0.000571] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000631] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000968] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.009816] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.098837] (-) TimerEvent: {}
[0.199151] (-) TimerEvent: {}
[0.246928] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.260576] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.267256] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.267505] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.267617] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.267707] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.268031] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.268148] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1910 - Experimental\n'}
[0.268248] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.268342] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.268405] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.268715] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.268933] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.269005] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.269070] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.269159] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.269234] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.269319] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.269390] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.269460] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.269533] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.269621] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299274] (-) TimerEvent: {}
[0.321625] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.321799] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.383126] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.383276] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.383388] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.383501] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.391153] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.391504] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.398615] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.399034] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.399232] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.399352] (-) TimerEvent: {}
[0.399494] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.399685] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.399820] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.453587] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.453764] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.499475] (-) TimerEvent: {}
[0.529624] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.529872] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.533982] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.534179] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.534359] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.540941] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.541093] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.541216] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.551072] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.551392] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.559470] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.16 sec\n'}
[0.560092] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.560284] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.560435] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.560558] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.560709] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.560892] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.29 sec*proc (2 tests)\n'}
[0.561061] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.16 sec*proc (1 test)\n'}
[0.561211] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.561324] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.29 sec\n'}
[0.561440] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.561527] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.561653] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.581596] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.581784] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.581889] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.583598] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.584111] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.584154] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.599607] (-) TimerEvent: {}
[0.614360] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.614667] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.614961] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.622688] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.623605] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.699704] (-) TimerEvent: {}
[0.800277] (-) TimerEvent: {}
[0.824519] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.887790] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.888035] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.888161] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.888340] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.888463] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.900382] (-) TimerEvent: {}
[0.922289] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.922744] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 288 code style errors / warnings:\x1b[0m\n'}
[0.923222] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:14:82: W291 trailing whitespace\x1b[0m\n'}
[0.923658] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:15:13: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.924093] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:15:100: E501 line too long (104 > 99 characters)\x1b[0m\n'}
[0.925553] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:18:7: W291 trailing whitespace\x1b[0m\n'}
[0.926717] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:20:43: E231 missing whitespace after ','\x1b[0m\n"}
[0.930042] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:24:45: W291 trailing whitespace\x1b[0m\n'}
[0.930286] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:26:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.930389] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\x1b[0m\n"}
[0.930463] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.930535] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\x1b[0m\n"}
[0.930697] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.930854] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\x1b[0m\n"}
[0.930976] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:12:42: W291 trailing whitespace\x1b[0m\n'}
[0.931051] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\x1b[0m\n"}
[0.931122] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.931192] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.931262] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.931330] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:39:53: W291 trailing whitespace\x1b[0m\n'}
[0.931399] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.931467] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:50:33: W291 trailing whitespace\x1b[0m\n'}
[0.931549] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.931621] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.931690] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.931758] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.931827] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.931895] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.931965] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.932033] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.932101] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.932177] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.932270] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.932342] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.932425] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.932493] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.932560] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.932628] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.932695] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.932763] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\x1b[0m\n"}
[0.932830] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.932910] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.932974] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.933037] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.933112] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933174] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933237] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.933299] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.933360] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:192:26: W291 trailing whitespace\x1b[0m\n'}
[0.933422] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\x1b[0m\n"}
[0.933483] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\x1b[0m\n"}
[0.933550] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\x1b[0m\n"}
[0.933613] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\x1b[0m\n"}
[0.933742] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.933858] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.933946] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.934011] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\x1b[0m\n"}
[0.934075] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.934137] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.934207] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.934269] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\x1b[0m\n"}
[0.934331] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\x1b[0m\n'}
[0.934393] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.934455] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\x1b[0m\n'}
[0.934530] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.934596] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.934658] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.934718] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\x1b[0m\n"}
[0.934779] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.934839] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.934899] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.934959] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.935020] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.935080] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:272:30: W291 trailing whitespace\x1b[0m\n'}
[0.935141] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\x1b[0m\n'}
[0.935202] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.935263] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\x1b[0m\n"}
[0.935323] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.935383] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\x1b[0m\n'}
[0.935443] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:294:19: W291 trailing whitespace\x1b[0m\n'}
[0.935503] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:295:1: W391 blank line at end of file\x1b[0m\n'}
[0.935562] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.935634] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.935694] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[0.935753] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.935813] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.935879] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.935938] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[0.936013] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[0.936074] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.936136] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.936197] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[0.936277] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[0.936341] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[0.936402] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[0.936464] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[0.936525] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[0.936588] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[0.936650] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[0.936712] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[0.936774] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.936836] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[0.936914] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.936980] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.937045] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.937111] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.937175] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.937247] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.937314] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.937379] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.937445] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.937509] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.937573] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.937734] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.937799] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.937864] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.937929] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.937994] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.938059] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[0.938124] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.938188] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.938252] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[0.938317] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[0.938380] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.938444] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.938508] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.938572] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.938648] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.938713] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.938778] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.938843] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.938908] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.938985] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[0.939048] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[0.939112] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.939176] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.939239] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[0.939302] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.939366] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.939430] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.939511] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.939575] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.939638] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.939701] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.939764] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.939828] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.939906] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.939979] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.940046] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.940112] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.940177] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.940266] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.940338] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.940405] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[0.940471] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[0.940537] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[0.940603] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.940669] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[0.940734] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.940799] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[0.940863] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.940929] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.940994] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[0.941059] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[0.941124] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.941189] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[0.941261] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.941326] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[0.941391] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[0.941455] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.941521] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.941598] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.941674] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.941830] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[0.941949] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.942043] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[0.942146] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[0.942215] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.942279] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.942343] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.942405] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.942468] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.942529] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.942591] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.942654] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.942716] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.942787] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.942850] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.942912] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.942974] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.943035] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.943097] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.943165] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.943227] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.943288] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.943349] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.943410] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.943471] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.943533] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.943594] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.943656] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.943717] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.943780] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.943842] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.943918] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.943982] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.944045] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.944108] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.944171] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.944256] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.944330] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.944393] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.944456] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.944519] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.944582] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.944646] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.944722] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.944786] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.944849] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.944918] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.944990] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.945048] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.945106] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.945164] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.945222] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.945295] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.945355] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.945415] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.945474] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.945541] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.945601] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.945661] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.945720] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.945780] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.945839] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.945912] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.945973] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.946035] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.946096] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.946157] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.946218] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.946280] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.946340] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.946401] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.946463] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.946524] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.946585] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.946653] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.946715] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.946777] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.946839] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.946902] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.946988] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.947062] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.947135] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.947209] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.947283] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.947357] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.947430] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.947505] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.947580] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.947673] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.947749] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.947822] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.947915] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.947995] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.948076] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.948157] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.948258] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.948357] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.948438] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.948516] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.948606] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.948684] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.948763] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.948841] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.948919] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.949007] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.949075] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.949142] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.949209] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.949275] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.949342] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.949409] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.949476] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.949541] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.949606] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.949671] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.949735] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.949800] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.949865] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.949930] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.949997] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950065] (turtle_brick) StdoutLine: {'line': b'./setup.py:14:82: W291 trailing whitespace\n'}
[0.950148] (turtle_brick) StdoutLine: {'line': b"        ('share/' + package_name, ['package.xml', 'launch/show_turtle.launch.py', \n"}
[0.950274] (turtle_brick) StdoutLine: {'line': b'                                                                                 ^\n'}
[0.950375] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950446] (turtle_brick) StdoutLine: {'line': b'./setup.py:15:13: E128 continuation line under-indented for visual indent\n'}
[0.950515] (turtle_brick) StdoutLine: {'line': b"            'config/turtle_urdf.rviz', 'launch/run_turtle.launch.py', 'launch/turtle_arena.launch.py']),\n"}
[0.950583] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.950651] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.950718] (turtle_brick) StdoutLine: {'line': b'./setup.py:15:100: E501 line too long (104 > 99 characters)\n'}
[0.950798] (turtle_brick) StdoutLine: {'line': b"            'config/turtle_urdf.rviz', 'launch/run_turtle.launch.py', 'launch/turtle_arena.launch.py']),\n"}
[0.950866] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.950948] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951017] (turtle_brick) StdoutLine: {'line': b'./setup.py:18:7: W291 trailing whitespace\n'}
[0.951085] (turtle_brick) StdoutLine: {'line': b'    ], \n'}
[0.951153] (turtle_brick) StdoutLine: {'line': b'      ^\n'}
[0.951221] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951289] (turtle_brick) StdoutLine: {'line': b"./setup.py:20:43: E231 missing whitespace after ','\n"}
[0.951357] (turtle_brick) StdoutLine: {'line': b"    install_requires=['setuptools', 'urdf','rviz'],\n"}
[0.951426] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[0.951494] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951562] (turtle_brick) StdoutLine: {'line': b'./setup.py:24:45: W291 trailing whitespace\n'}
[0.951630] (turtle_brick) StdoutLine: {'line': b"    description='TODO: Package description', \n"}
[0.951699] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.951767] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.951835] (turtle_brick) StdoutLine: {'line': b"./setup.py:26:28: E231 missing whitespace after ','\n"}
[0.951927] (turtle_brick) StdoutLine: {'line': b"    tests_require=['pytest','ament_lint_auto'],\n"}
[0.951991] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.952055] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952119] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\n"}
[0.952183] (turtle_brick) StdoutLine: {'line': b'from xmlrpc.client import Boolean\n'}
[0.952272] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.952336] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952397] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[0.952467] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[0.952549] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.952624] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952685] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\n"}
[0.952747] (turtle_brick) StdoutLine: {'line': b'from math import pi\n'}
[0.952809] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.952871] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.952947] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[0.953008] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.953069] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.953129] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953190] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\n"}
[0.953252] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt\n'}
[0.953312] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.953372] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953432] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:12:42: W291 trailing whitespace\n'}
[0.953493] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.953554] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.953616] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953676] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\n"}
[0.953738] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import MarkerArray\n'}
[0.953805] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.953879] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.953946] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\n"}
[0.954013] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.954079] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.954145] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954210] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\n'}
[0.954277] (turtle_brick) StdoutLine: {'line': b'class BState(Enum):\n'}
[0.954343] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.954409] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954475] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\n'}
[0.954542] (turtle_brick) StdoutLine: {'line': b'class Arena(Node):\n'}
[0.954608] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.954673] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.954739] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:39:53: W291 trailing whitespace\n'}
[0.954806] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.954872] (turtle_brick) StdoutLine: {'line': b'    Creates the arena and places brick when called in command line.\n'}
[0.954950] (turtle_brick) StdoutLine: {'line': b'    Will drop the robot when called in command line.\n'}
[0.955012] (turtle_brick) StdoutLine: {'line': b'        -if robot is underneath the brick, the brick will land on the robot\n'}
[0.955074] (turtle_brick) StdoutLine: {'line': b'        -if nothing is under brick, brick will land on ground\n'}
[0.955136] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.955198] (turtle_brick) StdoutLine: {'line': b'        -robot_sub: continuous robot position\n'}
[0.955260] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.955322] (turtle_brick) StdoutLine: {'line': b'        -marker_pub: publishes walls and brick\n'}
[0.955385] (turtle_brick) StdoutLine: {'line': b'        -drop_pub: sends placement, drop coordinates  \n'}
[0.955448] (turtle_brick) StdoutLine: {'line': b'        -platform_pub: sends true if platform is under brick\n'}
[0.955510] (turtle_brick) StdoutLine: {'line': b'    SERVICES:\n'}
[0.955573] (turtle_brick) StdoutLine: {'line': b'        -Place: place brick at x, y, z location\n'}
[0.955636] (turtle_brick) StdoutLine: {'line': b'        -Drop: Empty drops brick\n'}
[0.955698] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.955761] (turtle_brick) StdoutLine: {'line': b'        -world_brick: connects brick to world\n'}
[0.955825] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.955888] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.955950] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.956013] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956075] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\n"}
[0.956138] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.956200] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.956280] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956345] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:50:33: W291 trailing whitespace\n'}
[0.956408] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.956472] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.956535] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956598] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\n"}
[0.956661] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.956724] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.956787] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.956851] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\n"}
[0.956915] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.957005] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.957070] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957134] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\n"}
[0.957199] (turtle_brick) StdoutLine: {'line': b'        #setting state of brick\n'}
[0.957264] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.957328] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957393] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\n"}
[0.957458] (turtle_brick) StdoutLine: {'line': b'        #set up subscribers\n'}
[0.957522] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.957587] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957652] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\n"}
[0.957716] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.957781] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.957867] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.957971] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\n"}
[0.958067] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.958135] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.958201] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958266] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\n"}
[0.958332] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.958397] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[0.958470] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958536] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\n"}
[0.958600] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[0.958665] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.958730] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.958795] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\n"}
[0.958859] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.958940] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.959009] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959100] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\n"}
[0.959215] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.959291] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.959366] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959462] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\n"}
[0.959552] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.959625] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.959697] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.959769] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\n"}
[0.959841] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.959926] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.959991] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960063] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\n"}
[0.960128] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.960194] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.960279] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960347] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\n"}
[0.960413] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.960481] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.960547] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960612] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\n'}
[0.960678] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.960743] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.960809] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.960874] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\n'}
[0.960952] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.961014] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.961075] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961135] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\n"}
[0.961197] (turtle_brick) StdoutLine: {'line': b'        #initialize services\n'}
[0.961258] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.961319] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961380] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\n"}
[0.961441] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.961502] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[0.961562] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961623] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\n"}
[0.961683] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.961744] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.961804] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.961864] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\n"}
[0.961938] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.962001] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.962064] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962126] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\n"}
[0.962189] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.962251] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.962314] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962375] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\n'}
[0.962438] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.962500] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.962562] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962623] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\n"}
[0.962685] (turtle_brick) StdoutLine: {'line': b'        #creating brick marker\n'}
[0.962748] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.962809] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.962871] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\n"}
[0.962934] (turtle_brick) StdoutLine: {'line': b'        #creating wall markers\n'}
[0.963007] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.963070] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963131] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\n'}
[0.963194] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.963256] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.963318] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963381] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\n"}
[0.963444] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.963507] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.963569] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963633] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:192:26: W291 trailing whitespace\n'}
[0.963696] (turtle_brick) StdoutLine: {'line': b'        self.brickz = 0.0 \n'}
[0.963758] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[0.963821] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963883] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\n"}
[0.963959] (turtle_brick) StdoutLine: {'line': b'        self.wall = self.create_timer(0.5,self.wall_callback)\n'}
[0.964019] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.964078] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964137] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\n"}
[0.964196] (turtle_brick) StdoutLine: {'line': b'    def place_callback(self, request,response):\n'}
[0.964287] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.964367] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964426] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\n"}
[0.964492] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.964552] (turtle_brick) StdoutLine: {'line': b'                                  ^\n'}
[0.964611] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964670] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\n"}
[0.964730] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.964789] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.964847] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964923] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\n'}
[0.964987] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.965052] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.965116] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965180] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\n"}
[0.965245] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.965309] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.965373] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965436] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\n'}
[0.965501] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[0.965564] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.965628] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965691] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\n"}
[0.965755] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.965818] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.965902] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966013] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\n"}
[0.966143] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.966218] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.966287] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966355] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\n"}
[0.966423] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.966491] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.966558] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966626] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\n"}
[0.966693] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.966776] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.966845] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966911] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\n"}
[0.966988] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self, request,response):\n'}
[0.967051] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[0.967117] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967180] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\n'}
[0.967244] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[0.967307] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.967369] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967432] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\n"}
[0.967495] (turtle_brick) StdoutLine: {'line': b'        #publishing wall markers\n'}
[0.967559] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.967622] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967685] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\n'}
[0.967749] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[0.967812] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.967875] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967938] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\n'}
[0.968000] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.968062] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.968125] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968188] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\n'}
[0.968298] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.968363] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.968425] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968506] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\n'}
[0.968582] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.968646] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.968709] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968771] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\n"}
[0.968834] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.968897] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.968959] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969021] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\n"}
[0.969083] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.969146] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.969215] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969277] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\n"}
[0.969340] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.969403] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.969466] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969527] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\n'}
[0.969589] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.969651] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.969713] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969774] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\n"}
[0.969837] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.969897] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.970012] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970129] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\n"}
[0.970248] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.970318] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.970385] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970452] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:272:30: W291 trailing whitespace\n'}
[0.970517] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[0.970583] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[0.970648] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970714] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\n'}
[0.970779] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[0.970846] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.970940] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971012] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\n'}
[0.971085] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.971157] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.971228] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971299] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\n"}
[0.971371] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.971443] (turtle_brick) StdoutLine: {'line': b'                                                                 ^\n'}
[0.971514] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971585] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\n'}
[0.971656] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.971728] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.971799] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971870] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\n'}
[0.971951] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[0.972016] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.972083] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972148] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:294:19: W291 trailing whitespace\n'}
[0.972213] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.972293] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.972360] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972433] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:295:1: W391 blank line at end of file\n'}
[0.972498] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972561] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.972625] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972688] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[0.972753] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.972817] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.972881] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972961] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[0.973030] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.973098] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.973166] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973233] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[0.973301] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[0.973369] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.973438] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973505] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[0.973574] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[0.973643] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.973711] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973778] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[0.973893] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.974032] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.974147] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974260] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[0.974364] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.974438] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.974509] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974578] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[0.974647] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[0.974716] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.974784] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974853] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[0.974922] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.975001] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.975063] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975125] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[0.975204] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.975266] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.975328] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975390] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[0.975453] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[0.975514] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.975576] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975638] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[0.975700] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.975762] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.975824] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.975892] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.975953] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.976014] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.976077] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.976138] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.976200] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.976278] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.976342] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.976405] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.976467] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.976530] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.976593] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.976656] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.976719] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.976781] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.976844] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.976912] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.976975] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.977037] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[0.977100] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977162] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[0.977224] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.977286] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.977349] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.977412] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.977475] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.977538] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.977615] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.977680] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.977745] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.977810] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.977873] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.977954] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.978020] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.978085] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.978151] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.978217] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.978283] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.978350] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.978417] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.978483] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.978557] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.978624] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[0.978690] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978757] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[0.978823] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.978902] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.978963] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.979026] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.979088] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.979150] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.979213] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.979275] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.979337] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.979399] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.979462] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.979524] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.979586] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.979649] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.979711] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.979774] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.979837] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.979899] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.979961] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.980024] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.980086] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.980148] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[0.980209] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980290] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[0.980355] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.980417] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.980480] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.980543] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.980604] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.980667] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.980730] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.980793] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.980856] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.980933] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.981000] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.981066] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.981132] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.981198] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.981287] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.981355] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.981422] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.981488] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.981554] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.981621] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.981688] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.981754] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.981821] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981889] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[0.981985] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.982100] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.982213] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.982290] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.982362] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.982434] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.982504] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.982575] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.982646] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.982716] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.982787] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.982856] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.982937] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.983003] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.983069] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.983135] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.983201] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.983266] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.983331] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.983397] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.983463] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.983528] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[0.983593] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983659] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[0.983725] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.983790] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.983856] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.983921] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.983999] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.984062] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.984124] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.984186] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.984276] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.984341] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.984404] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.984467] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.984530] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.984593] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.984656] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.984719] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.984782] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.984845] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.984908] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.984970] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.985033] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.985096] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[0.985159] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985221] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[0.985283] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.985346] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.985408] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.985471] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.985534] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.985596] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.985659] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.985721] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.985784] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.985847] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.985927] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.985996] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.986064] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.986132] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.986201] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.986269] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.986338] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.986406] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.986476] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.986544] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.986612] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.986680] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[0.986748] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986817] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[0.986897] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.986962] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.987038] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.987105] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.987178] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.987246] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.987313] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.987378] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.987443] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.987521] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.987587] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.987654] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.987720] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.987786] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.987851] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.987918] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.987984] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.988052] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.988118] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.988183] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.988268] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.988336] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[0.988401] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988468] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[0.988533] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.988598] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.988664] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.988731] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.988796] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.988863] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.988928] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.988993] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.989058] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.989123] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.989187] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.989251] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.989362] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.989487] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.989560] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.989632] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.989700] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.989767] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.989835] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.989978] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.990052] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.990122] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.990191] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990260] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[0.990330] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.990398] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.990466] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990534] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[0.990603] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.990672] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.990741] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990809] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[0.990878] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.990959] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.991023] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991087] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[0.991151] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.991215] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.991279] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991342] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[0.991406] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[0.991471] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.991535] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991598] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[0.991662] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[0.991725] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[0.991789] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991853] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[0.991916] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[0.991980] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.992044] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992108] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[0.992171] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[0.992246] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[0.992316] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992380] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[0.992451] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[0.992516] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[0.992580] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992644] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[0.992708] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[0.992777] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.992841] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992920] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[0.992988] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[0.993058] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[0.993126] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993194] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[0.993262] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[0.993330] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.993399] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993466] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[0.993537] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[0.993619] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.993704] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993772] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[0.993840] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[0.993909] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[0.993987] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994049] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[0.994112] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[0.994176] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[0.994240] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994303] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[0.994365] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[0.994427] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.994489] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994551] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[0.994613] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[0.994675] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.994737] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994798] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[0.994859] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[0.994942] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[0.995006] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995120] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[0.995202] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[0.995271] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[0.995332] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995423] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[0.995501] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.995567] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.995632] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995696] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[0.995762] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[0.995827] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.995904] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995971] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[0.996038] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[0.996105] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.996172] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996248] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[0.996319] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[0.996386] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.996452] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996518] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[0.996585] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[0.996651] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.996717] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996784] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[0.996850] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[0.996929] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.996992] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997055] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[0.997119] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[0.997183] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.997246] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997309] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[0.997373] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[0.997436] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.997498] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997561] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[0.997625] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.997688] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.997752] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997816] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[0.997885] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[0.998019] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.998130] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998217] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[0.998283] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.998348] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[0.998411] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998473] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[0.998536] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.998599] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[0.998670] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998732] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[0.998795] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.998857] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.998919] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998981] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[0.999043] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[0.999105] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[0.999167] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999229] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[0.999291] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.999353] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[0.999415] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999475] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[0.999537] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.999599] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.999660] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999721] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[0.999782] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[0.999856] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.999918] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999980] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[1.000042] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.000104] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.000165] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000239] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[1.000308] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.000369] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.000428] (-) TimerEvent: {}
[1.000522] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000591] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[1.000653] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.000715] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.000776] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000837] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[1.000899] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[1.000961] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.001022] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001084] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[1.001146] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.001207] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.001268] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001328] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[1.001390] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.001458] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.001519] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001579] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[1.001641] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.001701] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.001761] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001821] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[1.001882] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.001956] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.002013] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002070] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[1.002128] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.002185] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.002242] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002324] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[1.002396] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.002453] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.002509] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002566] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[1.002622] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.002679] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.002738] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002796] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[1.002855] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.002930] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.002993] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003056] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.003119] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.003182] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.003254] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003318] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[1.003382] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.003446] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.003509] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003573] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[1.003636] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.003700] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.003763] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003828] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[1.004324] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.004911] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.005562] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005955] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[1.006056] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.006152] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.006265] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006387] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[1.006498] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.006588] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.006650] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006710] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[1.006769] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.006828] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.006886] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006965] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[1.007034] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.007109] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.007167] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007225] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[1.007283] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.007341] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.007399] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007456] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[1.007514] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.007572] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.007630] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007687] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[1.007745] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.007803] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.007860] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007932] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[1.007992] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.008051] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.008111] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008170] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[1.008269] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.008391] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.008500] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008610] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[1.008722] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.008833] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.008943] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009060] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[1.009182] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.009376] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.009543] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.009655] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[1.009766] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.009878] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.009988] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010098] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[1.010237] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.010340] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.010443] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.010545] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[1.010672] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.010797] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.010922] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011057] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[1.011168] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.011279] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.011389] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011498] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[1.011609] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.011720] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.011831] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011941] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[1.012062] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.012166] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.012318] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012417] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[1.012520] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.012618] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.012715] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012811] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[1.012909] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.013006] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.013103] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013200] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[1.013298] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.013395] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.013492] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.013589] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[1.013686] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.013783] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.013880] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014012] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[1.014156] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.014289] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.014414] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.014538] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[1.014653] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.014772] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.014891] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015015] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[1.015127] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.015225] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.015329] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015427] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[1.015525] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015623] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.015721] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015818] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.015915] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.016013] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.016110] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016207] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.016354] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.016453] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.016550] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.016648] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.016746] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.016844] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.016941] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017039] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.017136] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.017234] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.017331] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017428] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.017525] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.017623] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.017720] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017817] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.017928] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.018023] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.018118] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018213] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.018309] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.018404] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.018499] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018594] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.018690] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.018785] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.018880] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019002] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.019115] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.019210] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.019305] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019400] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.019495] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.019591] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.019685] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019780] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[1.019875] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.019971] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.020071] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020166] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[1.020295] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.020410] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.020506] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.020601] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.020696] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.020792] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.020887] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.020982] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.021077] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.021173] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.021269] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.021364] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.021465] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.021559] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.021651] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.021760] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.021869] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.021977] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022173] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[1.022316] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.022413] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.022545] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.022689] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.022832] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.022986] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.023108] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.023205] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.023302] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.023400] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.023498] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.023595] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.023693] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.023802] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.023895] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.023986] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.024079] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.024171] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.024300] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024410] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[1.024503] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.024595] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.024693] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024785] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[1.024901] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.025022] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.025114] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025206] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[1.025299] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.025392] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.025484] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025576] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[1.025695] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.025806] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.025898] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025990] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[1.026082] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.026174] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.026266] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026358] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[1.026481] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.026591] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.026701] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026811] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[1.026935] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.027062] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.027198] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027315] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[1.027437] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.027529] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.027604] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027677] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[1.027749] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.027820] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.027893] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027977] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[1.028041] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.028105] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.028169] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028245] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[1.028316] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.028381] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.028444] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028507] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[1.028570] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.028634] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.028710] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028773] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[1.028837] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.028899] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.028963] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029026] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[1.029090] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.029153] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.029218] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029278] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.029401] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.029502] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.029583] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029648] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[1.029713] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.029785] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.029850] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029914] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[1.029978] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.030043] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.030106] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030166] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[1.030229] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.030291] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.030355] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030419] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[1.030483] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.030548] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.030623] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030687] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[1.030750] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.030814] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.030878] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030940] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.031002] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.031066] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.031130] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031193] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.031258] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.031321] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.031385] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031455] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.031519] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.031582] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.031644] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031706] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.031769] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.031831] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.031894] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031956] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.032019] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.032081] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.032143] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032205] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.032283] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.032347] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.032409] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032472] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.032535] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.032598] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.032660] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032723] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.032787] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.032850] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.032913] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032976] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.033039] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.033102] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.033165] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033228] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.033292] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.033356] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.033420] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033483] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.033547] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.033611] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.033674] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033737] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.033801] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.033864] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.033927] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033990] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.034053] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.034117] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.034180] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034243] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.034306] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.034368] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.034431] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034500] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.034563] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.034626] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.034690] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034752] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.034815] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.034879] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.034940] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035003] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.035066] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.035135] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.035199] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035261] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.035324] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.035388] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.035451] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035513] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.035576] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.035639] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.035701] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035764] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.035828] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.035892] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.035955] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036017] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.036081] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.036144] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.036207] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036284] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.036348] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.036411] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.036487] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036550] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.036614] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.036677] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.036741] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036803] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.036873] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.036936] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.037000] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037063] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.037127] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.037191] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.037254] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037316] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.037380] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.037444] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.037507] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037570] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.037634] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.037698] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037761] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.037824] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.037888] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037950] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[1.038050] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.038168] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038277] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.038393] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.038470] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038539] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038607] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.038688] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.038752] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038816] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038880] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.038943] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.039007] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.039071] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039135] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.039202] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.039266] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.039329] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039392] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.039455] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.039578] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.039709] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039784] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.039850] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.039915] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.039979] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040042] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.040106] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.040184] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040518] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040578] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.040636] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.040694] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040751] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040809] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.040873] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.040931] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.040988] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041045] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.041102] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.041160] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041217] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.041274] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.041335] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041393] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041449] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.041506] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.041563] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.041621] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041677] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.041735] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.041792] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041848] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041905] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.041962] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.042018] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.042075] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.042131] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.042187] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.042242] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.042298] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.042353] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.042409] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.042465] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.042520] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.042576] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.042631] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.042686] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.042742] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042798] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.042853] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.042922] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.043008] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.043091] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.043150] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.043215] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.043275] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.043334] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.043394] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.043454] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.043513] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.043573] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.043632] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.043691] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.043750] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043809] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.043869] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.043928] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.043988] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044047] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.044106] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.044166] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.044247] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044324] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.044397] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.044467] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.044528] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044587] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.044647] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.044706] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.044765] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044824] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.044883] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.044942] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.045001] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045059] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.045118] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.045178] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.045238] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045297] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.045356] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.045415] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.045474] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045532] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.045592] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.045651] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.045715] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045774] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.045860] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.045932] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.046001] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046132] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.046243] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.046320] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.046393] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046464] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.046536] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.046607] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.046679] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046750] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.046820] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.046890] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.046963] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047034] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.047114] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.047176] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.047238] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047299] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.047361] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.047423] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.047486] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047548] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.047610] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.047672] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.047733] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047794] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.047856] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.047918] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047996] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.048055] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.048116] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.048175] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048271] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.048375] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.048434] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.048492] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048550] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.048608] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.048667] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.048725] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048783] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.048841] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.048898] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.048956] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049012] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.049066] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.049182] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.049329] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049469] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.049593] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.049715] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.049892] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050013] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.050151] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.050303] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.050420] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050549] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.050664] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.050779] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.050894] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.051042] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.051173] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.051288] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.051403] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051518] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.051633] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.051748] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.051893] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052028] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.052169] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.052343] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.052459] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052573] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.052689] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.052804] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.052919] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053041] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.053153] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.053259] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.053367] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053473] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.053581] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.053687] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.053794] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053900] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.054034] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.054187] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054310] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.054435] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.054542] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.054648] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054755] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.054862] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.054990] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.055114] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.055220] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.055326] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.055433] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.055539] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.055645] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055752] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.055858] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.055964] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.056070] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.056177] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.056342] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.056462] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.056579] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.056696] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056910] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.057060] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.057188] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.057294] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057400] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.057541] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.057668] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.057774] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057880] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.057987] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.058094] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058200] (turtle_brick) StdoutLine: {'line': b'2     E128 continuation line under-indented for visual indent\n'}
[1.058307] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.058413] (turtle_brick) StdoutLine: {'line': b'27    E225 missing whitespace around operator\n'}
[1.058520] (turtle_brick) StdoutLine: {'line': b"79    E231 missing whitespace after ','\n"}
[1.058627] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.058738] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.058891] (turtle_brick) StdoutLine: {'line': b"3     E262 inline comment should start with '# '\n"}
[1.059074] (turtle_brick) StdoutLine: {'line': b"34    E265 block comment should start with '# '\n"}
[1.059236] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.059401] (turtle_brick) StdoutLine: {'line': b'8     E302 expected 2 blank lines, found 0\n'}
[1.059631] (turtle_brick) StdoutLine: {'line': b'7     E303 too many blank lines (2)\n'}
[1.059780] (turtle_brick) StdoutLine: {'line': b'10    E501 line too long (115 > 99 characters)\n'}
[1.059901] (turtle_brick) StdoutLine: {'line': b"33    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.060023] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.060191] (turtle_brick) StdoutLine: {'line': b'42    W291 trailing whitespace\n'}
[1.060383] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.060516] (turtle_brick) StdoutLine: {'line': b'26    W293 blank line contains whitespace\n'}
[1.060640] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.060764] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060899] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.061006] (turtle_brick) StdoutLine: {'line': b'288 errors\n'}
[1.061113] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061219] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 178\n"}
[1.061326] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 34\n"}
[1.061432] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 76\n"}
[1.061538] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061645] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.061752] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061857] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.061964] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.062119] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.062287] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.062411] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.062543] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.062649] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.062755] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.062876] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.063010] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.063131] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.063252] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.063373] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.063494] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.063635] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.063760] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.063894] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.064020] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.064157] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.064353] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.064468] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.064586] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.064699] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.064811] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.064923] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.065036] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.065148] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.065283] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.065444] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.065640] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.065835] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.065995] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.066119] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.066255] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.066374] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.066493] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.066639] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.066754] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.066869] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.066985] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.067099] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.067215] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.067330] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.067445] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.067561] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.067676] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.067792] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.067907] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.068038] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.068156] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.068310] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.068460] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.068650] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.068819] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.068998] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.069203] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.069379] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.069534] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.069670] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.069787] (turtle_brick) StdoutLine: {'line': b'20 errors\n'}
[1.069904] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.070022] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.070189] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 288 code styl...\n'}
[1.070337] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.070462] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.40s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.070588] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.070726] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.070859] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.070975] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.071091] (turtle_brick) StderrLine: {'line': b'\n'}
[1.071208] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.071325] (turtle_brick) CommandEnded: {'returncode': 1}
[1.071749] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.071790] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.072216] (-) EventReactorShutdown: {}
