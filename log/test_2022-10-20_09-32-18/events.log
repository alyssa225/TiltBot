[0.000000] (-) TimerEvent: {}
[0.000183] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000266] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000739] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.010103] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.099435] (-) TimerEvent: {}
[0.199730] (-) TimerEvent: {}
[0.242381] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.255045] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.261954] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.262375] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.262631] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.262784] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.262934] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.263077] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1432 - Experimental\n'}
[0.263226] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.263361] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.263565] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.263806] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.263953] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.264098] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.264240] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.264380] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.264521] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.264673] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.264815] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.264956] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.265095] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.265251] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299854] (-) TimerEvent: {}
[0.315866] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.316141] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.378203] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.378382] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.378503] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.378632] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.390689] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.390912] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.399951] (-) TimerEvent: {}
[0.400577] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.14 sec\n'}
[0.400954] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.401149] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.401362] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.401575] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.401767] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.454801] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.455020] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.500072] (-) TimerEvent: {}
[0.520650] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.520936] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.525388] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.525680] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.525889] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.598572] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.598811] (turtle_brick) StdoutLine: {'line': b'collected 5 items                                                              \x1b[0m\n'}
[0.599027] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.600140] (-) TimerEvent: {}
[0.633683] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.633871] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.633950] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.645846] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.646104] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.656782] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.26 sec\n'}
[0.657141] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.657305] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.657382] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.657452] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.657521] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.14 sec*proc (1 test)\n'}
[0.657600] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.39 sec*proc (2 tests)\n'}
[0.657669] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.26 sec*proc (1 test)\n'}
[0.657737] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.657804] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.39 sec\n'}
[0.657871] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.657938] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.658005] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.677660] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.677889] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.677999] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.679435] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.679752] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.679781] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.700266] (-) TimerEvent: {}
[0.751924] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[31mF\x1b[0m\x1b[31mF\x1b[0m\x1b[31m                                                     [ 40%]\x1b[0m\n'}
[0.752985] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[31m                                                 [ 60%]\x1b[0m\n'}
[0.800380] (-) TimerEvent: {}
[0.900638] (-) TimerEvent: {}
[0.930368] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 80%]\x1b[0m\n'}
[0.991425] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.991629] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991713] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.991777] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m__________________________ TestMath.test_math_sucsses __________________________\x1b[0m\n'}
[0.991867] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:311: in from_call\n'}
[1.000675] (-) TimerEvent: {}
[1.025318] (turtle_brick) StdoutLine: {'line': b'    result: Optional[TResult] = func()\n'}
[1.025509] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:255: in <lambda>\n'}
[1.025763] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mlambda\x1b[39;49;00m: ihook(item=item, **kwds), when=when, reraise=reraise\n'}
[1.025897] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/hooks.py\x1b[0m:286: in __call__\n'}
[1.026179] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._hookexec(\x1b[96mself\x1b[39;49;00m, \x1b[96mself\x1b[39;49;00m.get_hookimpls(), kwargs)\n'}
[1.026307] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:92: in _hookexec\n'}
[1.026659] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._inner_hookexec(hook, methods, kwargs)\n'}
[1.026810] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:83: in <lambda>\n'}
[1.027281] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m._inner_hookexec = \x1b[94mlambda\x1b[39;49;00m hook, methods, kwargs: hook.multicall(\n'}
[1.027551] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:170: in pytest_runtest_call\n'}
[1.027815] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mraise\x1b[39;49;00m e\n'}
[1.027926] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:162: in pytest_runtest_call\n'}
[1.028062] (turtle_brick) StdoutLine: {'line': b'    item.runtest()\n'}
[1.028201] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/python.py\x1b[0m:1641: in runtest\n'}
[1.028475] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m.ihook.pytest_pyfunc_call(pyfuncitem=\x1b[96mself\x1b[39;49;00m)\n'}
[1.028592] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/hooks.py\x1b[0m:286: in __call__\n'}
[1.028857] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._hookexec(\x1b[96mself\x1b[39;49;00m, \x1b[96mself\x1b[39;49;00m.get_hookimpls(), kwargs)\n'}
[1.028951] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:92: in _hookexec\n'}
[1.029243] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._inner_hookexec(hook, methods, kwargs)\n'}
[1.029358] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:83: in <lambda>\n'}
[1.029661] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m._inner_hookexec = \x1b[94mlambda\x1b[39;49;00m hook, methods, kwargs: hook.multicall(\n'}
[1.029804] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/python.py\x1b[0m:183: in pytest_pyfunc_call\n'}
[1.030038] (turtle_brick) StdoutLine: {'line': b'    result = testfunction(**testargs)\n'}
[1.030285] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   TypeError: TestMath.test_math_sucsses() takes 0 positional arguments but 1 was given\x1b[0m\n'}
[1.030377] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m___________________________ TestMath.test_math_fail ____________________________\x1b[0m\n'}
[1.030487] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:311: in from_call\n'}
[1.030567] (turtle_brick) StdoutLine: {'line': b'    result: Optional[TResult] = func()\n'}
[1.030636] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:255: in <lambda>\n'}
[1.030723] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mlambda\x1b[39;49;00m: ihook(item=item, **kwds), when=when, reraise=reraise\n'}
[1.030849] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/hooks.py\x1b[0m:286: in __call__\n'}
[1.030980] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._hookexec(\x1b[96mself\x1b[39;49;00m, \x1b[96mself\x1b[39;49;00m.get_hookimpls(), kwargs)\n'}
[1.031056] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:92: in _hookexec\n'}
[1.031121] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._inner_hookexec(hook, methods, kwargs)\n'}
[1.031217] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:83: in <lambda>\n'}
[1.031363] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m._inner_hookexec = \x1b[94mlambda\x1b[39;49;00m hook, methods, kwargs: hook.multicall(\n'}
[1.031567] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:170: in pytest_runtest_call\n'}
[1.031743] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mraise\x1b[39;49;00m e\n'}
[1.031912] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/runner.py\x1b[0m:162: in pytest_runtest_call\n'}
[1.032049] (turtle_brick) StdoutLine: {'line': b'    item.runtest()\n'}
[1.032159] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/python.py\x1b[0m:1641: in runtest\n'}
[1.032229] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m.ihook.pytest_pyfunc_call(pyfuncitem=\x1b[96mself\x1b[39;49;00m)\n'}
[1.032298] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/hooks.py\x1b[0m:286: in __call__\n'}
[1.032373] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._hookexec(\x1b[96mself\x1b[39;49;00m, \x1b[96mself\x1b[39;49;00m.get_hookimpls(), kwargs)\n'}
[1.032466] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:92: in _hookexec\n'}
[1.032535] (turtle_brick) StdoutLine: {'line': b'    \x1b[94mreturn\x1b[39;49;00m \x1b[96mself\x1b[39;49;00m._inner_hookexec(hook, methods, kwargs)\n'}
[1.032616] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/pluggy/manager.py\x1b[0m:83: in <lambda>\n'}
[1.032738] (turtle_brick) StdoutLine: {'line': b'    \x1b[96mself\x1b[39;49;00m._inner_hookexec = \x1b[94mlambda\x1b[39;49;00m hook, methods, kwargs: hook.multicall(\n'}
[1.032926] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31m/usr/lib/python3/dist-packages/_pytest/python.py\x1b[0m:183: in pytest_pyfunc_call\n'}
[1.033143] (turtle_brick) StdoutLine: {'line': b'    result = testfunction(**testargs)\n'}
[1.033436] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   TypeError: TestMath.test_math_fail() takes 0 positional arguments but 1 was given\x1b[0m\n'}
[1.033737] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[1.034068] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[1.034419] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[1.034697] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 275 code style errors / warnings:\x1b[0m\n'}
[1.034950] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:3:1: F401 'setuptools.find_packages' imported but unused\x1b[0m\n"}
[1.035201] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:14:100: E501 line too long (174 > 99 characters)\x1b[0m\n'}
[1.035456] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:18:43: E231 missing whitespace after ','\x1b[0m\n"}
[1.035699] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:24:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.036197] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\x1b[0m\n"}
[1.038029] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[1.040258] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\x1b[0m\n"}
[1.040403] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[1.040538] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\x1b[0m\n"}
[1.040659] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:12:42: W291 trailing whitespace\x1b[0m\n'}
[1.040737] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\x1b[0m\n"}
[1.040809] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.040879] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.040957] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.041027] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:35:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.041096] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:36:33: W291 trailing whitespace\x1b[0m\n'}
[1.041165] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:41:32: E231 missing whitespace after ','\x1b[0m\n"}
[1.041233] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:42:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.041302] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.041370] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:56:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.041438] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.041507] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:57:64: E231 missing whitespace after ','\x1b[0m\n"}
[1.041575] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:57:84: E231 missing whitespace after ','\x1b[0m\n"}
[1.041643] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.041711] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:59:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.041780] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:59:65: E231 missing whitespace after ','\x1b[0m\n"}
[1.041847] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:60:54: E231 missing whitespace after ','\x1b[0m\n"}
[1.041916] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:60:62: E231 missing whitespace after ','\x1b[0m\n"}
[1.041983] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:61:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.042051] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:61:64: E231 missing whitespace after ','\x1b[0m\n"}
[1.042130] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:64:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.042197] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.042264] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:68:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.042331] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:69:47: E231 missing whitespace after ','\x1b[0m\n"}
[1.042405] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:69:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.042472] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:46: E231 missing whitespace after ','\x1b[0m\n"}
[1.042540] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:54: E231 missing whitespace after ','\x1b[0m\n"}
[1.042607] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.042674] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.042742] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:89:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.042811] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:175:9: E303 too many blank lines (2)\x1b[0m\n'}
[1.042879] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:175:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.042947] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:178:26: W291 trailing whitespace\x1b[0m\n'}
[1.043015] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:191:42: E231 missing whitespace after ','\x1b[0m\n"}
[1.043084] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:193:37: E231 missing whitespace after ','\x1b[0m\n"}
[1.043164] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:194:35: E231 missing whitespace after ','\x1b[0m\n"}
[1.043228] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:194:45: E231 missing whitespace after ','\x1b[0m\n"}
[1.043291] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:197:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.043355] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:198:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.043418] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:205:24: E225 missing whitespace around operator\x1b[0m\n'}
[1.043482] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:48: E231 missing whitespace after ','\x1b[0m\n"}
[1.043546] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:65: E231 missing whitespace after ','\x1b[0m\n"}
[1.043609] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:209:46: E231 missing whitespace after ','\x1b[0m\n"}
[1.043673] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:209:61: E231 missing whitespace after ','\x1b[0m\n"}
[1.043736] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:211:36: E231 missing whitespace after ','\x1b[0m\n"}
[1.043799] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:212:13: E225 missing whitespace around operator\x1b[0m\n'}
[1.043868] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:222:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.043931] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:239:58: E225 missing whitespace around operator\x1b[0m\n'}
[1.043994] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:242:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.044056] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:243:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.044119] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:244:5: E303 too many blank lines (2)\x1b[0m\n'}
[1.044182] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:244:23: E231 missing whitespace after ','\x1b[0m\n"}
[1.044250] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:244:25: E231 missing whitespace after ','\x1b[0m\n"}
[1.044313] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:244:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.044376] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:249:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.044439] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:25: E231 missing whitespace after ','\x1b[0m\n"}
[1.044503] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.044566] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:30: W291 trailing whitespace\x1b[0m\n'}
[1.044637] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:260:42: E225 missing whitespace around operator\x1b[0m\n'}
[1.044702] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:261:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.044766] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:261:66: E262 inline comment should start with '# '\x1b[0m\n"}
[1.044830] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:261:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[1.044894] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:278:9: E225 missing whitespace around operator\x1b[0m\n'}
[1.044958] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:280:19: W291 trailing whitespace\x1b[0m\n'}
[1.045021] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:281:1: W391 blank line at end of file\x1b[0m\n'}
[1.045084] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[1.045148] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[1.045212] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[1.045302] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[1.045364] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[1.045426] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[1.045487] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[1.045549] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[1.045610] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.045672] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.045776] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.045898] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:33: W291 trailing whitespace\x1b[0m\n'}
[1.046011] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:27:32: E231 missing whitespace after ','\x1b[0m\n"}
[1.046083] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.046192] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:38:65: E231 missing whitespace after ','\x1b[0m\n"}
[1.046259] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:38:81: E231 missing whitespace after ','\x1b[0m\n"}
[1.046323] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.046385] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:63: E231 missing whitespace after ','\x1b[0m\n"}
[1.046448] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:51: E231 missing whitespace after ','\x1b[0m\n"}
[1.046511] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:62: E231 missing whitespace after ','\x1b[0m\n"}
[1.046573] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:41:52: E231 missing whitespace after ','\x1b[0m\n"}
[1.046635] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:41:61: E231 missing whitespace after ','\x1b[0m\n"}
[1.046697] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:43:61: E231 missing whitespace after ','\x1b[0m\n"}
[1.046765] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:43:74: E231 missing whitespace after ','\x1b[0m\n"}
[1.046828] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:43:93: E231 missing whitespace after ','\x1b[0m\n"}
[1.046889] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:44:54: E231 missing whitespace after ','\x1b[0m\n"}
[1.046951] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:44:62: E231 missing whitespace after ','\x1b[0m\n"}
[1.047013] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:44:81: E231 missing whitespace after ','\x1b[0m\n"}
[1.047075] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:53: W291 trailing whitespace\x1b[0m\n'}
[1.047157] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:50:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.047219] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.047283] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:19: W291 trailing whitespace\x1b[0m\n'}
[1.047363] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:60:28: W291 trailing whitespace\x1b[0m\n'}
[1.047430] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:81:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.047496] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:87:23: E225 missing whitespace around operator\x1b[0m\n'}
[1.047562] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:94:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.047627] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:97:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.047695] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.047761] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:105:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.047827] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:106:76: E231 missing whitespace after ','\x1b[0m\n"}
[1.047902] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:106:96: E231 missing whitespace after ','\x1b[0m\n"}
[1.047969] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:106:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[1.048035] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:106:120: E202 whitespace before ')'\x1b[0m\n"}
[1.048118] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:115:15: E225 missing whitespace around operator\x1b[0m\n'}
[1.048182] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:115:24: E225 missing whitespace around operator\x1b[0m\n'}
[1.048264] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:115:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.048329] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:115:43: E225 missing whitespace around operator\x1b[0m\n'}
[1.048407] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:125:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.048471] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:131:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.048537] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.048619] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.048693] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:140:9: E303 too many blank lines (2)\x1b[0m\n'}
[1.048760] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:140:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.048826] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:46: E231 missing whitespace after ','\x1b[0m\n"}
[1.048891] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:58: E231 missing whitespace after ','\x1b[0m\n"}
[1.048957] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:144:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.049022] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:145:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.049088] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.049153] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.049218] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:150:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.049283] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:151:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.049348] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:152:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.049413] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:155:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.049483] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:68: W291 trailing whitespace\x1b[0m\n'}
[1.049577] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:68: W291 trailing whitespace\x1b[0m\n'}
[1.049639] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:158:48: W291 trailing whitespace\x1b[0m\n'}
[1.049707] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:160:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.049770] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:56: W291 trailing whitespace\x1b[0m\n'}
[1.049832] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.049895] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:41: E225 missing whitespace around operator\x1b[0m\n'}
[1.049958] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.050021] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:176:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.050085] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:38: E225 missing whitespace around operator\x1b[0m\n'}
[1.050148] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:179:49: E225 missing whitespace around operator\x1b[0m\n'}
[1.050224] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:180:51: E225 missing whitespace around operator\x1b[0m\n'}
[1.050288] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:182:80: E202 whitespace before ')'\x1b[0m\n"}
[1.050352] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:186:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.050416] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:188:52: E225 missing whitespace around operator\x1b[0m\n'}
[1.050479] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:188:57: W291 trailing whitespace\x1b[0m\n'}
[1.050542] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:190:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.050606] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:34: E225 missing whitespace around operator\x1b[0m\n'}
[1.050669] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.050733] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:198:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.050796] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:200:1: E303 too many blank lines (3)\x1b[0m\n'}
[1.050859] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:202:16: E225 missing whitespace around operator\x1b[0m\n'}
[1.050923] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:204:19: W291 trailing whitespace\x1b[0m\n'}
[1.050986] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:206:1: W391 blank line at end of file\x1b[0m\n'}
[1.051049] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[1.051113] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[1.051188] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[1.051264] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[1.051331] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[1.051487] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[1.051562] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[1.051627] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[1.051691] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[1.051755] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.051819] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.051882] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:29:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.051945] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:30:33: W291 trailing whitespace\x1b[0m\n'}
[1.052008] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:35:32: E231 missing whitespace after ','\x1b[0m\n"}
[1.052072] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:36:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.052157] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:43:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.052226] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:46:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.052293] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:48:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.052360] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:49:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.052427] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:49:64: E231 missing whitespace after ','\x1b[0m\n"}
[1.052494] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:49:84: E231 missing whitespace after ','\x1b[0m\n"}
[1.052561] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:57: E231 missing whitespace after ','\x1b[0m\n"}
[1.052646] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:85: E231 missing whitespace after ','\x1b[0m\n"}
[1.052716] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.052784] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:85: E231 missing whitespace after ','\x1b[0m\n"}
[1.052852] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:52:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.052921] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:53:28: E225 missing whitespace around operator\x1b[0m\n'}
[1.052988] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:53:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.053057] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:53:64: E231 missing whitespace after ','\x1b[0m\n"}
[1.053139] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:54:22: E225 missing whitespace around operator\x1b[0m\n'}
[1.053201] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:54:57: E231 missing whitespace after ','\x1b[0m\n"}
[1.053263] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:54:70: E231 missing whitespace after ','\x1b[0m\n"}
[1.053331] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:55:22: E225 missing whitespace around operator\x1b[0m\n'}
[1.053394] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:55:50: E231 missing whitespace after ','\x1b[0m\n"}
[1.053456] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:55:58: E231 missing whitespace after ','\x1b[0m\n"}
[1.053518] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:56:55: E231 missing whitespace after ','\x1b[0m\n"}
[1.053578] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[1.053640] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:57:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.053701] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:59:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.053762] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:60:9: E265 block comment should start with '# '\x1b[0m\n"}
[1.053824] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:83:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.053885] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:84:5: E303 too many blank lines (3)\x1b[0m\n'}
[1.053946] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:84:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.054008] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:88:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[1.054069] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:94:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.054129] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:95:28: E231 missing whitespace after ','\x1b[0m\n"}
[1.054190] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:105:5: E303 too many blank lines (2)\x1b[0m\n'}
[1.054251] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:105:27: E231 missing whitespace after ','\x1b[0m\n"}
[1.054312] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:110:40: E225 missing whitespace around operator\x1b[0m\n'}
[1.054385] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:112:13: E265 block comment should start with '# '\x1b[0m\n"}
[1.054446] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:112:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[1.054507] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:113:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[1.054568] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:114:28: E225 missing whitespace around operator\x1b[0m\n'}
[1.054629] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:114:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.054689] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:114:40: E262 inline comment should start with '# '\x1b[0m\n"}
[1.054750] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:114:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[1.054811] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:122:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.054877] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:123:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.054938] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.055004] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:1: E303 too many blank lines (6)\x1b[0m\n'}
[1.055065] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:131:21: W292 no newline at end of file\x1b[0m\n'}
[1.055127] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.055188] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:6:25: W292 no newline at end of file\x1b[0m\n'}
[1.055250] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[1.055312] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[1.055373] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[1.055434] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[1.055495] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[1.055556] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[1.055617] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[1.055678] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[1.055739] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[1.055800] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[1.055860] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[1.055921] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[1.055982] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[1.056046] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:11:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[1.056106] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:22: E225 missing whitespace around operator\x1b[0m\n'}
[1.056166] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:14:51: E225 missing whitespace around operator\x1b[0m\n'}
[1.056229] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.056289] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:16:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[1.056349] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:18:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[1.056409] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:18:105: E231 missing whitespace after ','\x1b[0m\n"}
[1.056780] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:19:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[1.056918] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:19:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[1.057050] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:19:92: E262 inline comment should start with '# '\x1b[0m\n"}
[1.057188] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:22:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[1.057316] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:36:89: E231 missing whitespace after ','\x1b[0m\n"}
[1.057445] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:36:96: E231 missing whitespace after ','\x1b[0m\n"}
[1.057574] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:43:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.057701] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:49:56: E231 missing whitespace after ','\x1b[0m\n"}
[1.057872] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:68:7: W292 no newline at end of file\x1b[0m\n'}
[1.058000] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[1.058141] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[1.058281] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[1.058404] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[1.058531] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[1.058654] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[1.058775] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[1.058897] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:40:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.059018] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:40:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[1.059160] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:40:70: E231 missing whitespace after ','\x1b[0m\n"}
[1.059288] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.059416] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:44:7: W292 no newline at end of file\x1b[0m\n'}
[1.059573] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[1.059708] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[1.059830] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[1.059951] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[1.060073] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[1.060195] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[1.060322] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[1.060452] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:42:1: W293 blank line contains whitespace\x1b[0m\n'}
[1.060568] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:43:7: W292 no newline at end of file\x1b[0m\n'}
[1.060738] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.060855] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.060972] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061088] (turtle_brick) StdoutLine: {'line': b"./setup.py:3:1: F401 'setuptools.find_packages' imported but unused\n"}
[1.061204] (turtle_brick) StdoutLine: {'line': b'from setuptools import setup, find_packages\n'}
[1.061321] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.061437] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061552] (turtle_brick) StdoutLine: {'line': b'./setup.py:14:100: E501 line too long (174 > 99 characters)\n'}
[1.061668] (turtle_brick) StdoutLine: {'line': b"        ('share/' + package_name, ['package.xml', 'launch/show_turtle.launch.py', 'config/turtle_urdf.rviz', 'launch/run_turtle.launch.py', 'launch/turtle_arena.launch.py']),\n"}
[1.061816] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.061956] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062072] (turtle_brick) StdoutLine: {'line': b"./setup.py:18:43: E231 missing whitespace after ','\n"}
[1.062188] (turtle_brick) StdoutLine: {'line': b"    install_requires=['setuptools', 'urdf','rviz'],\n"}
[1.062305] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.062506] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062690] (turtle_brick) StdoutLine: {'line': b"./setup.py:24:28: E231 missing whitespace after ','\n"}
[1.062850] (turtle_brick) StdoutLine: {'line': b"    tests_require=['pytest','ament_lint_auto'],\n"}
[1.063038] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.063211] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063400] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\n"}
[1.063531] (turtle_brick) StdoutLine: {'line': b'from xmlrpc.client import Boolean\n'}
[1.063672] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.063796] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063921] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.064047] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.064173] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.064297] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064422] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\n"}
[1.064547] (turtle_brick) StdoutLine: {'line': b'from math import pi\n'}
[1.064688] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.064813] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064937] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.065063] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.065188] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.065312] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065436] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\n"}
[1.065561] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt\n'}
[1.065697] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.065821] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065946] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:12:42: W291 trailing whitespace\n'}
[1.066070] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.066195] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.066326] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066450] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\n"}
[1.066576] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import MarkerArray\n'}
[1.066711] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.066835] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066959] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\n"}
[1.067085] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[1.067210] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.067334] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067458] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\n'}
[1.067583] (turtle_brick) StdoutLine: {'line': b'class BState(Enum):\n'}
[1.067707] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.067831] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067956] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\n'}
[1.068080] (turtle_brick) StdoutLine: {'line': b'class Arena(Node):\n'}
[1.068218] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.068333] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068447] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:35:9: E265 block comment should start with '# '\n"}
[1.068561] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.068658] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.068724] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068787] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:36:33: W291 trailing whitespace\n'}
[1.068850] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.068912] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.068974] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069035] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:41:32: E231 missing whitespace after ','\n"}
[1.069098] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.069159] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.069222] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069283] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:42:27: E231 missing whitespace after ','\n"}
[1.069345] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.069407] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.069470] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069531] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\n"}
[1.069594] (turtle_brick) StdoutLine: {'line': b'        #setting state of brick\n'}
[1.069656] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.069717] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069779] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:56:9: E265 block comment should start with '# '\n"}
[1.069841] (turtle_brick) StdoutLine: {'line': b'        #set up subscribers\n'}
[1.069902] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.069964] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070025] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:57:55: E231 missing whitespace after ','\n"}
[1.070087] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.070149] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.070223] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070284] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:57:64: E231 missing whitespace after ','\n"}
[1.070346] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.070407] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.070469] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070530] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:57:84: E231 missing whitespace after ','\n"}
[1.070592] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.070654] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.070716] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070777] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:58:9: E265 block comment should start with '# '\n"}
[1.070838] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.070899] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.070962] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071023] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:59:55: E231 missing whitespace after ','\n"}
[1.071086] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.071147] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.071208] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071269] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:59:65: E231 missing whitespace after ','\n"}
[1.071331] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.071392] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.071453] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071514] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:60:54: E231 missing whitespace after ','\n"}
[1.071574] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[1.071636] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.071696] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071757] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:60:62: E231 missing whitespace after ','\n"}
[1.071818] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[1.071879] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.071941] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072002] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:61:55: E231 missing whitespace after ','\n"}
[1.072063] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[1.072124] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.072185] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072246] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:61:64: E231 missing whitespace after ','\n"}
[1.072307] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[1.072384] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.072447] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072509] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:64:1: W293 blank line contains whitespace\n'}
[1.072572] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.072654] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072719] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072783] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:67:1: W293 blank line contains whitespace\n'}
[1.072857] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.072921] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072985] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073049] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:68:9: E265 block comment should start with '# '\n"}
[1.073133] (turtle_brick) StdoutLine: {'line': b'        #initialize services\n'}
[1.073201] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.073270] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073349] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:69:47: E231 missing whitespace after ','\n"}
[1.073441] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[1.073557] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[1.073631] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073699] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:69:56: E231 missing whitespace after ','\n"}
[1.073767] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[1.073834] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.073901] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073967] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:46: E231 missing whitespace after ','\n"}
[1.074034] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[1.074101] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.074168] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074235] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:54: E231 missing whitespace after ','\n"}
[1.074302] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[1.074368] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.074435] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074502] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:71:1: W293 blank line contains whitespace\n'}
[1.074569] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.074635] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.074700] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074767] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\n"}
[1.074851] (turtle_brick) StdoutLine: {'line': b'        #creating brick marker\n'}
[1.074918] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.074985] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075051] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:89:9: E265 block comment should start with '# '\n"}
[1.075119] (turtle_brick) StdoutLine: {'line': b'        #creating wall markers\n'}
[1.075185] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.075252] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075318] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:175:9: E303 too many blank lines (2)\n'}
[1.075385] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[1.075503] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.075576] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075644] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:175:9: E265 block comment should start with '# '\n"}
[1.075713] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[1.075780] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.075981] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076201] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:178:26: W291 trailing whitespace\n'}
[1.076276] (turtle_brick) StdoutLine: {'line': b'        self.brickz = 0.0 \n'}
[1.076344] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[1.076409] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076474] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:191:42: E231 missing whitespace after ','\n"}
[1.076548] (turtle_brick) StdoutLine: {'line': b'        self.wall = self.create_timer(0.5,self.wall_callback)\n'}
[1.076627] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.076697] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076762] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:193:37: E231 missing whitespace after ','\n"}
[1.076828] (turtle_brick) StdoutLine: {'line': b'    def place_callback(self, request,response):\n'}
[1.076893] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.076959] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077024] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:194:35: E231 missing whitespace after ','\n"}
[1.077090] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[1.077158] (turtle_brick) StdoutLine: {'line': b'                                  ^\n'}
[1.077224] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077288] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:194:45: E231 missing whitespace after ','\n"}
[1.077364] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[1.077426] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.077489] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077552] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:197:1: W293 blank line contains whitespace\n'}
[1.077614] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.077676] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.077816] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077944] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:198:28: E231 missing whitespace after ','\n"}
[1.078045] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.078157] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.078257] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078359] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:205:24: E225 missing whitespace around operator\n'}
[1.078461] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[1.078562] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.078662] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078749] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:48: E231 missing whitespace after ','\n"}
[1.078811] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[1.078870] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.078928] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078998] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:65: E231 missing whitespace after ','\n"}
[1.079053] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[1.079108] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.079163] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079217] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:209:46: E231 missing whitespace after ','\n"}
[1.079271] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[1.079326] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.079380] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079434] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:209:61: E231 missing whitespace after ','\n"}
[1.079488] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[1.079542] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.079597] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079660] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:211:36: E231 missing whitespace after ','\n"}
[1.079719] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self, request,response):\n'}
[1.079774] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[1.079828] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079882] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:212:13: E225 missing whitespace around operator\n'}
[1.079937] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[1.079991] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.080045] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080099] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:222:9: E265 block comment should start with '# '\n"}
[1.080153] (turtle_brick) StdoutLine: {'line': b'        #publishing wall markers\n'}
[1.080207] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.080260] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080314] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:239:58: E225 missing whitespace around operator\n'}
[1.080368] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[1.080422] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.080497] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080560] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:242:1: W293 blank line contains whitespace\n'}
[1.080634] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.080707] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.080760] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080814] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:243:1: W293 blank line contains whitespace\n'}
[1.080869] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.080922] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.080976] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081029] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:244:5: E303 too many blank lines (2)\n'}
[1.081083] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.081136] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.081203] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081264] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:244:23: E231 missing whitespace after ','\n"}
[1.081324] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.081384] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.081444] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081503] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:244:25: E231 missing whitespace after ','\n"}
[1.081563] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.081624] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.081684] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081744] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:244:27: E231 missing whitespace after ','\n"}
[1.081854] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[1.081945] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.082035] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082157] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:249:1: W293 blank line contains whitespace\n'}
[1.082294] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.082371] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.082440] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082507] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:256:25: E231 missing whitespace after ','\n"}
[1.082574] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[1.082641] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.082708] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082774] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:256:27: E231 missing whitespace after ','\n"}
[1.082842] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[1.082922] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.082988] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083054] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:258:30: W291 trailing whitespace\n'}
[1.083121] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[1.083198] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[1.083259] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083319] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:260:42: E225 missing whitespace around operator\n'}
[1.083380] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[1.083452] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.083513] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083573] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:261:65: E261 at least two spaces before inline comment\n'}
[1.083634] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.083696] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.083756] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083817] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:261:66: E262 inline comment should start with '# '\n"}
[1.083879] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.083940] (turtle_brick) StdoutLine: {'line': b'                                                                 ^\n'}
[1.084002] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084063] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:261:100: E501 line too long (100 > 99 characters)\n'}
[1.084138] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.084199] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.084259] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084318] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:278:9: E225 missing whitespace around operator\n'}
[1.084378] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[1.084435] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.084507] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084581] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:280:19: W291 trailing whitespace\n'}
[1.084667] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.084727] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.084787] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084846] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:281:1: W391 blank line at end of file\n'}
[1.084905] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084963] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.085022] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085081] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[1.085141] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[1.085201] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.085260] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085319] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[1.085378] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[1.085437] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.085496] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085554] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[1.085613] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[1.085671] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.085756] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085828] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[1.085893] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[1.085952] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.086011] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086069] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[1.086141] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.086203] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.086266] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086327] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[1.086390] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.086451] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.086512] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086574] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[1.086635] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[1.086697] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.086758] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.086819] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[1.086880] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.086942] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.087003] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087065] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[1.087127] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[1.087201] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.087261] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087321] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[1.087382] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[1.087442] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.087505] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087565] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:21:9: E265 block comment should start with '# '\n"}
[1.087627] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.087688] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.087749] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.087810] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:33: W291 trailing whitespace\n'}
[1.087871] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.087931] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.087992] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088053] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:27:32: E231 missing whitespace after ','\n"}
[1.088114] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.088176] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.088237] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088298] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:28:27: E231 missing whitespace after ','\n"}
[1.088359] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.088420] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.088481] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088541] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:38:65: E231 missing whitespace after ','\n"}
[1.088606] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.088680] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.088742] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.088802] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:38:81: E231 missing whitespace after ','\n"}
[1.088863] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.088925] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.088985] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089046] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:55: E231 missing whitespace after ','\n"}
[1.089106] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.089167] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.089227] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089287] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:63: E231 missing whitespace after ','\n"}
[1.089347] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.089407] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.089468] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089528] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:40:51: E231 missing whitespace after ','\n"}
[1.089589] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.089649] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.089712] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.089771] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:40:62: E231 missing whitespace after ','\n"}
[1.089833] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.089908] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.089969] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090029] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:41:52: E231 missing whitespace after ','\n"}
[1.090089] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.090166] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.090232] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090298] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:41:61: E231 missing whitespace after ','\n"}
[1.090364] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.090431] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.090497] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090562] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:43:61: E231 missing whitespace after ','\n"}
[1.090628] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.090695] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.090761] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.090827] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:43:74: E231 missing whitespace after ','\n"}
[1.090901] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.090969] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[1.091035] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091101] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:43:93: E231 missing whitespace after ','\n"}
[1.091185] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.091246] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[1.091307] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091368] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:44:54: E231 missing whitespace after ','\n"}
[1.091430] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.091491] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.091552] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091612] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:44:62: E231 missing whitespace after ','\n"}
[1.091673] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.091733] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.091793] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.091854] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:44:81: E231 missing whitespace after ','\n"}
[1.091914] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.091975] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.092036] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092096] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:46:53: W291 trailing whitespace\n'}
[1.092169] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[1.092228] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.092287] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092345] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:50:1: W293 blank line contains whitespace\n'}
[1.092404] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.092463] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.092520] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092579] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:9: E265 block comment should start with '# '\n"}
[1.092682] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.092742] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.092800] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.092858] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:59:19: W291 trailing whitespace\n'}
[1.092916] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.092974] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.093033] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093090] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:60:28: W291 trailing whitespace\n'}
[1.093148] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[1.093206] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.093264] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093321] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:81:9: E265 block comment should start with '# '\n"}
[1.093380] (turtle_brick) StdoutLine: {'line': b'        #joint state publisher\n'}
[1.093437] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.093495] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093553] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:87:23: E225 missing whitespace around operator\n'}
[1.093610] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[1.093668] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.093726] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.093803] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:94:9: E265 block comment should start with '# '\n"}
[1.093885] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel publisher\n'}
[1.093943] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.094001] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094059] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:97:9: E265 block comment should start with '# '\n"}
[1.094118] (turtle_brick) StdoutLine: {'line': b'        #create pose publisher\n'}
[1.094176] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.094234] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094291] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:1: W293 blank line contains whitespace\n'}
[1.094349] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.094407] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.094465] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094523] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:105:27: E231 missing whitespace after ','\n"}
[1.094581] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[1.094639] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.094697] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094755] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:106:76: E231 missing whitespace after ','\n"}
[1.094813] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.094873] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[1.094932] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.094992] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:106:96: E231 missing whitespace after ','\n"}
[1.095050] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.095125] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.095190] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.095254] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:106:100: E501 line too long (121 > 99 characters)\n'}
[1.095319] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.095384] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.095447] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.095510] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:106:120: E202 whitespace before ')'\n"}
[1.095588] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.095660] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[1.095726] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.095918] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:115:15: E225 missing whitespace around operator\n'}
[1.096064] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.096238] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[1.096315] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.096386] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:115:24: E225 missing whitespace around operator\n'}
[1.096461] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.096535] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.096618] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.096694] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:115:34: E225 missing whitespace around operator\n'}
[1.096776] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.096849] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.096921] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.096992] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:115:43: E225 missing whitespace around operator\n'}
[1.097064] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.097151] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.097224] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.097294] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:125:27: E231 missing whitespace after ','\n"}
[1.097364] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.097434] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.097503] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.097572] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:131:1: W293 blank line contains whitespace\n'}
[1.097642] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.097712] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.097782] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.097851] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:132:9: E265 block comment should start with '# '\n"}
[1.097921] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[1.097990] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.098060] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.098128] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:139:1: W293 blank line contains whitespace\n'}
[1.098208] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.098273] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.098338] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.098404] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:140:9: E303 too many blank lines (2)\n'}
[1.098471] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.098536] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.098601] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.098667] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:140:9: E265 block comment should start with '# '\n"}
[1.098733] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.098798] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.098863] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.098927] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:46: E231 missing whitespace after ','\n"}
[1.098993] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.099059] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.099139] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.099206] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:58: E231 missing whitespace after ','\n"}
[1.099274] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.099342] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.099409] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.099477] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:144:1: W293 blank line contains whitespace\n'}
[1.099545] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.099612] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.099679] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.099745] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:145:9: E265 block comment should start with '# '\n"}
[1.099812] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.099879] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.099945] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.100011] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[1.100087] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.100154] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.100221] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.100287] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[1.100354] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.100421] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.100488] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.100554] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:150:34: E225 missing whitespace around operator\n'}
[1.100626] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.100693] (-) TimerEvent: {}
[1.100797] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.100877] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.100947] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:151:34: E225 missing whitespace around operator\n'}
[1.101017] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.101085] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.101153] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.101232] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:152:34: E225 missing whitespace around operator\n'}
[1.101298] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.101363] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.101428] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.101493] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:155:9: E265 block comment should start with '# '\n"}
[1.101559] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.101624] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.101691] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.101755] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:68: W291 trailing whitespace\n'}
[1.101821] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.101886] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.101952] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.102017] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:68: W291 trailing whitespace\n'}
[1.102082] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.102148] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.102222] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.102289] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:158:48: W291 trailing whitespace\n'}
[1.102354] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.102420] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.102485] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.102550] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:160:9: E265 block comment should start with '# '\n"}
[1.102616] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.102682] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.102747] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.102812] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:56: W291 trailing whitespace\n'}
[1.102877] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.102943] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.103008] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.103073] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.103146] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.103211] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.103277] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.103342] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:172:41: E225 missing whitespace around operator\n'}
[1.103408] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.103484] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.103550] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.103615] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:1: W293 blank line contains whitespace\n'}
[1.103681] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.103746] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.103811] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.103876] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:176:9: E265 block comment should start with '# '\n"}
[1.103941] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.104007] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.104072] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.104138] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:177:38: E225 missing whitespace around operator\n'}
[1.104205] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.104272] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.104337] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.104403] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:179:49: E225 missing whitespace around operator\n'}
[1.104468] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.104533] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.104605] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.104674] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:180:51: E225 missing whitespace around operator\n'}
[1.104742] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.104821] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.104888] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.104953] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:182:80: E202 whitespace before ')'\n"}
[1.105017] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.105082] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.105147] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.105210] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:186:9: E265 block comment should start with '# '\n"}
[1.105275] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.105339] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.105403] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.105468] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:188:52: E225 missing whitespace around operator\n'}
[1.105533] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.105598] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.105662] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.105725] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:188:57: W291 trailing whitespace\n'}
[1.105792] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.105857] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.105921] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.105986] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:190:34: E225 missing whitespace around operator\n'}
[1.106057] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.106121] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.106198] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.106260] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:34: E225 missing whitespace around operator\n'}
[1.106322] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.106384] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.106447] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.106507] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:1: W293 blank line contains whitespace\n'}
[1.106613] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.106708] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.106826] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.106944] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:198:1: W293 blank line contains whitespace\n'}
[1.107061] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.107178] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.107294] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.107410] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:200:1: E303 too many blank lines (3)\n'}
[1.107527] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.107645] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.107762] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.107880] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:202:16: E225 missing whitespace around operator\n'}
[1.107997] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.108127] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.108240] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.108355] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:204:19: W291 trailing whitespace\n'}
[1.108469] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.108582] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.108721] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.108835] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:206:1: W391 blank line at end of file\n'}
[1.108964] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.109080] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.109197] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.109326] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.109439] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.109560] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.109687] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.109789] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.109901] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.110012] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.110122] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.110343] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.110731] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.111308] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.111475] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.111883] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.112055] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.112343] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.112483] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.112611] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.112746] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.112852] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.112958] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.113063] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.113181] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.113284] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.113387] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.113489] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.113592] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.113695] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.113819] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.113966] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.114098] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.114267] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.114384] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.114498] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.114612] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.114725] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.114838] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.114964] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.115074] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.115183] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.115292] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.115401] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.115511] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.115620] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.115729] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.116079] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:29:9: E265 block comment should start with '# '\n"}
[1.116235] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.116379] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.116522] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.116635] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:30:33: W291 trailing whitespace\n'}
[1.116711] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.116795] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.116865] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.116933] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:35:32: E231 missing whitespace after ','\n"}
[1.117002] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.117070] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.117139] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.117206] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:36:27: E231 missing whitespace after ','\n"}
[1.117274] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.117353] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.117418] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.117494] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:43:9: E265 block comment should start with '# '\n"}
[1.117573] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.117653] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.117721] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.117788] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:46:9: E265 block comment should start with '# '\n"}
[1.117857] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.117924] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.118000] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.118066] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:48:9: E265 block comment should start with '# '\n"}
[1.118135] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.118211] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.118273] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.118334] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:49:55: E231 missing whitespace after ','\n"}
[1.118396] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.118459] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.118533] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.118593] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:49:64: E231 missing whitespace after ','\n"}
[1.118654] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.118715] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.118775] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.118835] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:49:84: E231 missing whitespace after ','\n"}
[1.118897] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.118958] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.119019] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.119079] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:57: E231 missing whitespace after ','\n"}
[1.119140] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.119201] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.119262] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.119323] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:85: E231 missing whitespace after ','\n"}
[1.119384] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.119445] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.119511] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.119572] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:55: E231 missing whitespace after ','\n"}
[1.119632] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.119692] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.119753] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.119813] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:85: E231 missing whitespace after ','\n"}
[1.119873] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.119933] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.120021] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.120081] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:52:9: E265 block comment should start with '# '\n"}
[1.120141] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.120200] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.120260] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.120320] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:53:28: E225 missing whitespace around operator\n'}
[1.120380] (turtle_brick) StdoutLine: {'line': b"        self.brick_land_pub= self.create_publisher(Pose,'/land',10)\n"}
[1.120440] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.120506] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.120565] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:53:56: E231 missing whitespace after ','\n"}
[1.120657] (turtle_brick) StdoutLine: {'line': b"        self.brick_land_pub= self.create_publisher(Pose,'/land',10)\n"}
[1.120720] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.120781] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.120841] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:53:64: E231 missing whitespace after ','\n"}
[1.120901] (turtle_brick) StdoutLine: {'line': b"        self.brick_land_pub= self.create_publisher(Pose,'/land',10)\n"}
[1.120961] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.121021] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.121080] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:54:22: E225 missing whitespace around operator\n'}
[1.121140] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.121200] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.121260] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.121319] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:54:57: E231 missing whitespace after ','\n"}
[1.121380] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.121440] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.121500] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.121560] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:54:70: E231 missing whitespace after ','\n"}
[1.121620] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.121680] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.121741] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.121821] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:55:22: E225 missing whitespace around operator\n'}
[1.121895] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.121956] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.122017] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.122077] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:55:50: E231 missing whitespace after ','\n"}
[1.122139] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.122200] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.122262] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.122323] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:55:58: E231 missing whitespace after ','\n"}
[1.122384] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.122445] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.122506] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.122566] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:56:55: E231 missing whitespace after ','\n"}
[1.122627] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.122699] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.122760] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.122821] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:56:65: E231 missing whitespace after ','\n"}
[1.122882] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.122943] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.123004] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.123068] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:57:9: E265 block comment should start with '# '\n"}
[1.123129] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.123190] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.123261] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.123316] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:59:1: W293 blank line contains whitespace\n'}
[1.123372] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.123426] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.123481] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.123536] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:60:9: E265 block comment should start with '# '\n"}
[1.123591] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.123645] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.123702] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.123758] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:83:1: W293 blank line contains whitespace\n'}
[1.123813] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.123868] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.123923] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.123978] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:84:5: E303 too many blank lines (3)\n'}
[1.124034] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.124089] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.124144] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.124199] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:84:28: E231 missing whitespace after ','\n"}
[1.124254] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.124309] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.124364] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.124420] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:88:100: E501 line too long (100 > 99 characters)\n'}
[1.124476] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.124536] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.124597] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.124688] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:94:1: W293 blank line contains whitespace\n'}
[1.124758] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.124813] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.124868] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.124923] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:95:28: E231 missing whitespace after ','\n"}
[1.124979] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.125034] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.125090] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.125145] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:105:5: E303 too many blank lines (2)\n'}
[1.125201] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.125256] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.125311] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.125366] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:105:27: E231 missing whitespace after ','\n"}
[1.125422] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.125478] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.125534] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.125589] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:110:40: E225 missing whitespace around operator\n'}
[1.125645] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.125701] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.125779] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.125844] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:112:13: E265 block comment should start with '# '\n"}
[1.125924] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.125981] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.126035] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.126090] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:112:100: E501 line too long (142 > 99 characters)\n'}
[1.126146] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.126202] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.126258] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.126313] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:113:100: E501 line too long (155 > 99 characters)\n'}
[1.126369] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.126427] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.126483] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.126538] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:114:28: E225 missing whitespace around operator\n'}
[1.126595] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.126651] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.126707] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.126762] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:114:39: E261 at least two spaces before inline comment\n'}
[1.126817] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.126872] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.126926] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.126980] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:114:40: E262 inline comment should start with '# '\n"}
[1.127036] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.127091] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.127145] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.127200] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:114:100: E501 line too long (106 > 99 characters)\n'}
[1.127255] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.127310] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.127365] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.127445] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:122:1: W293 blank line contains whitespace\n'}
[1.127511] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.127576] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.127643] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.127708] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:123:1: W293 blank line contains whitespace\n'}
[1.127773] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.127838] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.127910] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.127964] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:1: W293 blank line contains whitespace\n'}
[1.128019] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.128074] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.128148] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.128205] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:1: E303 too many blank lines (6)\n'}
[1.128263] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.128321] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.128378] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.128436] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:131:21: W292 no newline at end of file\n'}
[1.128516] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.128599] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.128679] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.128748] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.128816] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.128883] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.128958] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:6:25: W292 no newline at end of file\n'}
[1.129016] (turtle_brick) StdoutLine: {'line': b'        assert 5+6 == 20                        ^\n'}
[1.129075] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.129132] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.129191] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.129254] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.129312] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.129369] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.129428] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.129486] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.129543] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.129601] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.129659] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.129717] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.129798] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.129884] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.129954] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.130023] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.130093] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.130160] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.130230] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.130299] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.130380] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.130438] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.130497] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.130555] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.130614] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.130672] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.130732] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.130790] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.130848] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.130905] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.130963] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.131023] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.131082] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.131140] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.131199] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.131259] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.131326] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.131384] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.131444] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.131503] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.131561] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.131620] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.131680] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.131738] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.131796] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.131856] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.131915] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.131973] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.132033] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.132118] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.132204] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.132264] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.132324] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:11:1: E302 expected 2 blank lines, found 1\n'}
[1.132385] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.132446] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.132505] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.132599] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:22: E225 missing whitespace around operator\n'}
[1.132697] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.132775] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.132834] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.132893] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:14:51: E225 missing whitespace around operator\n'}
[1.132952] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.133011] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.133070] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.133128] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:1: W293 blank line contains whitespace\n'}
[1.133199] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.133256] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.133313] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.133370] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:16:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.133427] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.133484] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.133541] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.133597] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:18:100: E501 line too long (115 > 99 characters)\n'}
[1.133653] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.133711] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.133793] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.133858] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:18:105: E231 missing whitespace after ','\n"}
[1.133950] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.134024] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.134117] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.134181] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:19:37: E128 continuation line under-indented for visual indent\n'}
[1.134273] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.134340] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.134404] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.134496] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:19:92: E261 at least two spaces before inline comment\n'}
[1.134563] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.134636] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.134704] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.134771] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:19:92: E262 inline comment should start with '# '\n"}
[1.134838] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.134906] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.134973] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.135040] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:22:100: E501 line too long (100 > 99 characters)\n'}
[1.135121] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.135189] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.135268] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.135334] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:36:89: E231 missing whitespace after ','\n"}
[1.135399] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.135465] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.135531] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.135595] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:36:96: E231 missing whitespace after ','\n"}
[1.135661] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.135904] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.136080] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.136160] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:43:56: E231 missing whitespace after ','\n"}
[1.136235] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.136311] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.136386] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.136460] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:49:56: E231 missing whitespace after ','\n"}
[1.136534] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.136641] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.136781] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.136843] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:68:7: W292 no newline at end of file\n'}
[1.136909] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.136967] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.137024] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.137099] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.137186] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.137289] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.137369] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.137427] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.137486] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.137544] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.137602] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.137660] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.137719] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.137795] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.137861] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.137937] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.137995] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.138052] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.138110] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.138168] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.138227] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.138285] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.138342] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.138400] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.138458] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.138516] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.138574] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.138632] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.138691] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.138749] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.138807] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:40:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.138866] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.138925] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.138983] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.139041] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:40:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.139101] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.139179] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.139245] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.139310] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:40:70: E231 missing whitespace after ','\n"}
[1.139376] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.139441] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.139569] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.139661] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:1: W293 blank line contains whitespace\n'}
[1.139733] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.139802] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.139901] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.139969] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:44:7: W292 no newline at end of file\n'}
[1.140037] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.140106] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.140174] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.140244] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.140325] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.140392] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.140458] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.140524] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.140591] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.140684] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.140742] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.140799] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.140857] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.140914] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.140971] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.141029] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.141086] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.141143] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.141200] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.141257] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.141325] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.141382] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.141439] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.141496] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.141553] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.141610] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.141667] (turtle_brick) StdoutLine: {'line': b"./launch/turtle_arena.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.141724] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.141802] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.141877] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.141933] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:42:1: W293 blank line contains whitespace\n'}
[1.141989] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.142045] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.142101] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.142196] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:43:7: W292 no newline at end of file\n'}
[1.142275] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.142332] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.142387] (turtle_brick) StdoutLine: {'line': b'1     E128 continuation line under-indented for visual indent\n'}
[1.142443] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.142499] (turtle_brick) StdoutLine: {'line': b'28    E225 missing whitespace around operator\n'}
[1.142561] (turtle_brick) StdoutLine: {'line': b"81    E231 missing whitespace after ','\n"}
[1.142618] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.142674] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.142730] (turtle_brick) StdoutLine: {'line': b"3     E262 inline comment should start with '# '\n"}
[1.142787] (turtle_brick) StdoutLine: {'line': b"34    E265 block comment should start with '# '\n"}
[1.142842] (turtle_brick) StdoutLine: {'line': b'6     E302 expected 2 blank lines, found 1\n'}
[1.142899] (turtle_brick) StdoutLine: {'line': b'7     E303 too many blank lines (2)\n'}
[1.142955] (turtle_brick) StdoutLine: {'line': b'10    E501 line too long (115 > 99 characters)\n'}
[1.143011] (turtle_brick) StdoutLine: {'line': b"41    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.143067] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.143123] (turtle_brick) StdoutLine: {'line': b'22    W291 trailing whitespace\n'}
[1.143180] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.143236] (turtle_brick) StdoutLine: {'line': b'26    W293 blank line contains whitespace\n'}
[1.143292] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.143348] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.143404] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.143461] (turtle_brick) StdoutLine: {'line': b'275 errors\n'}
[1.143517] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.143573] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 177\n"}
[1.143630] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 42\n"}
[1.143686] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 56\n"}
[1.143742] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.143798] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.143855] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.143911] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.143968] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.144025] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.144082] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.144139] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.144196] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.144266] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.144324] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.144382] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.144440] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.144498] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.144555] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.144649] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.144730] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.144790] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.144849] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.144908] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.144967] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.145032] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.145095] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.145154] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.145212] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.145270] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.145329] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.145386] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.145444] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.145502] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.145560] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.145617] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.145675] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.145772] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.145904] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.145999] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.146098] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.146237] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.146322] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.146381] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.146438] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.146497] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.146554] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.146611] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.146669] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.146726] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.146796] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.146854] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.146911] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.146982] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.147035] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.147089] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.147142] (turtle_brick) StdoutLine: {'line': b'10 errors\n'}
[1.147195] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.147248] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.147301] (turtle_brick) StdoutLine: {'line': b'FAILED test/math_test.py::TestMath::test_math_sucsses - TypeError: TestMath.t...\n'}
[1.147354] (turtle_brick) StdoutLine: {'line': b'FAILED test/math_test.py::TestMath::test_math_fail - TypeError: TestMath.test...\n'}
[1.147411] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 275 code styl...\n'}
[1.147464] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.147517] (turtle_brick) StdoutLine: {'line': b'\x1b[31m=================== \x1b[31m\x1b[1m4 failed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.52s\x1b[0m\x1b[31m ===================\x1b[0m\n'}
[1.147570] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.147636] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.147689] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.147741] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.147793] (turtle_brick) StderrLine: {'line': b'\n'}
[1.147844] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.147898] (turtle_brick) CommandEnded: {'returncode': 1}
[1.148141] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.148163] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.148495] (-) EventReactorShutdown: {}
