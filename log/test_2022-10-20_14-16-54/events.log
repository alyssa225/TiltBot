[0.000000] (-) TimerEvent: {}
[0.000619] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000823] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.001276] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.012233] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.099539] (-) TimerEvent: {}
[0.199897] (-) TimerEvent: {}
[0.247197] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.260049] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.266771] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.267046] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.267257] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.267443] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.267591] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.267777] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1916 - Experimental\n'}
[0.268033] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.268243] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.268401] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.268548] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.268626] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.268700] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.268771] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.268841] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.268911] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.269015] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.269144] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.269227] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.269299] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.269387] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299997] (-) TimerEvent: {}
[0.322588] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.322783] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.383083] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.383293] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.383377] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.383513] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.394107] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.394416] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.400083] (-) TimerEvent: {}
[0.405004] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.14 sec\n'}
[0.405257] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.405341] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.405413] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.405483] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.405632] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.466308] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.466516] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.500204] (-) TimerEvent: {}
[0.536456] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.536683] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.543719] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.544011] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.544133] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.600315] (-) TimerEvent: {}
[0.617459] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.617597] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.617827] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.624926] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.626188] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.642056] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.642315] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.642482] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.653237] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.653448] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.662652] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.26 sec\n'}
[0.663137] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.663309] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.663484] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.663602] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.663675] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.14 sec*proc (1 test)\n'}
[0.663790] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.39 sec*proc (2 tests)\n'}
[0.663863] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.26 sec*proc (1 test)\n'}
[0.663934] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.664037] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.40 sec\n'}
[0.664105] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.664207] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.664290] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.685002] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.685347] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.685553] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.687476] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.688072] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.688175] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.706258] (-) TimerEvent: {}
[0.806645] (-) TimerEvent: {}
[0.839208] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.900621] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.901000] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.901094] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.901186] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.901259] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.906754] (-) TimerEvent: {}
[0.935411] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.935828] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 283 code style errors / warnings:\x1b[0m\n'}
[0.936190] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:15:33: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.936512] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:16:33: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.936833] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\x1b[0m\n"}
[0.937157] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.937479] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\x1b[0m\n"}
[0.938063] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.938705] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\x1b[0m\n"}
[0.939080] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:12:42: W291 trailing whitespace\x1b[0m\n'}
[0.939362] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\x1b[0m\n"}
[0.940373] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.944904] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.945022] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.945094] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:39:53: W291 trailing whitespace\x1b[0m\n'}
[0.945192] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.945259] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:50:33: W291 trailing whitespace\x1b[0m\n'}
[0.945353] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.945419] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.945511] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.945586] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.945680] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.945747] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.945826] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.945906] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.945971] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.946061] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.946129] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.946197] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.946265] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.946340] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.946407] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.946474] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.946553] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.946620] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\x1b[0m\n"}
[0.946686] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.946753] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.946819] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.946886] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.946952] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.947018] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.947085] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.947151] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.947218] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:192:26: W291 trailing whitespace\x1b[0m\n'}
[0.947286] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\x1b[0m\n"}
[0.947353] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\x1b[0m\n"}
[0.947441] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\x1b[0m\n"}
[0.947525] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\x1b[0m\n"}
[0.947592] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.947659] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.947724] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.947795] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\x1b[0m\n"}
[0.947862] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.947929] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.947995] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.948060] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\x1b[0m\n"}
[0.948125] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\x1b[0m\n'}
[0.948201] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.948270] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\x1b[0m\n'}
[0.948332] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.948394] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.948455] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.948517] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\x1b[0m\n"}
[0.948578] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.948646] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.948709] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.948771] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.948924] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.949097] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:272:30: W291 trailing whitespace\x1b[0m\n'}
[0.949216] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\x1b[0m\n'}
[0.949287] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.949357] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\x1b[0m\n"}
[0.949426] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.949494] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\x1b[0m\n'}
[0.949560] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:294:19: W291 trailing whitespace\x1b[0m\n'}
[0.949628] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:295:1: W391 blank line at end of file\x1b[0m\n'}
[0.949695] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.949762] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.949843] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[0.949921] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.950105] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.950169] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.950231] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[0.950298] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[0.950359] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.950426] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.950487] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[0.950547] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[0.950607] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[0.950667] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[0.950727] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[0.950786] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[0.950846] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[0.950906] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[0.950965] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[0.951024] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.951083] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[0.951145] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.951222] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.951285] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.951354] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.951470] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.951553] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.951609] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.951664] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.951720] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.951785] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.951842] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.951898] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.951954] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.952010] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.952066] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.952128] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.952184] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[0.952240] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.952296] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.952352] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[0.952408] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[0.952464] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.952520] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.952576] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.952632] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.952687] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.952743] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.952798] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.952854] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.952921] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.952978] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[0.953033] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[0.953089] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.953145] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.953201] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[0.953257] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.953312] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.953368] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.953442] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.953506] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.953570] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.953635] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.953704] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.953768] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.953833] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.953897] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.953960] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.954025] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.954089] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.954160] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.954225] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.954289] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[0.954354] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[0.954430] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[0.954492] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.954554] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[0.954615] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.954678] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[0.954740] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.954803] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.954866] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[0.954930] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[0.954995] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.955059] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[0.955125] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.955273] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[0.955482] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[0.955566] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.955650] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.955719] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.955787] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.955855] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[0.955936] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.956004] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[0.956071] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[0.956138] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.956206] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.956274] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.956341] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.956408] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.956494] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.956563] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.956632] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.956700] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.956769] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.956835] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.956922] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.957050] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.957132] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.957202] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.957269] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.957335] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.957422] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.957493] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.957572] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.957643] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.957714] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.957785] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.957855] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.957926] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.957996] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.958067] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.958137] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.958207] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.958277] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.958348] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.958427] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.958491] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.958555] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.958619] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.958684] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.958749] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.958814] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.958878] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.958942] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.959005] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.959069] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.959133] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.959212] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.959277] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.959342] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.959458] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.959533] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.959597] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.959660] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.959722] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.959785] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.959847] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.959910] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.959972] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.960042] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.960105] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.960167] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.960229] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.960291] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.960353] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.960415] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.960477] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.960540] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.960602] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.960665] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.960728] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.960790] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.960852] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.960914] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.960976] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.961038] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.961101] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.961164] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.961235] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.961298] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.961360] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.961422] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.961485] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.961547] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.961609] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.961671] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.961734] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.961796] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.961857] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.961919] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.961982] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.962057] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.962121] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.962183] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.962245] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.962307] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.962368] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.962431] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.962495] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.962565] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.962629] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.962692] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.962756] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.962826] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.962890] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.962954] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.963018] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.963082] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.963146] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.963210] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.963274] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.963337] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.963434] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.963513] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.963575] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.963636] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.963696] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.963756] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.963816] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.963879] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.963941] (turtle_brick) StdoutLine: {'line': b'./setup.py:15:33: E128 continuation line under-indented for visual indent\n'}
[0.964002] (turtle_brick) StdoutLine: {'line': b"                                'config/turtle_urdf.rviz', 'launch/run_turtle.launch.py',\n"}
[0.964064] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.964126] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964187] (turtle_brick) StdoutLine: {'line': b'./setup.py:16:33: E128 continuation line under-indented for visual indent\n'}
[0.964248] (turtle_brick) StdoutLine: {'line': b"                                'launch/turtle_arena.launch.py']),\n"}
[0.964309] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.964369] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964446] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\n"}
[0.964512] (turtle_brick) StdoutLine: {'line': b'from xmlrpc.client import Boolean\n'}
[0.964578] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.964643] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.964709] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[0.964775] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[0.964840] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.964918] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965036] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\n"}
[0.965107] (turtle_brick) StdoutLine: {'line': b'from math import pi\n'}
[0.965173] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.965239] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965303] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[0.965383] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.965451] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.965517] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965583] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\n"}
[0.965650] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt\n'}
[0.965717] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.965784] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.965850] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:12:42: W291 trailing whitespace\n'}
[0.965917] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.965983] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.966049] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966114] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\n"}
[0.966180] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import MarkerArray\n'}
[0.966246] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.966311] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966376] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\n"}
[0.966468] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.966530] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.966592] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966653] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\n'}
[0.966715] (turtle_brick) StdoutLine: {'line': b'class BState(Enum):\n'}
[0.966777] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.966839] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.966900] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\n'}
[0.966968] (turtle_brick) StdoutLine: {'line': b'class Arena(Node):\n'}
[0.967031] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.967092] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.967153] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:39:53: W291 trailing whitespace\n'}
[0.967214] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.967276] (turtle_brick) StdoutLine: {'line': b'    Creates the arena and places brick when called in command line.\n'}
[0.967338] (turtle_brick) StdoutLine: {'line': b'    Will drop the robot when called in command line.\n'}
[0.967425] (turtle_brick) StdoutLine: {'line': b'        -if robot is underneath the brick, the brick will land on the robot\n'}
[0.967517] (turtle_brick) StdoutLine: {'line': b'        -if nothing is under brick, brick will land on ground\n'}
[0.967582] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.967645] (turtle_brick) StdoutLine: {'line': b'        -robot_sub: continuous robot position\n'}
[0.967708] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.967770] (turtle_brick) StdoutLine: {'line': b'        -marker_pub: publishes walls and brick\n'}
[0.967832] (turtle_brick) StdoutLine: {'line': b'        -drop_pub: sends placement, drop coordinates  \n'}
[0.967895] (turtle_brick) StdoutLine: {'line': b'        -platform_pub: sends true if platform is under brick\n'}
[0.967956] (turtle_brick) StdoutLine: {'line': b'    SERVICES:\n'}
[0.968018] (turtle_brick) StdoutLine: {'line': b'        -Place: place brick at x, y, z location\n'}
[0.968080] (turtle_brick) StdoutLine: {'line': b'        -Drop: Empty drops brick\n'}
[0.968148] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.968211] (turtle_brick) StdoutLine: {'line': b'        -world_brick: connects brick to world\n'}
[0.968273] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.968334] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.968396] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.968457] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968518] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\n"}
[0.968580] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.968642] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.968703] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.968765] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:50:33: W291 trailing whitespace\n'}
[0.968827] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.968890] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.968974] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969082] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\n"}
[0.969209] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.969280] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.969345] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969429] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\n"}
[0.969502] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.969574] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.969646] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.969720] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\n"}
[0.969793] (turtle_brick) StdoutLine: {'line': b'        #setting state of brick\n'}
[0.969866] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.969938] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970010] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\n"}
[0.970091] (turtle_brick) StdoutLine: {'line': b'        #set up subscribers\n'}
[0.970164] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.970237] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970309] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\n"}
[0.970395] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.970465] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.970535] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970605] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\n"}
[0.970676] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.970746] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.970816] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.970885] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\n"}
[0.970955] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.971025] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[0.971094] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971164] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\n"}
[0.971235] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[0.971304] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.971405] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971540] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\n"}
[0.971677] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.971770] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.971891] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.971964] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\n"}
[0.972028] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.972091] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.972153] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972214] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\n"}
[0.972276] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.972338] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.972414] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972478] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\n"}
[0.972543] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.972606] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.972670] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.972733] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\n"}
[0.972796] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.972859] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.972923] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973037] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\n"}
[0.973116] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.973183] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.973249] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973315] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\n'}
[0.973380] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.973445] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.973509] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973573] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\n'}
[0.973637] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.973702] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.973767] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.973832] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\n"}
[0.973897] (turtle_brick) StdoutLine: {'line': b'        #initialize services\n'}
[0.973962] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.974027] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974091] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\n"}
[0.974156] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.974234] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[0.974301] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974366] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\n"}
[0.974432] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.974497] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.974569] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974634] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\n"}
[0.974700] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.974766] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.974831] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.974896] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\n"}
[0.974961] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.975025] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.975090] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975154] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\n'}
[0.975219] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.975283] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.975348] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975463] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\n"}
[0.975531] (turtle_brick) StdoutLine: {'line': b'        #creating brick marker\n'}
[0.975594] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.975657] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975719] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\n"}
[0.975783] (turtle_brick) StdoutLine: {'line': b'        #creating wall markers\n'}
[0.975845] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.975907] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975970] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\n'}
[0.976034] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.976097] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.976160] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976222] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\n"}
[0.976285] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.976347] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.976423] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976483] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:192:26: W291 trailing whitespace\n'}
[0.976544] (turtle_brick) StdoutLine: {'line': b'        self.brickz = 0.0 \n'}
[0.976605] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[0.976665] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976726] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\n"}
[0.976787] (turtle_brick) StdoutLine: {'line': b'        self.wall = self.create_timer(0.5,self.wall_callback)\n'}
[0.976847] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.976909] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976968] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\n"}
[0.977029] (turtle_brick) StdoutLine: {'line': b'    def place_callback(self, request,response):\n'}
[0.977091] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.977151] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977211] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\n"}
[0.977271] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.977331] (turtle_brick) StdoutLine: {'line': b'                                  ^\n'}
[0.977406] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977468] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\n"}
[0.977530] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.977608] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.977670] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977733] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\n'}
[0.977801] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.977862] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.977923] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977983] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\n"}
[0.978044] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.978105] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.978165] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978225] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\n'}
[0.978286] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[0.978347] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.978420] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978479] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\n"}
[0.978539] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.978599] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.978661] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978720] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\n"}
[0.978780] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.978840] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.978900] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978966] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\n"}
[0.979027] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.979100] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.979161] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979234] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\n"}
[0.979294] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.979354] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.979460] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979528] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\n"}
[0.979590] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self, request,response):\n'}
[0.979652] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[0.979713] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979775] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\n'}
[0.979838] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[0.979900] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.979962] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980024] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\n"}
[0.980086] (turtle_brick) StdoutLine: {'line': b'        #publishing wall markers\n'}
[0.980161] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.980222] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980282] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\n'}
[0.980341] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[0.980424] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.980490] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980555] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\n'}
[0.980620] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.980686] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.980751] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980816] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\n'}
[0.980883] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.980995] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.981129] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981273] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\n'}
[0.981429] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.981567] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.981705] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981842] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\n"}
[0.981981] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.982119] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.982256] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982394] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\n"}
[0.982553] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.982688] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.982821] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982954] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\n"}
[0.983088] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.983222] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.983369] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983560] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\n'}
[0.983737] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.983917] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.984051] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984184] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\n"}
[0.984325] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.984448] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.984570] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984693] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\n"}
[0.984816] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.984939] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.985063] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985186] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:272:30: W291 trailing whitespace\n'}
[0.985309] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[0.985432] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[0.985555] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985678] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\n'}
[0.985802] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[0.985925] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.986049] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986172] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\n'}
[0.986296] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.986420] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.986555] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986679] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\n"}
[0.986803] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.986927] (turtle_brick) StdoutLine: {'line': b'                                                                 ^\n'}
[0.987051] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987174] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\n'}
[0.987298] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[0.987453] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[0.987586] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987711] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\n'}
[0.987835] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[0.987959] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.988083] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988206] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:294:19: W291 trailing whitespace\n'}
[0.988330] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[0.988470] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[0.988600] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988729] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:295:1: W391 blank line at end of file\n'}
[0.988858] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989046] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.989217] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989338] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[0.989482] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.989598] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.989696] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989793] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[0.989891] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[0.989996] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.990086] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990176] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[0.990267] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[0.990357] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[0.990447] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990537] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[0.990628] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[0.990720] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.990811] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990901] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[0.990992] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.991083] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.991220] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991347] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[0.991503] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.991621] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.991718] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991816] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[0.991923] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[0.992021] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.992119] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992216] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[0.992313] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[0.992411] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[0.992514] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992604] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[0.992695] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.992786] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.992876] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992966] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[0.993057] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[0.993148] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.993240] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993331] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[0.993442] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.993540] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.993639] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.993738] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.993836] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.993936] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.994035] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.994158] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.994264] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.994395] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.994499] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.994603] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.994708] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.994812] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.994917] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.995021] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.995126] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.995230] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.995349] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.995490] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.995608] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.995703] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[0.995803] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995921] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[0.996038] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.996155] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.996273] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.996405] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.996533] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.996654] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.996779] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.996889] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[0.997029] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[0.997194] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.997340] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[0.997473] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[0.997589] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[0.997706] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[0.997823] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[0.997940] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[0.998058] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.998175] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[0.998292] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[0.998428] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.998542] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.998656] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[0.998769] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998884] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[0.998998] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.999112] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[0.999226] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[0.999357] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.999569] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[0.999690] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[0.999811] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[0.999930] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.000050] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.000171] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.000290] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.000410] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.000530] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.000650] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.000770] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.000890] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.001010] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.001130] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.001250] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.001369] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.001505] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.001678] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.001801] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001923] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[1.002046] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.002169] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.002292] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.002427] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.002546] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.002666] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.002785] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.002905] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.003024] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.003144] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.003264] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.003461] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.003607] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.003758] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.003919] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.004097] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.004223] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.004349] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.004476] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.004601] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.004727] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.004853] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.004998] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005174] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[1.005297] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.005414] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.005532] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.005650] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.005766] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.005883] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.005999] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.006116] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.006232] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.006349] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.006466] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.006583] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.006699] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.006811] (-) TimerEvent: {}
[1.006931] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.007069] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.007196] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.007313] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.007467] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.007590] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.007708] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.007824] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.007940] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.008056] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008172] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[1.008294] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.008425] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.008546] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.008666] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.008786] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.008906] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.009052] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.009209] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.009351] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.009472] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.009592] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.009713] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.009833] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.009965] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.010081] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.010198] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.010314] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.010443] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.010578] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.010701] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.010824] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.010947] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.011070] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.011193] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[1.011316] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.011471] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.011551] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.011621] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.011688] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.011756] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.011823] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.011890] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.011957] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.012033] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.012099] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.012166] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.012232] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.012298] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.012365] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.012431] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.012497] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.012564] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.012629] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.012697] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.012763] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.012829] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.012896] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012962] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[1.013038] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.013157] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.013226] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.013291] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.013355] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.013420] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.013484] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.013548] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.013612] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.013675] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.013739] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.013802] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.013865] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.013929] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.013992] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.014056] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.014119] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.014182] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.014247] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.014311] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.014375] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.014436] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[1.015212] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015418] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[1.015867] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.016018] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.016153] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.016300] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.016437] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.016558] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.016679] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.016801] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.016921] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.017054] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.017175] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.017296] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.017416] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.017536] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.017656] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.017776] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.017897] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.018016] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.018136] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.018256] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.018386] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.018516] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.018643] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.018785] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[1.018915] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.019018] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.019121] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019223] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[1.019326] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.019462] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.019576] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019669] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[1.019762] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.019854] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.019946] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020056] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[1.020167] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.020260] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.020352] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020444] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[1.020537] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.020630] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.020722] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020815] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[1.020907] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.021006] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.021112] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021207] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[1.021301] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.021396] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.021491] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021585] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[1.021680] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.021775] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.021870] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.021964] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[1.022059] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.022153] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.022248] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022343] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[1.022438] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.022534] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.022629] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022724] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[1.022819] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.022914] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.023009] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023104] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[1.023198] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.023293] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.023404] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023527] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[1.023605] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.023667] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.023727] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023786] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[1.023847] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.023913] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[1.023974] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024033] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[1.024093] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.024153] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[1.024214] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024273] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[1.024338] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.024397] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.024456] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024515] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[1.024574] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.024634] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.024694] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024753] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[1.024813] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.024882] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.024941] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.024999] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[1.025061] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[1.025132] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.025194] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025253] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[1.025311] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.025369] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.025427] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025484] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[1.025542] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.025600] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.025659] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025718] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[1.025776] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.025834] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.025892] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025950] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[1.026008] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[1.026066] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.026126] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026184] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[1.026242] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[1.026300] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.026357] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026414] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[1.026472] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[1.026529] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.026585] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026641] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[1.026698] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[1.026754] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.026811] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026867] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[1.026924] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[1.026987] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.027044] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027101] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[1.027158] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.027216] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.027273] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027330] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[1.027388] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[1.027514] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.027593] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027651] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[1.027710] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.027770] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[1.027828] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027886] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[1.027945] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.028003] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.028061] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028119] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[1.028176] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.028234] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.028292] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028349] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[1.028419] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.028475] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[1.028538] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028595] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[1.028651] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.028707] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[1.028782] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028880] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[1.029052] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.029223] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.029419] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029512] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[1.029571] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.029628] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.029685] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029741] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[1.029798] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.029861] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.029917] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029973] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[1.030030] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.030086] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.030143] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030199] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[1.030255] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.030311] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.030366] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030422] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[1.030479] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[1.030535] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.030590] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030646] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[1.030703] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.030759] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.030815] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030871] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[1.030927] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.030983] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.031039] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031095] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[1.031161] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.031257] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.031317] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031374] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[1.031501] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.031584] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.031653] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031711] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[1.031768] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.031825] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.031881] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031938] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[1.031995] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.032052] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.032108] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032164] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[1.032221] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.032278] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.032334] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032389] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[1.032446] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.032503] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.032559] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032614] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.032671] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.032727] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.032791] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032847] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[1.032903] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.032959] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.033015] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033070] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[1.033126] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.033183] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.033237] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033292] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[1.033347] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.033403] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.033458] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033513] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[1.033569] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.033625] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.033683] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033740] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[1.033797] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.033855] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.033911] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033968] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[1.034027] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.034084] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.034140] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034196] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[1.034263] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.034321] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.034377] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034432] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[1.034488] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.034543] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.034598] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034653] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[1.034708] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.034762] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.034817] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034871] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[1.034927] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.034981] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.035036] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035090] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[1.035144] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.035199] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.035260] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035314] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[1.035369] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.035499] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035607] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035713] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[1.035817] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.035885] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.035950] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036013] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[1.036076] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.036139] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.036213] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036275] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[1.036337] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.036398] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.036458] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036519] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[1.036580] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.036640] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.036701] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036762] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[1.036823] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.036884] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.036945] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037005] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[1.037064] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.037135] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.037197] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037279] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[1.037344] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.037426] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.037491] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037564] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[1.037629] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.037694] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.037759] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037824] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[1.037889] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.037955] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.038036] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038094] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[1.038168] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.038232] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.038288] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038344] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[1.038401] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.038458] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038516] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038573] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[1.038630] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.038687] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038743] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038799] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[1.038855] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.038911] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.038968] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039024] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[1.039080] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.039135] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.039190] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039246] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[1.039302] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.039357] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.039504] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039584] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[1.039642] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039698] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.039775] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039840] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.039948] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.040027] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040103] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040161] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.040230] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.040287] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040343] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040398] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.040455] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.040510] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040566] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040622] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.040679] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.040736] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040791] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040847] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.040903] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.040960] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041015] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041070] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.041126] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.041181] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041242] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041297] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.041353] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.041408] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.041463] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041517] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.041572] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.041627] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.041681] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041737] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.041793] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.041848] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041903] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041957] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.042013] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.042067] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.042122] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042177] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[1.042233] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.042288] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.042343] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042398] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[1.042453] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.042536] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.042596] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.042653] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.042709] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.042765] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.042821] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.042877] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.042932] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.042987] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.043043] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.043098] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.043153] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.043207] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.043263] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.043317] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.043372] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.043426] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043534] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[1.043632] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.043682] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.043731] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.043781] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.043837] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.043887] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.043936] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.043986] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.044035] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.044085] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.044135] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.044184] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.044233] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.044283] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.044333] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.044382] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.044431] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.044481] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.044531] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044581] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[1.044631] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.044681] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.044731] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044780] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[1.044829] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.044878] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.044937] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044987] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[1.045036] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.045088] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.045158] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045241] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[1.045338] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.045417] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.045473] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045527] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[1.045584] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.045648] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.045697] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045745] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[1.045794] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.045852] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.045920] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045972] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[1.046022] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.046072] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.046122] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046191] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[1.046279] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.046350] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.046424] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046517] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[1.046575] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.046633] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.046691] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046748] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[1.046805] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.046863] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.046920] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046977] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[1.047034] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.047091] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.047147] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047203] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[1.047260] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.047317] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.047375] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047493] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[1.047580] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.047638] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.047696] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047753] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[1.047810] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.047868] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.047926] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047982] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.048041] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.048098] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.048157] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048215] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[1.048273] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.048331] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.048388] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048459] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[1.048516] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.048572] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.048628] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048684] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[1.048740] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.048797] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.048859] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048915] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[1.048971] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.049027] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.049176] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049329] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[1.049485] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.049641] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.049744] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049812] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.049880] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.049948] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.050015] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050082] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.050150] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.050237] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.050303] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050367] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.050432] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.050497] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.050562] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050626] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.050691] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.050756] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.050821] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050886] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.050951] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.051015] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.051078] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051142] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.051270] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.051382] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.051508] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051578] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.051660] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.051725] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.051790] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051855] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.051938] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.052003] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.052069] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052133] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.052198] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.052262] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.052328] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052392] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.052464] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.052530] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.052595] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052659] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.052724] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.052789] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.052891] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052961] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.053028] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.053093] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.053261] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053338] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.053408] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.053484] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.053546] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053608] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.053670] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.053731] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.053792] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053853] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.053914] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.053987] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.054046] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054104] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.054165] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.054226] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.054285] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054344] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.054404] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.054465] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.054525] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054584] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.054644] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.054705] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.054765] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054823] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.054882] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.054941] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.055000] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055058] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.055124] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.055183] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.055241] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055299] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.055358] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.055440] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.055515] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055574] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.055638] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.055699] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.055758] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055816] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.055875] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.055934] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.055993] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056052] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.056111] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.056170] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.056230] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056289] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.056348] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.056407] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.056465] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056524] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.056583] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.056641] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.056700] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056759] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.056818] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.056892] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.056952] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.057010] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.057069] (turtle_brick) StderrLine: {'line': b'\n'}
[1.057127] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.057185] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.057244] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057302] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.057361] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.057419] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057477] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[1.057536] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.057595] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057653] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.057712] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.057771] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.057835] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057894] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.057953] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.058019] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.058078] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058136] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.058195] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.058254] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.058312] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058371] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.058443] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.058497] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.058552] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058605] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.058660] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.058715] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.058770] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058824] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.058884] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.058939] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.058992] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059046] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.059101] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.059176] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.059238] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059299] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.059361] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.059431] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.059534] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059588] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.059643] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.059697] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.059751] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059805] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.059860] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.059914] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059969] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.060024] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.060079] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.060133] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060187] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.060241] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.060295] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.060350] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060404] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.060459] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.060519] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.060585] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060730] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.060830] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.060904] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.060960] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.061016] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.061070] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.061124] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.061179] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.061239] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.061295] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.061351] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.061407] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.061462] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.061517] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.061571] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.061626] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061680] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.061734] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.061788] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.061844] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.061898] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.061972] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.062030] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.062085] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.062139] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.062194] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.062248] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.062302] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.062356] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.062410] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.062464] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.062518] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062571] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.062625] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.062679] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.062733] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062786] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.062841] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.062895] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.062950] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063005] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.063060] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.063114] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.063176] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063231] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.063285] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.063340] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.063407] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063530] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.063608] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.063665] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.063722] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063779] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.063837] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.063895] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.063952] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064008] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.064065] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.064129] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.064186] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064242] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.064299] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.064361] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.064418] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064475] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.064531] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.064588] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.064646] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064702] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.064760] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.064817] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.064874] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064930] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.064987] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.065044] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.065101] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065158] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.065215] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.065278] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.065342] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065397] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.065454] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.065511] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.065568] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065625] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.065681] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.065739] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.065796] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065852] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.065909] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.065966] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.066022] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066078] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.066135] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.066191] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066248] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.066305] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.066361] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.066417] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066473] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.066530] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.066587] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.066643] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066699] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.066755] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.066810] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.066867] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066924] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.066981] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.067038] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.067095] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067152] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.067209] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.067266] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.067323] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067380] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.067499] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.067582] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.067640] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067698] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.067762] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.067819] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.067876] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067933] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.067991] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.068047] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.068105] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.068162] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.068219] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.068276] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.068360] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068552] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.068736] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.068845] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.068903] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068959] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.069016] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.069072] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.069127] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069184] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.069249] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.069305] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.069361] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069416] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.069472] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.069540] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.069597] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069649] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.069701] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.069753] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069804] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069855] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.069931] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.069992] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070050] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.070103] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.070178] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.070233] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070288] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.070342] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.070396] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.070450] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.070504] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.070559] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.070613] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.070673] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.070728] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070782] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.070848] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.070899] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.070951] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.071003] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.071054] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.071105] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.071171] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.071247] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071301] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.071360] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.071507] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071608] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071689] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.071772] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.071867] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071943] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072026] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.072093] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.072188] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072284] (turtle_brick) StdoutLine: {'line': b'3     E128 continuation line under-indented for visual indent\n'}
[1.072381] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.072461] (turtle_brick) StdoutLine: {'line': b'27    E225 missing whitespace around operator\n'}
[1.072545] (turtle_brick) StdoutLine: {'line': b"77    E231 missing whitespace after ','\n"}
[1.072654] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.072719] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.072807] (turtle_brick) StdoutLine: {'line': b"3     E262 inline comment should start with '# '\n"}
[1.072896] (turtle_brick) StdoutLine: {'line': b"34    E265 block comment should start with '# '\n"}
[1.072985] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.073050] (turtle_brick) StdoutLine: {'line': b'8     E302 expected 2 blank lines, found 0\n'}
[1.073113] (turtle_brick) StdoutLine: {'line': b'7     E303 too many blank lines (2)\n'}
[1.073177] (turtle_brick) StdoutLine: {'line': b'9     E501 line too long (115 > 99 characters)\n'}
[1.073242] (turtle_brick) StdoutLine: {'line': b"33    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.073306] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.073369] (turtle_brick) StdoutLine: {'line': b'39    W291 trailing whitespace\n'}
[1.073445] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.073504] (turtle_brick) StdoutLine: {'line': b'26    W293 blank line contains whitespace\n'}
[1.073563] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.073622] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073680] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.073739] (turtle_brick) StdoutLine: {'line': b'283 errors\n'}
[1.073798] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073857] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 176\n"}
[1.073916] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 34\n"}
[1.073974] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 73\n"}
[1.074033] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074098] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.074157] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074215] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.074273] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.074332] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.074390] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.074449] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.074508] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.074566] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.074624] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.074683] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.074741] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.074800] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.074858] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.074941] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.075048] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.075168] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.075236] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.075342] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.075463] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.075537] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.075627] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.075691] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.075754] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.075815] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.075876] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.075936] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.075997] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.076057] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.076117] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.076177] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.076238] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.076310] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.076369] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.076428] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.076494] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.076553] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.076619] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.076679] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.076763] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.076825] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.076885] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.076946] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.077007] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.077067] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.077128] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.077189] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.077249] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.077311] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.077372] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.077433] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.077494] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.077555] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.077617] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.077678] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.077739] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.077800] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.077872] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.077929] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.077987] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.078045] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.078103] (turtle_brick) StdoutLine: {'line': b'20 errors\n'}
[1.078161] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.078220] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.078278] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 283 code styl...\n'}
[1.078336] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.078410] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.41s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.078481] (turtle_brick) CommandEnded: {'returncode': 1}
[1.078758] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.078786] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.079128] (-) EventReactorShutdown: {}
