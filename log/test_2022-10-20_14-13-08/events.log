[0.000000] (-) TimerEvent: {}
[0.000484] (turtle_brick) JobQueued: {'identifier': 'turtle_brick', 'dependencies': OrderedDict([('turtle_brick', '/home/alyssa/homework2-alyssa225/install/turtle_brick')])}
[0.000575] (turtle_brick_interfaces) JobQueued: {'identifier': 'turtle_brick_interfaces', 'dependencies': OrderedDict([('turtle_brick_interfaces', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces')])}
[0.000687] (turtle_brick) JobStarted: {'identifier': 'turtle_brick'}
[0.011653] (turtle_brick_interfaces) JobStarted: {'identifier': 'turtle_brick_interfaces'}
[0.099450] (-) TimerEvent: {}
[0.199778] (-) TimerEvent: {}
[0.253932] (turtle_brick) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/alyssa/homework2-alyssa225/src/turtle_brick', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'alyssa', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib', 'HOME': '/home/alyssa', 'OLDPWD': '/home/alyssa/homework2-alyssa225/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '418763', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install', 'ROS_DISTRO': 'humble', 'LOGNAME': 'alyssa', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'alyssa', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.BJT0T1', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'GNOME_TERMINAL_SERVICE': ':1.10137', 'SSH_AGENT_LAUNCHER': 'gnome-keyring', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/opt/ros/humble', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/alyssa/homework2-alyssa225/build/turtle_brick', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages', 'COLCON': '1', 'VTE_VERSION': '6800', 'CMAKE_PREFIX_PATH': '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml --junit-prefix=turtle_brick -o cache_dir=/home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache'}, 'shell': False}
[0.267141] (turtle_brick_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'alyssa'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/alyssa'), ('OLDPWD', '/home/alyssa/homework2-alyssa225/src'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '418763'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'alyssa'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'alyssa'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/alyssa-Galago-Pro:@/tmp/.ICE-unix/1005,unix/alyssa-Galago-Pro:/tmp/.ICE-unix/1005'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/6d4b914e_9fd7_45b5_b317_afa2fd1ab6a4'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.BJT0T1'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.10137'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces/local/lib/python3.10/dist-packages:/home/alyssa/homework2-alyssa225/install/turtle_brick/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/alyssa/homework2-alyssa225/install/turtle_brick_interfaces:/home/alyssa/homework2-alyssa225/install/turtle_brick_interface')]), 'shell': False}
[0.273345] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.273720] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.274085] (turtle_brick_interfaces) StdoutLine: {'line': b'   Site: alyssa-Galago-Pro\n'}
[0.274178] (turtle_brick_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.274258] (turtle_brick_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.274644] (turtle_brick_interfaces) StdoutLine: {'line': b'Create new tag: 20221020-1913 - Experimental\n'}
[0.274726] (turtle_brick_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.274796] (turtle_brick_interfaces) StdoutLine: {'line': b'Parse Config file:/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/CTestConfiguration.ini\n'}
[0.274863] (turtle_brick_interfaces) StdoutLine: {'line': b'Test project /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces\n'}
[0.274928] (turtle_brick_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.274993] (turtle_brick_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.275057] (turtle_brick_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.275121] (turtle_brick_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.275185] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.275247] (turtle_brick_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.275364] (turtle_brick_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.275468] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.275537] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.275605] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml"\n'}
[0.275687] (turtle_brick_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.299866] (-) TimerEvent: {}
[0.328513] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.328742] (turtle_brick_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml\n'}
[0.389080] (turtle_brick_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:15: Mismatching spaces inside () after command [whitespace/mismatch]\n'}
[0.389334] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.389536] (turtle_brick_interfaces) StdoutLine: {'line': b'1: \n'}
[0.389706] (turtle_brick_interfaces) StdoutLine: {'line': b'1: 1 errors\n'}
[0.397656] (turtle_brick_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.397905] (turtle_brick_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/lint_cmake.xunit.xml'\n"}
[0.399955] (-) TimerEvent: {}
[0.408370] (turtle_brick_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.13 sec\n'}
[0.408705] (turtle_brick_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.408867] (turtle_brick_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.409021] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.409174] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml" "--package-name" "turtle_brick_interfaces" "--output-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml"\n'}
[0.409333] (turtle_brick_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.462624] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/alyssa/homework2-alyssa225/src/turtle_brick_interfaces':\n"}
[0.462844] (turtle_brick_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml\n'}
[0.500071] (-) TimerEvent: {}
[0.536197] (turtle_brick) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[0.536480] (turtle_brick) StdoutLine: {'line': b'platform linux -- Python 3.10.6, pytest-6.2.5, py-1.10.0, pluggy-0.13.0\n'}
[0.541030] (turtle_brick) StdoutLine: {'line': b'cachedir: /home/alyssa/homework2-alyssa225/build/turtle_brick/.pytest_cache\n'}
[0.541262] (turtle_brick) StdoutLine: {'line': b'rootdir: /home/alyssa/homework2-alyssa225/src/turtle_brick\n'}
[0.541415] (turtle_brick) StdoutLine: {'line': b'plugins: ament-lint-0.12.4, ament-xmllint-0.12.4, launch-testing-ros-0.19.3, launch-testing-1.0.2, ament-flake8-0.12.4, ament-pep257-0.12.4, ament-copyright-0.12.4, colcon-core-0.10.0, cov-3.0.0\n'}
[0.600162] (-) TimerEvent: {}
[0.609246] (turtle_brick) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[0.609576] (turtle_brick) StdoutLine: {'line': b'collected 4 items                                                              \x1b[0m\n'}
[0.609845] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.616101] (turtle_brick) StdoutLine: {'line': b'test/math_test.py \x1b[32m.\x1b[0m\x1b[32m                                                      [ 25%]\x1b[0m\n'}
[0.617320] (turtle_brick) StdoutLine: {'line': b'test/test_copyright.py \x1b[33ms\x1b[0m\x1b[32m                                                 [ 50%]\x1b[0m\n'}
[0.638229] (turtle_brick_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.638534] (turtle_brick_interfaces) StdoutLine: {'line': b'2: \n'}
[0.638718] (turtle_brick_interfaces) StdoutLine: {'line': b'2: No problems found\n'}
[0.652513] (turtle_brick_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.652787] (turtle_brick_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/test_results/turtle_brick_interfaces/xmllint.xunit.xml'\n"}
[0.662920] (turtle_brick_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.25 sec\n'}
[0.663320] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.663482] (turtle_brick_interfaces) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 2\n'}
[0.663604] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.663732] (turtle_brick_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.663860] (turtle_brick_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.13 sec*proc (1 test)\n'}
[0.663994] (turtle_brick_interfaces) StdoutLine: {'line': b'linter        =   0.39 sec*proc (2 tests)\n'}
[0.664143] (turtle_brick_interfaces) StdoutLine: {'line': b'xmllint       =   0.25 sec*proc (1 test)\n'}
[0.664355] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.664480] (turtle_brick_interfaces) StdoutLine: {'line': b'Total Test time (real) =   0.39 sec\n'}
[0.664618] (turtle_brick_interfaces) StdoutLine: {'line': b'\n'}
[0.664770] (turtle_brick_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[0.664942] (turtle_brick_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[0.688247] (turtle_brick_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[0.688537] (turtle_brick_interfaces) StderrLine: {'line': b'Output from these tests are in: /home/alyssa/homework2-alyssa225/build/turtle_brick_interfaces/Testing/Temporary/LastTest.log\n'}
[0.688723] (turtle_brick_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[0.691075] (turtle_brick_interfaces) CommandEnded: {'returncode': 8}
[0.691855] (turtle_brick_interfaces) TestFailure: {'identifier': 'turtle_brick_interfaces'}
[0.691952] (turtle_brick_interfaces) JobEnded: {'identifier': 'turtle_brick_interfaces', 'rc': 0}
[0.700264] (-) TimerEvent: {}
[0.800698] (-) TimerEvent: {}
[0.835857] (turtle_brick) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 75%]\x1b[0m\n'}
[0.897115] (turtle_brick) StdoutLine: {'line': b'test/test_pep257.py \x1b[31mF\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[0.897356] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.897475] (turtle_brick) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[0.897630] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[0.897717] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[0.900829] (-) TimerEvent: {}
[0.932603] (turtle_brick) StdoutLine: {'line': b'    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \\\n'}
[0.932973] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 288 code style errors / warnings:\x1b[0m\n'}
[0.933287] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:15:9: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.933753] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:16:9: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.934298] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:19:7: W291 trailing whitespace\x1b[0m\n'}
[0.934647] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:20:43: E231 missing whitespace after ','\x1b[0m\n"}
[0.934996] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:20:52: W291 trailing whitespace\x1b[0m\n'}
[0.935444] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:26:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.935775] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:26:48: W291 trailing whitespace\x1b[0m\n'}
[0.936073] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\x1b[0m\n"}
[0.936379] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.936699] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\x1b[0m\n"}
[0.940849] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.942305] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\x1b[0m\n"}
[0.942767] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:12:42: W291 trailing whitespace\x1b[0m\n'}
[0.942966] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\x1b[0m\n"}
[0.943158] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.943363] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.943486] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.943626] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:39:53: W291 trailing whitespace\x1b[0m\n'}
[0.943749] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.943884] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:50:33: W291 trailing whitespace\x1b[0m\n'}
[0.944026] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.944145] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.944264] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.944382] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.944501] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.944622] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.944814] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.944979] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.945094] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.945216] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.945331] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.945445] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.945571] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.945691] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.945796] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.945902] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.946007] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.946125] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\x1b[0m\n"}
[0.946233] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.946338] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.946443] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.946548] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.946654] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.946759] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.946864] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.946970] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.947076] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:192:26: W291 trailing whitespace\x1b[0m\n'}
[0.947182] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\x1b[0m\n"}
[0.947287] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\x1b[0m\n"}
[0.947395] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\x1b[0m\n"}
[0.947511] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\x1b[0m\n"}
[0.947613] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.947714] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.947815] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.947917] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\x1b[0m\n"}
[0.948018] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.948209] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.948311] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.948412] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\x1b[0m\n"}
[0.948513] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\x1b[0m\n'}
[0.948614] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.948716] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\x1b[0m\n'}
[0.948818] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.948924] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.949026] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.949127] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\x1b[0m\n"}
[0.949229] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.949330] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.949431] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.949533] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\x1b[0m\n"}
[0.949634] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.949818] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:272:30: W291 trailing whitespace\x1b[0m\n'}
[0.949944] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\x1b[0m\n'}
[0.950083] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.950214] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\x1b[0m\n"}
[0.950348] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.950481] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\x1b[0m\n'}
[0.950649] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:294:19: W291 trailing whitespace\x1b[0m\n'}
[0.950799] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/arena.py:295:1: W391 blank line at end of file\x1b[0m\n'}
[0.950948] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\x1b[0m\n"}
[0.951111] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\x1b[0m\n"}
[0.951259] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\x1b[0m\n'}
[0.951406] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\x1b[0m\n"}
[0.951553] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\x1b[0m\n"}
[0.951738] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.951878] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\x1b[0m\n'}
[0.952019] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\x1b[0m\n'}
[0.952160] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.952301] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.952450] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\x1b[0m\n'}
[0.952584] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\x1b[0m\n'}
[0.952717] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\x1b[0m\n'}
[0.952866] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\x1b[0m\n'}
[0.953036] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\x1b[0m\n'}
[0.953170] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\x1b[0m\n'}
[0.953289] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\x1b[0m\n'}
[0.953409] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\x1b[0m\n'}
[0.953528] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\x1b[0m\n'}
[0.953647] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.953767] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\x1b[0m\n'}
[0.953886] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.954006] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.954170] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.954291] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.954409] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.954538] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.954657] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\x1b[0m\n"}
[0.954776] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.954895] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\x1b[0m\n"}
[0.955014] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.955132] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\x1b[0m\n"}
[0.955256] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\x1b[0m\n"}
[0.955375] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\x1b[0m\n"}
[0.955494] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\x1b[0m\n"}
[0.955613] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\x1b[0m\n"}
[0.955731] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\x1b[0m\n"}
[0.955849] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\x1b[0m\n'}
[0.956106] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.956271] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.956392] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\x1b[0m\n'}
[0.956512] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\x1b[0m\n'}
[0.956631] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.956759] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\x1b[0m\n'}
[0.956879] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.956998] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.957133] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.957253] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.957372] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\x1b[0m\n"}
[0.957490] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.957609] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\x1b[0m\n'}
[0.957728] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\x1b[0m\n"}
[0.957848] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\x1b[0m\n'}
[0.957966] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\x1b[0m\n'}
[0.958117] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.958259] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\x1b[0m\n'}
[0.958403] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.958574] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.958772] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.958984] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.959190] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\x1b[0m\n'}
[0.959334] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.959478] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\x1b[0m\n"}
[0.959622] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.959766] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.959921] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.960064] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.960201] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.960338] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.960474] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.960622] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.960754] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.960886] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\x1b[0m\n'}
[0.961017] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\x1b[0m\n'}
[0.961149] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\x1b[0m\n'}
[0.961281] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.961412] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\x1b[0m\n'}
[0.961544] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.961676] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\x1b[0m\n'}
[0.961821] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.961957] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.962113] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\x1b[0m\n'}
[0.962253] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\x1b[0m\n'}
[0.962389] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.962525] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\x1b[0m\n"}
[0.962673] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.962820] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\x1b[0m\n'}
[0.962952] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\x1b[0m\n'}
[0.963084] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.963215] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\x1b[0m\n'}
[0.963359] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.963492] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.963624] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\x1b[0m\n'}
[0.963756] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\x1b[0m\n'}
[0.963888] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\x1b[0m\n'}
[0.964020] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\x1b[0m\n'}
[0.964251] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\x1b[0m\n"}
[0.964436] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\x1b[0m\n"}
[0.964631] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\x1b[0m\n"}
[0.964800] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\x1b[0m\n"}
[0.964980] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\x1b[0m\n"}
[0.965123] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\x1b[0m\n"}
[0.965265] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:11:42: W291 trailing whitespace\x1b[0m\n'}
[0.965379] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:12:12: W291 trailing whitespace\x1b[0m\n'}
[0.965493] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\x1b[0m\n"}
[0.965627] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.965735] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.965853] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:28:69: W291 trailing whitespace\x1b[0m\n'}
[0.965957] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:34:82: W291 trailing whitespace\x1b[0m\n'}
[0.966071] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.966181] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:45:33: W291 trailing whitespace\x1b[0m\n'}
[0.966293] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\x1b[0m\n"}
[0.966397] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.966501] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.966606] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.966710] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.966813] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.966917] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\x1b[0m\n"}
[0.967021] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\x1b[0m\n"}
[0.967125] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.967230] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.967334] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.967438] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\x1b[0m\n"}
[0.967543] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.967647] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.967752] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\x1b[0m\n"}
[0.967856] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.967961] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.968065] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\x1b[0m\n"}
[0.968170] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\x1b[0m\n"}
[0.968275] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\x1b[0m\n"}
[0.968380] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\x1b[0m\n"}
[0.968484] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.968588] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.968693] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\x1b[0m\n"}
[0.968811] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.968916] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\x1b[0m\n'}
[0.969020] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.969130] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.969235] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.969339] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\x1b[0m\n"}
[0.969443] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\x1b[0m\n'}
[0.969547] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\x1b[0m\n"}
[0.969651] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\x1b[0m\n'}
[0.969755] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\x1b[0m\n"}
[0.969859] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\x1b[0m\n'}
[0.969964] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\x1b[0m\n'}
[0.970095] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\x1b[0m\n'}
[0.970264] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.970392] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\x1b[0m\n"}
[0.970510] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\x1b[0m\n'}
[0.970648] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.970772] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.970896] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.971030] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\x1b[0m\n'}
[0.971148] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./turtle_brick/catcher.py:147:21: W292 no newline at end of file\x1b[0m\n'}
[0.971265] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.971383] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/math_test.py:4:9: W292 no newline at end of file\x1b[0m\n'}
[0.971500] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\x1b[0m\n"}
[0.971618] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:2:1: F401 'pytest' imported but unused\x1b[0m\n"}
[0.971736] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:3:1: F401 'launch' imported but unused\x1b[0m\n"}
[0.971854] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\x1b[0m\n"}
[0.971971] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:5:1: F401 'sys' imported but unused\x1b[0m\n"}
[0.972147] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\x1b[0m\n"}
[0.972269] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\x1b[0m\n"}
[0.972338] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./test/brick.test.py:8:1: E265 block comment should start with '# '\x1b[0m\n"}
[0.972411] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\x1b[0m\n'}
[0.972475] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./test/brick.test.py:21:9: W292 no newline at end of file\x1b[0m\n'}
[0.972539] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.972603] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\x1b[0m\n"}
[0.972665] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.972728] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\x1b[0m\n'}
[0.972791] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\x1b[0m\n'}
[0.972852] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.972915] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\x1b[0m\n'}
[0.972977] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\x1b[0m\n'}
[0.973040] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.973103] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\x1b[0m\n"}
[0.973194] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\x1b[0m\n'}
[0.973257] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\x1b[0m\n"}
[0.973334] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\x1b[0m\n'}
[0.973398] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\x1b[0m\n'}
[0.973460] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\x1b[0m\n"}
[0.973523] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[0.973584] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\x1b[0m\n"}
[0.973647] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\x1b[0m\n"}
[0.973709] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.973771] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\x1b[0m\n"}
[0.973854] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\x1b[0m\n'}
[0.973931] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\x1b[0m\n"}
[0.973994] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\x1b[0m\n"}
[0.974071] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\x1b[0m\n"}
[0.974139] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\x1b[0m\n"}
[0.974202] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\x1b[0m\n"}
[0.974264] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\x1b[0m\n"}
[0.974325] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\x1b[0m\n"}
[0.974388] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\x1b[0m\n'}
[0.974450] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[0.974512] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.974575] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[0.974637] (turtle_brick) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\x1b[0m\n"}
[0.974699] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.974761] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\x1b[0m\n'}
[0.974824] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\x1b[0m\n'}
[0.974886] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\x1b[0m\n'}
[0.974948] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\x1b[0m\n'}
[0.975011] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[0.975074] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\x1b[0m\n'}
[0.975136] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\x1b[0m\n'}
[0.975198] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[0.975260] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[0.975325] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975388] (turtle_brick) StdoutLine: {'line': b'./setup.py:15:9: E128 continuation line under-indented for visual indent\n'}
[0.975451] (turtle_brick) StdoutLine: {'line': b"        'config/turtle_urdf.rviz', 'launch/run_turtle.launch.py',\n"}
[0.975514] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.975577] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975639] (turtle_brick) StdoutLine: {'line': b'./setup.py:16:9: E128 continuation line under-indented for visual indent\n'}
[0.975702] (turtle_brick) StdoutLine: {'line': b"        'launch/turtle_arena.launch.py']),\n"}
[0.975765] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.975828] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.975891] (turtle_brick) StdoutLine: {'line': b'./setup.py:19:7: W291 trailing whitespace\n'}
[0.975953] (turtle_brick) StdoutLine: {'line': b'    ], \n'}
[0.976022] (turtle_brick) StdoutLine: {'line': b'      ^\n'}
[0.976084] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976146] (turtle_brick) StdoutLine: {'line': b"./setup.py:20:43: E231 missing whitespace after ','\n"}
[0.976207] (turtle_brick) StdoutLine: {'line': b"    install_requires=['setuptools', 'urdf','rviz'], \n"}
[0.976270] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[0.976333] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976396] (turtle_brick) StdoutLine: {'line': b'./setup.py:20:52: W291 trailing whitespace\n'}
[0.976458] (turtle_brick) StdoutLine: {'line': b"    install_requires=['setuptools', 'urdf','rviz'], \n"}
[0.976520] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[0.976582] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976643] (turtle_brick) StdoutLine: {'line': b"./setup.py:26:28: E231 missing whitespace after ','\n"}
[0.976704] (turtle_brick) StdoutLine: {'line': b"    tests_require=['pytest','ament_lint_auto'], \n"}
[0.976766] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.976828] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.976891] (turtle_brick) StdoutLine: {'line': b'./setup.py:26:48: W291 trailing whitespace\n'}
[0.976952] (turtle_brick) StdoutLine: {'line': b"    tests_require=['pytest','ament_lint_auto'], \n"}
[0.977014] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.977076] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977137] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:1:1: F401 'xmlrpc.client.Boolean' imported but unused\n"}
[0.977199] (turtle_brick) StdoutLine: {'line': b'from xmlrpc.client import Boolean\n'}
[0.977260] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.977321] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977382] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:5:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[0.977455] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[0.977518] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.977580] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977641] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:9:1: F401 'math.pi' imported but unused\n"}
[0.977709] (turtle_brick) StdoutLine: {'line': b'from math import pi\n'}
[0.977771] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.977833] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.977894] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:10:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[0.977956] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[0.978018] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.978093] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978165] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:11:1: F401 'turtle_brick_interfaces.msg.Tilt' imported but unused\n"}
[0.978221] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt\n'}
[0.978276] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.978331] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978386] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:12:42: W291 trailing whitespace\n'}
[0.978441] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[0.978497] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.978553] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978608] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:14:1: F401 'visualization_msgs.msg.MarkerArray' imported but unused\n"}
[0.978664] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import MarkerArray\n'}
[0.978720] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.978776] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.978831] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:18:1: E265 block comment should start with '# '\n"}
[0.978893] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[0.978949] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.979004] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979060] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:21:1: E302 expected 2 blank lines, found 1\n'}
[0.979115] (turtle_brick) StdoutLine: {'line': b'class BState(Enum):\n'}
[0.979171] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.979226] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979282] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:29:1: E302 expected 2 blank lines, found 1\n'}
[0.979338] (turtle_brick) StdoutLine: {'line': b'class Arena(Node):\n'}
[0.979394] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.979448] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.979503] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:39:53: W291 trailing whitespace\n'}
[0.979558] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.979613] (turtle_brick) StdoutLine: {'line': b'    Creates the arena and places brick when called in command line.\n'}
[0.979668] (turtle_brick) StdoutLine: {'line': b'    Will drop the robot when called in command line.\n'}
[0.979724] (turtle_brick) StdoutLine: {'line': b'        -if robot is underneath the brick, the brick will land on the robot\n'}
[0.979780] (turtle_brick) StdoutLine: {'line': b'        -if nothing is under brick, brick will land on ground\n'}
[0.979835] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[0.979909] (turtle_brick) StdoutLine: {'line': b'        -robot_sub: continuous robot position\n'}
[0.979969] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[0.980039] (turtle_brick) StdoutLine: {'line': b'        -marker_pub: publishes walls and brick\n'}
[0.980095] (turtle_brick) StdoutLine: {'line': b'        -drop_pub: sends placement, drop coordinates  \n'}
[0.980296] (turtle_brick) StdoutLine: {'line': b'        -platform_pub: sends true if platform is under brick\n'}
[0.980384] (turtle_brick) StdoutLine: {'line': b'    SERVICES:\n'}
[0.980450] (turtle_brick) StdoutLine: {'line': b'        -Place: place brick at x, y, z location\n'}
[0.980524] (turtle_brick) StdoutLine: {'line': b'        -Drop: Empty drops brick\n'}
[0.980599] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[0.980664] (turtle_brick) StdoutLine: {'line': b'        -world_brick: connects brick to world\n'}
[0.980729] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[0.980794] (turtle_brick) StdoutLine: {'line': b'       \n'}
[0.980858] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.980921] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.980984] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:49:9: E265 block comment should start with '# '\n"}
[0.981048] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[0.981110] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.981174] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981239] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:50:33: W291 trailing whitespace\n'}
[0.981303] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[0.981367] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[0.981431] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981494] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:55:32: E231 missing whitespace after ','\n"}
[0.981558] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[0.981622] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[0.981685] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.981750] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:56:27: E231 missing whitespace after ','\n"}
[0.981813] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[0.981876] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.981939] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982003] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:63:9: E265 block comment should start with '# '\n"}
[0.982108] (turtle_brick) StdoutLine: {'line': b'        #setting state of brick\n'}
[0.982179] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.982243] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982306] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:70:9: E265 block comment should start with '# '\n"}
[0.982370] (turtle_brick) StdoutLine: {'line': b'        #set up subscribers\n'}
[0.982432] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.982495] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982557] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:55: E231 missing whitespace after ','\n"}
[0.982618] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.982681] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.982743] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.982804] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:64: E231 missing whitespace after ','\n"}
[0.982866] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.982928] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.982989] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983050] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:71:84: E231 missing whitespace after ','\n"}
[0.983111] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[0.983173] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[0.983235] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983296] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:72:9: E265 block comment should start with '# '\n"}
[0.983357] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[0.983419] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.983480] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983542] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:55: E231 missing whitespace after ','\n"}
[0.983614] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.983680] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.983739] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.983796] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:73:65: E231 missing whitespace after ','\n"}
[0.983855] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[0.983913] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.983972] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984031] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:54: E231 missing whitespace after ','\n"}
[0.984089] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.984148] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.984206] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984264] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:74:62: E231 missing whitespace after ','\n"}
[0.984322] (turtle_brick) StdoutLine: {'line': b"        self.drop_pub = self.create_publisher(Vector3,'/drop',10)\n"}
[0.984391] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[0.984449] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984507] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:55: E231 missing whitespace after ','\n"}
[0.984566] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.984630] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[0.984688] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984746] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:75:64: E231 missing whitespace after ','\n"}
[0.984804] (turtle_brick) StdoutLine: {'line': b"        self.platform_pub = self.create_publisher(Bool,'/catch',10)\n"}
[0.984862] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[0.984921] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.984979] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:78:1: W293 blank line contains whitespace\n'}
[0.985037] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.985096] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.985153] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985211] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:81:1: W293 blank line contains whitespace\n'}
[0.985269] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.985328] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.985387] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985446] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:82:9: E265 block comment should start with '# '\n"}
[0.985505] (turtle_brick) StdoutLine: {'line': b'        #initialize services\n'}
[0.985579] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.985641] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985703] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:47: E231 missing whitespace after ','\n"}
[0.985766] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.985828] (turtle_brick) StdoutLine: {'line': b'                                              ^\n'}
[0.985890] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.985952] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:83:56: E231 missing whitespace after ','\n"}
[0.986015] (turtle_brick) StdoutLine: {'line': b'        self.place = self.create_service(Place,"/place",self.place_callback)\n'}
[0.986103] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[0.986169] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986231] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:46: E231 missing whitespace after ','\n"}
[0.986293] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.986356] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.986417] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986480] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:84:54: E231 missing whitespace after ','\n"}
[0.986555] (turtle_brick) StdoutLine: {'line': b'        self.drop = self.create_service(Empty,"/drop",self.drop_callback)\n'}
[0.986615] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[0.986675] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986735] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:85:1: W293 blank line contains whitespace\n'}
[0.986796] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.986856] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.986916] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.986975] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:86:9: E265 block comment should start with '# '\n"}
[0.987036] (turtle_brick) StdoutLine: {'line': b'        #creating brick marker\n'}
[0.987097] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.987156] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987216] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:103:9: E265 block comment should start with '# '\n"}
[0.987276] (turtle_brick) StdoutLine: {'line': b'        #creating wall markers\n'}
[0.987337] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.987396] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987456] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:189:9: E303 too many blank lines (2)\n'}
[0.987527] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.987599] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.987658] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987717] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:189:9: E265 block comment should start with '# '\n"}
[0.987777] (turtle_brick) StdoutLine: {'line': b'        #initializing brick variables\n'}
[0.987837] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.987896] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.987956] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:192:26: W291 trailing whitespace\n'}
[0.988015] (turtle_brick) StdoutLine: {'line': b'        self.brickz = 0.0 \n'}
[0.988075] (turtle_brick) StdoutLine: {'line': b'                         ^\n'}
[0.988193] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988331] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:205:42: E231 missing whitespace after ','\n"}
[0.988412] (turtle_brick) StdoutLine: {'line': b'        self.wall = self.create_timer(0.5,self.wall_callback)\n'}
[0.988490] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[0.988566] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988629] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:207:37: E231 missing whitespace after ','\n"}
[0.988692] (turtle_brick) StdoutLine: {'line': b'    def place_callback(self, request,response):\n'}
[0.988755] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[0.988819] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.988883] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:35: E231 missing whitespace after ','\n"}
[0.988945] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.989008] (turtle_brick) StdoutLine: {'line': b'                                  ^\n'}
[0.989071] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989132] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:208:45: E231 missing whitespace after ','\n"}
[0.989206] (turtle_brick) StdoutLine: {'line': b'        self.place_brick(request.x,request.y,request.z)\n'}
[0.989269] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[0.989331] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989392] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:211:1: W293 blank line contains whitespace\n'}
[0.989456] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.989531] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.989597] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.989664] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:212:28: E231 missing whitespace after ','\n"}
[0.989731] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[0.989845] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[0.990018] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990167] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:219:24: E225 missing whitespace around operator\n'}
[0.990315] (turtle_brick) StdoutLine: {'line': b'            if tilt_ang>=0.5:\n'}
[0.990460] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[0.990605] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.990749] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:48: E231 missing whitespace after ','\n"}
[0.990894] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.991040] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[0.991184] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991328] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:221:65: E231 missing whitespace after ','\n"}
[0.991472] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.brickxplace,self.brickyplace,self.brickzplace)\n'}
[0.991621] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[0.991762] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.991889] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:46: E231 missing whitespace after ','\n"}
[0.992017] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.992145] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[0.992272] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992399] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:223:61: E231 missing whitespace after ','\n"}
[0.992526] (turtle_brick) StdoutLine: {'line': b'                self.set_brick(self.platformx,self.platformy,self.platformz)\n'}
[0.992654] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[0.992781] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.992909] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:225:36: E231 missing whitespace after ','\n"}
[0.993036] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self, request,response):\n'}
[0.993163] (turtle_brick) StdoutLine: {'line': b'                                   ^\n'}
[0.993319] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993449] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:226:13: E225 missing whitespace around operator\n'}
[0.993581] (turtle_brick) StdoutLine: {'line': b'        drop=Vector3()\n'}
[0.993713] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[0.993844] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.993974] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:236:9: E265 block comment should start with '# '\n"}
[0.994114] (turtle_brick) StdoutLine: {'line': b'        #publishing wall markers\n'}
[0.994248] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[0.994380] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.994511] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:253:58: E225 missing whitespace around operator\n'}
[0.994643] (turtle_brick) StdoutLine: {'line': b'        self.brick_marker.pose.position.z = self.brickz +0.1\n'}
[0.994774] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[0.994906] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995037] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:256:1: W293 blank line contains whitespace\n'}
[0.995169] (turtle_brick) StdoutLine: {'line': b'        \n'}
[0.995300] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.995431] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.995579] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:257:1: W293 blank line contains whitespace\n'}
[0.995718] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.995856] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.995995] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996133] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:258:5: E303 too many blank lines (2)\n'}
[0.996339] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.996480] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[0.996619] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.996758] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:23: E231 missing whitespace after ','\n"}
[0.996897] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.997037] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[0.997175] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997314] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:25: E231 missing whitespace after ','\n"}
[0.997454] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.997593] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.997732] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.997871] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:258:27: E231 missing whitespace after ','\n"}
[0.998010] (turtle_brick) StdoutLine: {'line': b'    def set_brick(self,x,y,z):\n'}
[0.998171] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.998312] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.998449] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:263:1: W293 blank line contains whitespace\n'}
[0.998589] (turtle_brick) StdoutLine: {'line': b'    \n'}
[0.998727] (turtle_brick) StdoutLine: {'line': b'^\n'}
[0.998865] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999004] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:25: E231 missing whitespace after ','\n"}
[0.999143] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.999282] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[0.999421] (turtle_brick) StdoutLine: {'line': b'\n'}
[0.999559] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:270:27: E231 missing whitespace after ','\n"}
[0.999699] (turtle_brick) StdoutLine: {'line': b'        self.set_brick(x,y,z)\n'}
[0.999838] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[0.999977] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000116] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:272:30: W291 trailing whitespace\n'}
[1.000255] (turtle_brick) StdoutLine: {'line': b'    def timer_callback(self):    \n'}
[1.000395] (turtle_brick) StdoutLine: {'line': b'                             ^\n'}
[1.000550] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.000686] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:274:42: E225 missing whitespace around operator\n'}
[1.000881] (-) TimerEvent: {}
[1.001078] (turtle_brick) StdoutLine: {'line': b'            self.seconds = self.seconds +0.004\n'}
[1.001211] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.001320] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001429] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:65: E261 at least two spaces before inline comment\n'}
[1.001538] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.001659] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.001770] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.001891] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/arena.py:275:66: E262 inline comment should start with '# '\n"}
[1.001996] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.002117] (turtle_brick) StdoutLine: {'line': b'                                                                 ^\n'}
[1.002225] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002330] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:275:100: E501 line too long (100 > 99 characters)\n'}
[1.002435] (turtle_brick) StdoutLine: {'line': b'            self.brickz = self.brickz-0.5*self.g*self.seconds**2 #has to grab gravity this from yaml\n'}
[1.002540] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.002645] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.002750] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:292:9: E225 missing whitespace around operator\n'}
[1.002855] (turtle_brick) StdoutLine: {'line': b'    node= Arena()\n'}
[1.002960] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.003066] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003172] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:294:19: W291 trailing whitespace\n'}
[1.003277] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.003383] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.003489] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003594] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:295:1: W391 blank line at end of file\n'}
[1.003700] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.003805] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.003917] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004021] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.Double' imported but unused\n"}
[1.004127] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[1.004319] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.004443] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004552] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:2:1: F401 'tokenize.String' imported but unused\n"}
[1.004661] (turtle_brick) StdoutLine: {'line': b'from tokenize import Double, String\n'}
[1.004773] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.004870] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.004967] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:9:34: W291 trailing whitespace\n'}
[1.005064] (turtle_brick) StdoutLine: {'line': b'from nav_msgs.msg import Odometry \n'}
[1.005161] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.005257] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005353] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:10:1: F401 'geometry_msgs.msg.Vector3' imported but unused\n"}
[1.005452] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import Twist, Vector3, TransformStamped, PoseStamped, Pose\n'}
[1.005550] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.005646] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.005743] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:11:1: F401 'visualization_msgs.msg.Marker' imported but unused\n"}
[1.005840] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.005937] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.006033] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006144] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:11:42: W291 trailing whitespace\n'}
[1.006220] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.006278] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.006337] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006394] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:12:45: W291 trailing whitespace\n'}
[1.006452] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.msg import Tilt \n'}
[1.006511] (turtle_brick) StdoutLine: {'line': b'                                            ^\n'}
[1.006569] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006626] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:13:12: W291 trailing whitespace\n'}
[1.006684] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.006741] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.006798] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.006855] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:14:1: E265 block comment should start with '# '\n"}
[1.006913] (turtle_brick) StdoutLine: {'line': b'#from .quaternion import angle_axis_to_quaternion\n'}
[1.006970] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.007027] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007084] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:16:1: E302 expected 2 blank lines, found 1\n'}
[1.007141] (turtle_brick) StdoutLine: {'line': b'class Turtle_robot(Node):\n'}
[1.007198] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.007255] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.007312] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:18:75: W291 trailing whitespace\n'}
[1.007369] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.007440] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.007509] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.007562] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.007614] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.007671] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.007723] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.007776] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.007829] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.007882] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.007934] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.007987] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.008039] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.008092] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.008144] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.008197] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.008250] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.008302] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.008356] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.008409] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.008462] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.008514] (turtle_brick) StdoutLine: {'line': b'                                                                  ^\n'}
[1.008588] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.008864] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:19:68: W291 trailing whitespace\n'}
[1.009006] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.009316] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.009876] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.010191] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.010525] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.010702] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.010840] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.010948] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.011054] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.011174] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.011277] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.011381] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.011485] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.011589] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.011692] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.011796] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.011899] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.012003] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.012106] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.012210] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.012361] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.012470] (turtle_brick) StdoutLine: {'line': b'                                                           ^\n'}
[1.012584] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.012690] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:21:46: W291 trailing whitespace\n'}
[1.012797] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.012903] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.013010] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.013116] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.013221] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.013337] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.013438] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.013538] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.013638] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.013739] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.013839] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.013940] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.014040] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.014172] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.014274] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.014375] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.014475] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.014575] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.014676] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.014776] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.014876] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.014976] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.015077] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.015177] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:22:45: W291 trailing whitespace\n'}
[1.015277] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.015377] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.015477] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.015593] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.015699] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.015804] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.015910] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.016015] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.016121] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.016227] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.016332] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.016438] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.016543] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.016648] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.016753] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.016859] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.016972] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.017086] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.017192] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.017298] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.017404] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.017509] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.017614] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.017719] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:24:47: W291 trailing whitespace\n'}
[1.017825] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.017930] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.018036] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.018126] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.018196] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.018251] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.018305] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.018359] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.018412] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.018467] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.018520] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.018574] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.018628] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.018681] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.018734] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.018788] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.018842] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.018895] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.018949] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.019003] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.019056] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.019110] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.019164] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.019217] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:28:46: W291 trailing whitespace\n'}
[1.019271] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.019325] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.019378] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.019432] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.019486] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.019539] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.019592] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.019645] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.019698] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.019751] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.019809] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.019863] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.019917] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.019970] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.020023] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.020077] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.020131] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.020184] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.020281] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.020384] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.020483] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.020562] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.020624] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.020698] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:30:48: W291 trailing whitespace\n'}
[1.020758] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.020818] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.020878] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.020939] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.020998] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.021058] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.021118] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.021177] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.021237] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.021297] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.021357] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.021416] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.021476] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.021536] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.021595] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.021655] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.021715] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.021773] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.021832] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.021891] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.021951] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.022010] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.022095] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.022174] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:31:83: W291 trailing whitespace\n'}
[1.022234] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.022294] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.022353] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.022413] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.022479] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.022541] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.022601] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.022662] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.022726] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.022788] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.022848] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.022911] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.022971] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.023032] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.023103] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.023165] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.023225] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.023286] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.023347] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.023407] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.023467] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.023526] (turtle_brick) StdoutLine: {'line': b'                                                                          ^\n'}
[1.023586] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.023646] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:34:56: W291 trailing whitespace\n'}
[1.023706] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.023765] (turtle_brick) StdoutLine: {'line': b'    Creates the turtle_robot and controls joint and translation movements. \n'}
[1.023825] (turtle_brick) StdoutLine: {'line': b'    Additionally, places it in the world and connects to turtlesim. \n'}
[1.023885] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.023944] (turtle_brick) StdoutLine: {'line': b'        -goal_sub: subscribes to goal_sub and \n'}
[1.024004] (turtle_brick) StdoutLine: {'line': b'            recieves the positions that will \n'}
[1.024063] (turtle_brick) StdoutLine: {'line': b'            calculate movement towards goal_pose\n'}
[1.024122] (turtle_brick) StdoutLine: {'line': b'        -tilt_sub: subscribes to tilt and will \n'}
[1.024182] (turtle_brick) StdoutLine: {'line': b'            recieve the angle that the robot platform will tilt to\n'}
[1.024242] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.024301] (turtle_brick) StdoutLine: {'line': b'        -joint_state: publishes joint angles of the turtle_robot\n'}
[1.024360] (turtle_brick) StdoutLine: {'line': b'        -odom_pub: sends positions and twists  \n'}
[1.024419] (turtle_brick) StdoutLine: {'line': b'        -vel_pub: sends twist to cmd_vel\n'}
[1.024478] (turtle_brick) StdoutLine: {'line': b'        -robot_pub: sends continuous robot pose \n'}
[1.024536] (turtle_brick) StdoutLine: {'line': b'            # also just relized I could have potentially taken from odom publisher \n'}
[1.024616] (turtle_brick) StdoutLine: {'line': b'            # instead of creating a whole new object and publisher, but too late now\n'}
[1.024690] (turtle_brick) StdoutLine: {'line': b'    TRANSFORMS:\n'}
[1.024749] (turtle_brick) StdoutLine: {'line': b'        -world_odom: connects odom frame to world frame \n'}
[1.024808] (turtle_brick) StdoutLine: {'line': b'        -odom_base_link: connects base_link frame to odom frame\n'}
[1.024867] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.024926] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.024990] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.025049] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025108] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:39:9: E265 block comment should start with '# '\n"}
[1.025167] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.025226] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.025285] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025344] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:40:33: W291 trailing whitespace\n'}
[1.025404] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.025462] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.025521] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025591] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:45:32: E231 missing whitespace after ','\n"}
[1.025648] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.025705] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.025762] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.025819] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:46:27: E231 missing whitespace after ','\n"}
[1.025876] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.025934] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.025991] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026047] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:65: E231 missing whitespace after ','\n"}
[1.026177] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.026238] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.026296] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026353] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:56:81: E231 missing whitespace after ','\n"}
[1.026411] (turtle_brick) StdoutLine: {'line': b"        self.joint_publisher_ = self.create_publisher(JointState,'/joint_states',qos_profile)\n"}
[1.026469] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.026526] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026583] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:55: E231 missing whitespace after ','\n"}
[1.026641] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.026699] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.026756] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.026814] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:57:63: E231 missing whitespace after ','\n"}
[1.026872] (turtle_brick) StdoutLine: {'line': b"        self.odom_pub = self.create_publisher(Odometry,'/odom',10)\n"}
[1.026947] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.027011] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027070] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:51: E231 missing whitespace after ','\n"}
[1.027128] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.027186] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.027244] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027301] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:58:62: E231 missing whitespace after ','\n"}
[1.027386] (turtle_brick) StdoutLine: {'line': b"        self.vel_pub = self.create_publisher(Twist,'/cmd_vel',10)\n"}
[1.027455] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.027525] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027594] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:52: E231 missing whitespace after ','\n"}
[1.027670] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.027739] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.027809] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.027879] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:59:61: E231 missing whitespace after ','\n"}
[1.027948] (turtle_brick) StdoutLine: {'line': b"        self.robot_pub = self.create_publisher(Pose,'/robot',10)\n"}
[1.028018] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.028088] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028159] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:61: E231 missing whitespace after ','\n"}
[1.028284] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.028401] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.028523] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028632] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:74: E231 missing whitespace after ','\n"}
[1.028749] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.028828] (turtle_brick) StdoutLine: {'line': b'                                                                         ^\n'}
[1.028919] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.028988] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:61:93: E231 missing whitespace after ','\n"}
[1.029057] (turtle_brick) StdoutLine: {'line': b"        self.goal_sub = self.create_subscription(PoseStamped,'/goal_pose',self.pose_callback,10)\n"}
[1.029123] (turtle_brick) StdoutLine: {'line': b'                                                                                            ^\n'}
[1.029251] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029366] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:54: E231 missing whitespace after ','\n"}
[1.029468] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.029601] (turtle_brick) StdoutLine: {'line': b'                                                     ^\n'}
[1.029730] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.029857] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:62: E231 missing whitespace after ','\n"}
[1.029984] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.030124] (turtle_brick) StdoutLine: {'line': b'                                                             ^\n'}
[1.030253] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030379] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:62:81: E231 missing whitespace after ','\n"}
[1.030506] (turtle_brick) StdoutLine: {'line': b"        self.tilt_sub = self.create_subscription(Tilt,'/tilt',self.tilt_callback,10)\n"}
[1.030638] (turtle_brick) StdoutLine: {'line': b'                                                                                ^\n'}
[1.030767] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.030880] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:63:53: W291 trailing whitespace\n'}
[1.030994] (turtle_brick) StdoutLine: {'line': b'        # Static broadcasters publish on /tf_static.        \n'}
[1.031107] (turtle_brick) StdoutLine: {'line': b'                                                    ^\n'}
[1.031220] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031366] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:67:1: W293 blank line contains whitespace\n'}
[1.031479] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.031593] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.031715] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.031860] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:76:9: E265 block comment should start with '# '\n"}
[1.031973] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.032085] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.032198] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032310] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:76:19: W291 trailing whitespace\n'}
[1.032423] (turtle_brick) StdoutLine: {'line': b'        #positions \n'}
[1.032554] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.032704] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.032913] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:77:28: W291 trailing whitespace\n'}
[1.033037] (turtle_brick) StdoutLine: {'line': b'        self.currentx = 0.0 \n'}
[1.033198] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.033305] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033412] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:98:9: E265 block comment should start with '# '\n"}
[1.033520] (turtle_brick) StdoutLine: {'line': b'        #joint state object\n'}
[1.033628] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.033735] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.033842] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:104:23: E225 missing whitespace around operator\n'}
[1.033965] (turtle_brick) StdoutLine: {'line': b'        self.tilt_angf= 0.0\n'}
[1.034096] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.034204] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034305] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:111:9: E265 block comment should start with '# '\n"}
[1.034406] (turtle_brick) StdoutLine: {'line': b'        #cmd_vel object\n'}
[1.034506] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.034606] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.034706] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:114:9: E265 block comment should start with '# '\n"}
[1.034807] (turtle_brick) StdoutLine: {'line': b'        #create pose object\n'}
[1.034907] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.035007] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035107] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:121:1: W293 blank line contains whitespace\n'}
[1.035228] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.035334] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.035455] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.035612] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:122:27: E231 missing whitespace after ','\n"}
[1.035708] (turtle_brick) StdoutLine: {'line': b'    def pose_callback(self,msg):\n'}
[1.035804] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.035898] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036020] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:76: E231 missing whitespace after ','\n"}
[1.036111] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.036213] (turtle_brick) StdoutLine: {'line': b'                                                                           ^\n'}
[1.036423] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036553] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:96: E231 missing whitespace after ','\n"}
[1.036658] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.036763] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.036868] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.036972] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:123:100: E501 line too long (121 > 99 characters)\n'}
[1.037083] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.037187] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.037303] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037404] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:123:120: E202 whitespace before ')'\n"}
[1.037505] (turtle_brick) StdoutLine: {'line': b"        self.get_logger().info('goal pose: %f %f %f' % (msg.pose.position.x,msg.pose.position.y,msg.pose.orientation.z) )\n"}
[1.037607] (turtle_brick) StdoutLine: {'line': b'                                                                                                                       ^\n'}
[1.037708] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.037809] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:15: E225 missing whitespace around operator\n'}
[1.037910] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.038012] (turtle_brick) StdoutLine: {'line': b'              ^\n'}
[1.038151] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038267] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:24: E225 missing whitespace around operator\n'}
[1.038368] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.038470] (turtle_brick) StdoutLine: {'line': b'                       ^\n'}
[1.038571] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.038672] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:34: E225 missing whitespace around operator\n'}
[1.038774] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.038875] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.038976] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039076] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:132:43: E225 missing whitespace around operator\n'}
[1.039177] (turtle_brick) StdoutLine: {'line': b'        if (dy<0 and dx>0) or (dy>0 and dx>0):\n'}
[1.039278] (turtle_brick) StdoutLine: {'line': b'                                          ^\n'}
[1.039388] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039489] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:142:27: E231 missing whitespace after ','\n"}
[1.039590] (turtle_brick) StdoutLine: {'line': b'    def tilt_callback(self,msg):\n'}
[1.039691] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.039792] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.039913] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:148:1: W293 blank line contains whitespace\n'}
[1.040072] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.040191] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.040313] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040413] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:149:9: E265 block comment should start with '# '\n"}
[1.040515] (turtle_brick) StdoutLine: {'line': b'        #update odom\n'}
[1.040631] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.040738] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.040844] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:156:1: W293 blank line contains whitespace\n'}
[1.040950] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.041056] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.041162] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041280] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:157:9: E303 too many blank lines (2)\n'}
[1.041382] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.041483] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.041583] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.041683] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:157:9: E265 block comment should start with '# '\n"}
[1.041813] (turtle_brick) StdoutLine: {'line': b'        #updating joint states\n'}
[1.041935] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.042049] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042195] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:46: E231 missing whitespace after ','\n"}
[1.042296] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.042397] (turtle_brick) StdoutLine: {'line': b'                                             ^\n'}
[1.042497] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.042598] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:159:58: E231 missing whitespace after ','\n"}
[1.042698] (turtle_brick) StdoutLine: {'line': b"        self.joint_state.name = ['stem_wheel','base_stem','link_platform1']\n"}
[1.042799] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.042899] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043000] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:161:1: W293 blank line contains whitespace\n'}
[1.043101] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.043202] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.043303] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043403] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:162:9: E265 block comment should start with '# '\n"}
[1.043504] (turtle_brick) StdoutLine: {'line': b'        #update twist\n'}
[1.043605] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.043707] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.043807] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:165:1: W293 blank line contains whitespace\n'}
[1.043908] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.044009] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.044109] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044209] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:166:9: E265 block comment should start with '# '\n"}
[1.044395] (turtle_brick) StdoutLine: {'line': b'        #update robot pose\n'}
[1.044570] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.044671] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.044770] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:167:34: E225 missing whitespace around operator\n'}
[1.044856] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.x=self.currentx\n'}
[1.044941] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.045026] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045110] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:168:34: E225 missing whitespace around operator\n'}
[1.045201] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.y=self.currenty\n'}
[1.045286] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.045371] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045455] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:169:34: E225 missing whitespace around operator\n'}
[1.045540] (turtle_brick) StdoutLine: {'line': b'        self.robo_pose.position.z=self.height\n'}
[1.045624] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.045708] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.045793] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:172:9: E265 block comment should start with '# '\n"}
[1.045877] (turtle_brick) StdoutLine: {'line': b'        #update transforms\n'}
[1.045962] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.046047] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046234] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:173:68: W291 trailing whitespace\n'}
[1.046321] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.x = self.currentx \n'}
[1.046407] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.046498] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046595] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:174:68: W291 trailing whitespace\n'}
[1.046681] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.transform.translation.y = self.currenty \n'}
[1.046765] (turtle_brick) StdoutLine: {'line': b'                                                                   ^\n'}
[1.046850] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.046934] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:175:48: W291 trailing whitespace\n'}
[1.047019] (turtle_brick) StdoutLine: {'line': b'        self.odom_base_link.header.stamp = time \n'}
[1.047103] (turtle_brick) StdoutLine: {'line': b'                                               ^\n'}
[1.047188] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047272] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:177:9: E265 block comment should start with '# '\n"}
[1.047357] (turtle_brick) StdoutLine: {'line': b'        #broadcasting and publishing\n'}
[1.047442] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.047526] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047611] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:178:56: W291 trailing whitespace\n'}
[1.047695] (turtle_brick) StdoutLine: {'line': b'        self.joint_publisher_.publish(self.joint_state) \n'}
[1.047780] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.047864] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.047948] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:183:9: E265 block comment should start with '# '\n"}
[1.048033] (turtle_brick) StdoutLine: {'line': b'        #moving the robot to goal pose\n'}
[1.048118] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.048202] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048286] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:189:41: E225 missing whitespace around operator\n'}
[1.048371] (turtle_brick) StdoutLine: {'line': b'        if abs(self.currenty-self.goaly)<= 0.03:\n'}
[1.048513] (turtle_brick) StdoutLine: {'line': b'                                        ^\n'}
[1.048654] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.048804] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:192:1: W293 blank line contains whitespace\n'}
[1.048875] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.048976] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.049055] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049136] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:193:9: E265 block comment should start with '# '\n"}
[1.049192] (turtle_brick) StdoutLine: {'line': b'        #move the wheel and stem to face direction and roll\n'}
[1.049351] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.049416] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049495] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:194:38: E225 missing whitespace around operator\n'}
[1.049551] (turtle_brick) StdoutLine: {'line': b'        if self.vx != 0.0 and self.vy!=0.0:\n'}
[1.049636] (turtle_brick) StdoutLine: {'line': b'                                     ^\n'}
[1.049730] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.049812] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:196:49: E225 missing whitespace around operator\n'}
[1.049890] (turtle_brick) StdoutLine: {'line': b'        if abs(self.stem_ang-self.direction_ang)>= 0.2:\n'}
[1.049970] (turtle_brick) StdoutLine: {'line': b'                                                ^\n'}
[1.050037] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050118] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:197:51: E225 missing whitespace around operator\n'}
[1.050220] (turtle_brick) StdoutLine: {'line': b'            if self.stem_ang-self.direction_ang >=0:\n'}
[1.050285] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.050392] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050457] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:199:80: E202 whitespace before ')'\n"}
[1.050525] (turtle_brick) StdoutLine: {'line': b'                self.get_logger().info(\'stem angle: "%s"\' % (self.direction_ang ))\n'}
[1.050605] (turtle_brick) StdoutLine: {'line': b'                                                                               ^\n'}
[1.050685] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050744] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:203:9: E265 block comment should start with '# '\n"}
[1.050804] (turtle_brick) StdoutLine: {'line': b'        #tilt if tilt is called\n'}
[1.050864] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.050923] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.050982] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:52: E225 missing whitespace around operator\n'}
[1.051043] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.051103] (turtle_brick) StdoutLine: {'line': b'                                                   ^\n'}
[1.051163] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051222] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:205:57: W291 trailing whitespace\n'}
[1.051281] (turtle_brick) StdoutLine: {'line': b'            if abs(self.tilt_ang-self.tilt_angf) >=0.01:       \n'}
[1.051341] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.051400] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051460] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:207:34: E225 missing whitespace around operator\n'}
[1.051520] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang-=0.005\n'}
[1.051579] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.051637] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051696] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:209:34: E225 missing whitespace around operator\n'}
[1.051755] (turtle_brick) StdoutLine: {'line': b'                    self.tilt_ang+=0.005\n'}
[1.051818] (turtle_brick) StdoutLine: {'line': b'                                 ^\n'}
[1.051878] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.051938] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:214:1: W293 blank line contains whitespace\n'}
[1.051997] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.052056] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.052115] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052173] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:215:1: W293 blank line contains whitespace\n'}
[1.052232] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.052304] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.052384] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052446] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:217:1: E303 too many blank lines (3)\n'}
[1.052508] (turtle_brick) StdoutLine: {'line': b'def main(args=None):\n'}
[1.052568] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.052629] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052688] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:219:16: E225 missing whitespace around operator\n'}
[1.052748] (turtle_brick) StdoutLine: {'line': b'    turtleRobot= Turtle_robot()\n'}
[1.052808] (turtle_brick) StdoutLine: {'line': b'               ^\n'}
[1.052867] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.052926] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:221:19: W291 trailing whitespace\n'}
[1.052986] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown \n'}
[1.053045] (turtle_brick) StdoutLine: {'line': b'                  ^\n'}
[1.053104] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053162] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:223:1: W391 blank line at end of file\n'}
[1.053222] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053286] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.053345] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053404] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:2:1: F401 'cmath.sqrt' imported but unused\n"}
[1.053464] (turtle_brick) StdoutLine: {'line': b'from cmath import sqrt\n'}
[1.053523] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.053581] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053639] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:6:1: F401 'tf2_ros.static_transform_broadcaster.StaticTransformBroadcaster' imported but unused\n"}
[1.053699] (turtle_brick) StdoutLine: {'line': b'from tf2_ros.static_transform_broadcaster import StaticTransformBroadcaster\n'}
[1.053758] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.053816] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.053875] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:7:1: F401 'tf2_ros.TransformBroadcaster' imported but unused\n"}
[1.053935] (turtle_brick) StdoutLine: {'line': b'from tf2_ros import TransformBroadcaster\n'}
[1.053995] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.054053] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054125] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:8:1: F401 'geometry_msgs.msg.TransformStamped' imported but unused\n"}
[1.054185] (turtle_brick) StdoutLine: {'line': b'from geometry_msgs.msg import TransformStamped, Pose, PoseStamped, Vector3\n'}
[1.054244] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.054304] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054363] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Place' imported but unused\n"}
[1.054422] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.054482] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.054540] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054600] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:9:1: F401 'turtle_brick_interfaces.srv.Drop' imported but unused\n"}
[1.054660] (turtle_brick) StdoutLine: {'line': b'from turtle_brick_interfaces.srv import Place, Drop\n'}
[1.054720] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.054780] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.054839] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:11:42: W291 trailing whitespace\n'}
[1.054898] (turtle_brick) StdoutLine: {'line': b'from visualization_msgs.msg import Marker \n'}
[1.054957] (turtle_brick) StdoutLine: {'line': b'                                         ^\n'}
[1.055017] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055076] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:12:12: W291 trailing whitespace\n'}
[1.055135] (turtle_brick) StdoutLine: {'line': b'import math \n'}
[1.055194] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.055253] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055311] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:14:1: F401 '.quaternion.angle_axis_to_quaternion' imported but unused\n"}
[1.055371] (turtle_brick) StdoutLine: {'line': b'from .quaternion import angle_axis_to_quaternion\n'}
[1.055429] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.055487] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055546] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:17:1: E302 expected 2 blank lines, found 1\n'}
[1.055605] (turtle_brick) StdoutLine: {'line': b'class State(Enum):\n'}
[1.055664] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.055722] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.055780] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:25:1: E302 expected 2 blank lines, found 1\n'}
[1.055839] (turtle_brick) StdoutLine: {'line': b'class Catcher(Node):\n'}
[1.055898] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.055956] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.056015] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:28:69: W291 trailing whitespace\n'}
[1.056074] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.056139] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.056198] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.056258] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.056317] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.056377] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.056436] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.056496] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.056556] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.056616] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.056683] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.056743] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.056803] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.056862] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.056921] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.056980] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.057040] (turtle_brick) StdoutLine: {'line': b'                                                            ^\n'}
[1.057099] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.057158] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:34:82: W291 trailing whitespace\n'}
[1.057217] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.057277] (turtle_brick) StdoutLine: {'line': b'    calculates if robot can catch placed brick in time or not\n'}
[1.057336] (turtle_brick) StdoutLine: {'line': b'    -If it can catch, robot travels to drop location, catches brick, \n'}
[1.057394] (turtle_brick) StdoutLine: {'line': b'        travels back to origin, and tilts brick off\n'}
[1.057464] (turtle_brick) StdoutLine: {'line': b'    -If the robot can\'t reach brick in time, the screen publishes "UNREACHABLE",\n'}
[1.057528] (turtle_brick) StdoutLine: {'line': b'        and lets brick fall to ground\n'}
[1.057588] (turtle_brick) StdoutLine: {'line': b'    SUBSCRIPTIONS:\n'}
[1.057647] (turtle_brick) StdoutLine: {'line': b'        -robot_sub:continuous robot position\n'}
[1.057706] (turtle_brick) StdoutLine: {'line': b'        -drop_sub: gets placed brick position and sends if drop service is called \n'}
[1.057766] (turtle_brick) StdoutLine: {'line': b'        -catch_sub: gets True the brick is caught on the platform\n'}
[1.057825] (turtle_brick) StdoutLine: {'line': b'    PUBLISHERS:\n'}
[1.057884] (turtle_brick) StdoutLine: {'line': b'        -goal_pose: send pose to turtle robot\n'}
[1.057943] (turtle_brick) StdoutLine: {'line': b'        -tilt: send tilt angle to platform on turtle robot\n'}
[1.058002] (turtle_brick) StdoutLine: {'line': b'        -text marker: publishes "UNREACHABLE" if robot can\'t reach in time\n'}
[1.058072] (turtle_brick) StdoutLine: {'line': b'    """\n'}
[1.058138] (turtle_brick) StdoutLine: {'line': b'       \n'}
[1.058198] (turtle_brick) StdoutLine: {'line': b'                                                             \n'}
[1.058255] (turtle_brick) StdoutLine: {'line': b'           ^\n'}
[1.058314] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058373] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:44:9: E265 block comment should start with '# '\n"}
[1.058433] (turtle_brick) StdoutLine: {'line': b'        #params\n'}
[1.058492] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.058551] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058610] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:45:33: W291 trailing whitespace\n'}
[1.058669] (turtle_brick) StdoutLine: {'line': b'        self.declare_parameters( \n'}
[1.058734] (turtle_brick) StdoutLine: {'line': b'                                ^\n'}
[1.058793] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.058852] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:50:32: E231 missing whitespace after ','\n"}
[1.058911] (turtle_brick) StdoutLine: {'line': b"                ('max_velocity',3.0),\n"}
[1.058970] (turtle_brick) StdoutLine: {'line': b'                               ^\n'}
[1.059029] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059089] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:51:27: E231 missing whitespace after ','\n"}
[1.059148] (turtle_brick) StdoutLine: {'line': b"                ('gravity',9.8)\n"}
[1.059207] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.059266] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059324] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:58:9: E265 block comment should start with '# '\n"}
[1.059384] (turtle_brick) StdoutLine: {'line': b'        #variables\n'}
[1.059443] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.059501] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059559] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:61:9: E265 block comment should start with '# '\n"}
[1.059617] (turtle_brick) StdoutLine: {'line': b'        #state\n'}
[1.059675] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.059734] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.059793] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:63:9: E265 block comment should start with '# '\n"}
[1.059852] (turtle_brick) StdoutLine: {'line': b'        #subscritions\n'}
[1.059911] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.059971] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060030] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:55: E231 missing whitespace after ','\n"}
[1.060090] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.060150] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.060210] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060268] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:64: E231 missing whitespace after ','\n"}
[1.060369] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.060437] (turtle_brick) StdoutLine: {'line': b'                                                               ^\n'}
[1.060501] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060564] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:64:84: E231 missing whitespace after ','\n"}
[1.060639] (turtle_brick) StdoutLine: {'line': b"        self.robot_sub = self.create_subscription(Pose,'/robot',self.robot_callback,10)\n"}
[1.060710] (turtle_brick) StdoutLine: {'line': b'                                                                                   ^\n'}
[1.060767] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.060823] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:57: E231 missing whitespace after ','\n"}
[1.060879] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.060936] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.060992] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061047] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:65:85: E231 missing whitespace after ','\n"}
[1.061104] (turtle_brick) StdoutLine: {'line': b"        self.drop_sub = self.create_subscription(Vector3,'/drop', self.drop_callback,10)\n"}
[1.061161] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.061218] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061274] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:55: E231 missing whitespace after ','\n"}
[1.061336] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.061393] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.061449] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061505] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:66:85: E231 missing whitespace after ','\n"}
[1.061561] (turtle_brick) StdoutLine: {'line': b"        self.catch_sub = self.create_subscription(Bool,'/catch', self.catch_callback,10)\n"}
[1.061618] (turtle_brick) StdoutLine: {'line': b'                                                                                    ^\n'}
[1.061674] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061730] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:67:9: E265 block comment should start with '# '\n"}
[1.061807] (turtle_brick) StdoutLine: {'line': b'        #publisher\n'}
[1.061868] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.061930] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.061991] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:68:22: E225 missing whitespace around operator\n'}
[1.062051] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.062135] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.062191] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062248] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:57: E231 missing whitespace after ','\n"}
[1.062304] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.062365] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.062421] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062476] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:68:70: E231 missing whitespace after ','\n"}
[1.062533] (turtle_brick) StdoutLine: {'line': b"        self.goal_pub= self.create_publisher(PoseStamped,'/goal_pose',10)\n"}
[1.062589] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.062644] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062699] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:69:22: E225 missing whitespace around operator\n'}
[1.062755] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.062811] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.062867] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.062922] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:50: E231 missing whitespace after ','\n"}
[1.062978] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.063033] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.063088] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063144] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:69:58: E231 missing whitespace after ','\n"}
[1.063212] (turtle_brick) StdoutLine: {'line': b"        self.tilt_pub= self.create_publisher(Tilt,'/tilt',10)\n"}
[1.063269] (turtle_brick) StdoutLine: {'line': b'                                                         ^\n'}
[1.063325] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063381] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:55: E231 missing whitespace after ','\n"}
[1.063437] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.063494] (turtle_brick) StdoutLine: {'line': b'                                                      ^\n'}
[1.063550] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063606] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:70:65: E231 missing whitespace after ','\n"}
[1.063662] (turtle_brick) StdoutLine: {'line': b"        self.marker_pub = self.create_publisher(Marker,'/marker',10)\n"}
[1.063724] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.063780] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.063836] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:71:9: E265 block comment should start with '# '\n"}
[1.063892] (turtle_brick) StdoutLine: {'line': b'        #pose and posestamp and tilt\n'}
[1.063949] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.064005] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064061] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:73:1: W293 blank line contains whitespace\n'}
[1.064117] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.064173] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.064229] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064284] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:74:9: E265 block comment should start with '# '\n"}
[1.064340] (turtle_brick) StdoutLine: {'line': b'        #the text marker\n'}
[1.064396] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.064451] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064507] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:97:1: W293 blank line contains whitespace\n'}
[1.064585] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.064646] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.064706] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.064777] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:98:5: E303 too many blank lines (3)\n'}
[1.064912] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.065021] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.065087] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065157] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:98:28: E231 missing whitespace after ','\n"}
[1.065215] (turtle_brick) StdoutLine: {'line': b'    def robot_callback(self,msg):\n'}
[1.065271] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.065328] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065384] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[1.065441] (turtle_brick) StdoutLine: {'line': b'        if self.state == State.TILT and abs(self.platformx) <= 0.05 and abs(self.platformy) <= 0.05:\n'}
[1.065498] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.065568] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065626] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:108:1: W293 blank line contains whitespace\n'}
[1.065683] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.065741] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.065797] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.065854] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:109:28: E231 missing whitespace after ','\n"}
[1.065912] (turtle_brick) StdoutLine: {'line': b'    def catch_callback(self,msg):\n'}
[1.065969] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.066026] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066119] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:119:5: E303 too many blank lines (2)\n'}
[1.066198] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.066256] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.066313] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066370] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:119:27: E231 missing whitespace after ','\n"}
[1.066428] (turtle_brick) StdoutLine: {'line': b'    def drop_callback(self,msg):\n'}
[1.066484] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.066541] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066598] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:124:40: E225 missing whitespace around operator\n'}
[1.066655] (turtle_brick) StdoutLine: {'line': b'        if self.brick_pose.position.z >self.height:\n'}
[1.066718] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.066775] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.066832] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:126:13: E265 block comment should start with '# '\n"}
[1.066889] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.066947] (turtle_brick) StdoutLine: {'line': b'            ^\n'}
[1.067004] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067060] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:126:100: E501 line too long (142 > 99 characters)\n'}
[1.067117] (turtle_brick) StdoutLine: {'line': b'            #calc time takes robot to move to x,y position from current position in max velocity speed (3.0 m/s) to 0.3 radius of the platform\n'}
[1.067175] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.067232] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067289] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:127:100: E501 line too long (155 > 99 characters)\n'}
[1.067351] (turtle_brick) StdoutLine: {'line': b'            timerobo = math.sqrt((abs(self.brick_pose.position.x-self.platformx)-0.3)**2+(abs(self.brick_pose.position.y-self.platformy)-0.3)**2)/self.vmax\n'}
[1.067410] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.067468] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067525] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:28: E225 missing whitespace around operator\n'}
[1.067583] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.067641] (turtle_brick) StdoutLine: {'line': b'                           ^\n'}
[1.067697] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067754] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:39: E261 at least two spaces before inline comment\n'}
[1.067812] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.067870] (turtle_brick) StdoutLine: {'line': b'                                      ^\n'}
[1.067927] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.067984] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:128:40: E262 inline comment should start with '# '\n"}
[1.068042] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.068100] (turtle_brick) StdoutLine: {'line': b'                                       ^\n'}
[1.068158] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068216] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:128:100: E501 line too long (106 > 99 characters)\n'}
[1.068274] (turtle_brick) StdoutLine: {'line': b'            if timerobo+1.0<=timefall: #1.0 is to give some time for message to be revieved and acted upon\n'}
[1.068399] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.068579] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068657] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:138:1: W293 blank line contains whitespace\n'}
[1.068752] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.068818] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.068911] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.068977] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:139:1: W293 blank line contains whitespace\n'}
[1.069045] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.069137] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069202] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069276] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:140:1: W293 blank line contains whitespace\n'}
[1.069356] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.069436] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069509] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069570] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:143:1: E303 too many blank lines (6)\n'}
[1.069631] (turtle_brick) StdoutLine: {'line': b'def catcher_entry(args=None):\n'}
[1.069692] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.069751] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069810] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:147:21: W292 no newline at end of file\n'}
[1.069870] (turtle_brick) StdoutLine: {'line': b'    rclpy.shutdown()                    ^\n'}
[1.069929] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.069988] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:1: W293 blank line contains whitespace\n'}
[1.070048] (turtle_brick) StdoutLine: {'line': b'        ^\n'}
[1.070119] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070186] (turtle_brick) StdoutLine: {'line': b'./test/math_test.py:4:9: W292 no newline at end of file\n'}
[1.070238] (turtle_brick) StdoutLine: {'line': b'                ^\n'}
[1.070290] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070342] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:1:1: F401 'ament_copyright.main.main' imported but unused\n"}
[1.070394] (turtle_brick) StdoutLine: {'line': b'from ament_copyright.main import main\n'}
[1.070446] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.070498] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070549] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:2:1: F401 'pytest' imported but unused\n"}
[1.070602] (turtle_brick) StdoutLine: {'line': b'import pytest\n'}
[1.070654] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.070705] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070757] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:3:1: F401 'launch' imported but unused\n"}
[1.070809] (turtle_brick) StdoutLine: {'line': b'import launch\n'}
[1.070861] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.070912] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.070964] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:4:1: F401 'launch_pytest' imported but unused\n"}
[1.071016] (turtle_brick) StdoutLine: {'line': b'import launch_pytest\n'}
[1.071069] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071121] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071172] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:5:1: F401 'sys' imported but unused\n"}
[1.071224] (turtle_brick) StdoutLine: {'line': b'import sys\n'}
[1.071276] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071328] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071379] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:6:1: F401 'launch_ros' imported but unused\n"}
[1.071432] (turtle_brick) StdoutLine: {'line': b'import launch_ros\n'}
[1.071484] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071535] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071586] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:7:1: F401 'pathlib.Path' imported but unused\n"}
[1.071639] (turtle_brick) StdoutLine: {'line': b'from pathlib import Path\n'}
[1.071690] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071742] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071793] (turtle_brick) StdoutLine: {'line': b"./test/brick.test.py:8:1: E265 block comment should start with '# '\n"}
[1.071844] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.071896] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.071947] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.071998] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:8:100: E501 line too long (128 > 99 characters)\n'}
[1.072050] (turtle_brick) StdoutLine: {'line': b'#found this example here https://github.com/ros2/launch/blob/humble/launch_pytest/test/launch_pytest/examples/check_node_msgs.py\n'}
[1.072107] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.072159] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072211] (turtle_brick) StdoutLine: {'line': b'./test/brick.test.py:21:9: W292 no newline at end of file\n'}
[1.072263] (turtle_brick) StdoutLine: {'line': b'#     ])        ^\n'}
[1.072315] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072367] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.072419] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.072472] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072523] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072596] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:1:63: E231 missing whitespace after ','\n"}
[1.072656] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path,get_package_share_directory\n'}
[1.072731] (turtle_brick) StdoutLine: {'line': b'                                                              ^\n'}
[1.072784] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.072836] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:5:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.072888] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.072940] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.072992] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073044] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:12:90: W291 trailing whitespace\n'}
[1.073096] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.073149] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.073202] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.073255] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.073306] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.073358] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.073410] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.073462] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.073514] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.073567] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.073618] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.073670] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.073721] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.073772] (turtle_brick) StdoutLine: {'line': b'                                                                                     ^\n'}
[1.073824] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.073875] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:15:14: W291 trailing whitespace\n'}
[1.073926] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.073977] (turtle_brick) StdoutLine: {'line': b'took bases from https://github.com/ros/urdf_tutorial/blob/ros2/launch/display.launch.py\n'}
[1.074029] (turtle_brick) StdoutLine: {'line': b'launches the rviz, robot publisher, and choosen joint state publisher nodes and takes the \n'}
[1.074116] (turtle_brick) StdoutLine: {'line': b'turtle_robot.urdf.xacro file from the urdf folder\n'}
[1.074188] (turtle_brick) StdoutLine: {'line': b'LAUNCH ARGUMENTS:\n'}
[1.074240] (turtle_brick) StdoutLine: {'line': b'    -use_jsp: \n'}
[1.074293] (turtle_brick) StdoutLine: {'line': b'        default: \'"gui"\'\n'}
[1.074346] (turtle_brick) StdoutLine: {'line': b'        arguments: [\'"gui"\', \'"jsp"\', \'"none"\']\n'}
[1.074404] (turtle_brick) StdoutLine: {'line': b'            \'"gui"\': launches with joint_state_publisher_gui_node\n'}
[1.074456] (turtle_brick) StdoutLine: {'line': b'            \'"jsp"\': launches with joint_state_publisher_node\n'}
[1.074508] (turtle_brick) StdoutLine: {'line': b'            \'"none"\': does not use either joint state publisher\n'}
[1.074560] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.074613] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.074665] (turtle_brick) StdoutLine: {'line': b'         ^\n'}
[1.074717] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074769] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:23:1: E302 expected 2 blank lines, found 1\n'}
[1.074822] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.074874] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.074927] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.074980] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:24:22: E225 missing whitespace around operator\n'}
[1.075033] (turtle_brick) StdoutLine: {'line': b"    turtle_brick_path= 'src/turtle_brick'\n"}
[1.075086] (turtle_brick) StdoutLine: {'line': b'                     ^\n'}
[1.075138] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075191] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:26:51: E225 missing whitespace around operator\n'}
[1.075243] (turtle_brick) StdoutLine: {'line': b"    default_rviz_config_path = turtle_brick_path +'/config/turtle_urdf.rviz'\n"}
[1.075296] (turtle_brick) StdoutLine: {'line': b'                                                  ^\n'}
[1.075348] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075400] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:27:1: W293 blank line contains whitespace\n'}
[1.075453] (turtle_brick) StdoutLine: {'line': b'    \n'}
[1.075505] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.075557] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075608] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:28:5: F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.075670] (turtle_brick) StdoutLine: {'line': b"    use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"}
[1.075723] (turtle_brick) StdoutLine: {'line': b'    ^\n'}
[1.075775] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.075827] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:30:100: E501 line too long (115 > 99 characters)\n'}
[1.075879] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.075933] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.075998] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076052] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:30:105: E231 missing whitespace after ','\n"}
[1.076105] (turtle_brick) StdoutLine: {'line': b'    use_jsp_arg = DeclareLaunchArgument(name=\'use_jsp\', default_value=\'"gui"\', choices=[\'"gui"\', \'"jsp"\',\'"none"\'],\n'}
[1.076159] (turtle_brick) StdoutLine: {'line': b'                                                                                                        ^\n'}
[1.076213] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076267] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:37: E128 continuation line under-indented for visual indent\n'}
[1.076321] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.076462] (turtle_brick) StdoutLine: {'line': b'                                    ^\n'}
[1.076565] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076635] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:31:92: E261 at least two spaces before inline comment\n'}
[1.076711] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.076775] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.076832] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.076889] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:31:92: E262 inline comment should start with '# '\n"}
[1.076950] (turtle_brick) StdoutLine: {'line': b"                                    description='Flag to enable joint_state_publisher_gui')#change\n"}
[1.077009] (turtle_brick) StdoutLine: {'line': b'                                                                                           ^\n'}
[1.077065] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077122] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:34:100: E501 line too long (100 > 99 characters)\n'}
[1.077191] (turtle_brick) StdoutLine: {'line': b"    rviz_arg = DeclareLaunchArgument(name='rvizconfig', default_value=str(default_rviz_config_path),\n"}
[1.077245] (turtle_brick) StdoutLine: {'line': b'                                                                                                   ^\n'}
[1.077298] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077351] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:89: E231 missing whitespace after ','\n"}
[1.077447] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.077578] (turtle_brick) StdoutLine: {'line': b'                                                                                        ^\n'}
[1.077706] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.077832] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:48:96: E231 missing whitespace after ','\n"}
[1.077959] (turtle_brick) StdoutLine: {'line': b"        parameters=[{'robot_description': robot_description, 'publish_frequency': 100.0},config,]\n"}
[1.078095] (turtle_brick) StdoutLine: {'line': b'                                                                                               ^\n'}
[1.078176] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078246] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:55:56: E231 missing whitespace after ','\n"}
[1.078313] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'jsp\'"]))\n'}
[1.078382] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.078450] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078517] (turtle_brick) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[1.078601] (turtle_brick) StdoutLine: {'line': b"./launch/show_turtle.launch.py:61:56: E231 missing whitespace after ','\n"}
[1.078672] (turtle_brick) StdoutLine: {'line': b'        condition=IfCondition(PythonExpression([use_jsp,"==\'gui\'"]))\n'}
[1.078740] (turtle_brick) StdoutLine: {'line': b'                                                       ^\n'}
[1.078829] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.078891] (turtle_brick) StdoutLine: {'line': b'./launch/show_turtle.launch.py:80:7: W292 no newline at end of file\n'}
[1.078953] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.079027] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079086] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:2:1: F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.079147] (turtle_brick) StdoutLine: {'line': b'from ament_index_python.packages import get_package_share_path, get_package_share_directory\n'}
[1.079207] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.079266] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079326] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused\n"}
[1.079387] (turtle_brick) StdoutLine: {'line': b'from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription\n'}
[1.079455] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.079516] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079576] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused\n"}
[1.079637] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.079697] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.079757] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.079817] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:6:1: F401 'launch.conditions.UnlessCondition' imported but unused\n"}
[1.079878] (turtle_brick) StdoutLine: {'line': b'from launch.conditions import IfCondition, UnlessCondition\n'}
[1.079938] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.079998] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080058] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.Command' imported but unused\n"}
[1.080118] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.080179] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.080239] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080299] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:7:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused\n"}
[1.080360] (turtle_brick) StdoutLine: {'line': b'from launch.substitutions import Command, LaunchConfiguration, PathJoinSubstitution\n'}
[1.080420] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.080479] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080538] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:10:1: F401 'launch_ros.parameter_descriptions.ParameterValue' imported but unused\n"}
[1.080610] (turtle_brick) StdoutLine: {'line': b'from launch_ros.parameter_descriptions import ParameterValue\n'}
[1.080685] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.080739] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.080792] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:13:69: W291 trailing whitespace\n'}
[1.080845] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.080898] (turtle_brick) StdoutLine: {'line': b'launches turtlesim and turtle_robot node along with all the nodes in \n'}
[1.080956] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file. Also connects yaml file to turtle_robot\n'}
[1.081011] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.081064] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.081117] (turtle_brick) StdoutLine: {'line': b'                                                                ^\n'}
[1.081171] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081225] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:16:1: E302 expected 2 blank lines, found 0\n'}
[1.081278] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.081332] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.081385] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081439] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:23: E251 unexpected spaces around keyword / parameter equals\n'}
[1.081492] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.081547] (turtle_brick) StdoutLine: {'line': b'                      ^\n'}
[1.081606] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081661] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:43:25: E251 unexpected spaces around keyword / parameter equals\n'}
[1.081716] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.081770] (turtle_brick) StdoutLine: {'line': b'                        ^\n'}
[1.081824] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.081877] (turtle_brick) StdoutLine: {'line': b"./launch/run_turtle.launch.py:43:70: E231 missing whitespace after ','\n"}
[1.081931] (turtle_brick) StdoutLine: {'line': b"            remappings = [('/cmd_vel', '/turtlesim1/turtle1/cmd_vel'),],\n"}
[1.081990] (turtle_brick) StdoutLine: {'line': b'                                                                     ^\n'}
[1.082043] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082134] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:46:1: W293 blank line contains whitespace\n'}
[1.082205] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.082260] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.082315] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082368] (turtle_brick) StdoutLine: {'line': b'./launch/run_turtle.launch.py:47:7: W292 no newline at end of file\n'}
[1.082423] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.082477] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082531] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:5:27: E271 multiple spaces after keyword\n'}
[1.082585] (turtle_brick) StdoutLine: {'line': b'from launch.actions import  IncludeLaunchDescription\n'}
[1.082640] (turtle_brick) StdoutLine: {'line': b'                          ^\n'}
[1.082694] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.082748] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:10:61: W291 trailing whitespace\n'}
[1.082802] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.082856] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.082910] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.082964] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.083019] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.083073] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.083127] (turtle_brick) StdoutLine: {'line': b'                                                        ^\n'}
[1.083181] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083235] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:12:54: W291 trailing whitespace\n'}
[1.083289] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.083343] (turtle_brick) StdoutLine: {'line': b'launches arena and catcher nodes along with all the nodes in \n'}
[1.083398] (turtle_brick) StdoutLine: {'line': b'show_turtle launch file.\n'}
[1.083452] (turtle_brick) StdoutLine: {'line': b'Also connects to yaml files to arena and catcher node \n'}
[1.083508] (turtle_brick) StdoutLine: {'line': b'"""\n'}
[1.083562] (turtle_brick) StdoutLine: {'line': b'   \n'}
[1.083616] (turtle_brick) StdoutLine: {'line': b'                                                 ^\n'}
[1.083670] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083724] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:15:1: E302 expected 2 blank lines, found 1\n'}
[1.083779] (turtle_brick) StdoutLine: {'line': b'def generate_launch_description():\n'}
[1.083834] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.083888] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.083942] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:44:1: W293 blank line contains whitespace\n'}
[1.083997] (turtle_brick) StdoutLine: {'line': b'        \n'}
[1.084086] (turtle_brick) StdoutLine: {'line': b'^\n'}
[1.084167] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084262] (turtle_brick) StdoutLine: {'line': b'./launch/turtle_arena.launch.py:45:7: W292 no newline at end of file\n'}
[1.084339] (turtle_brick) StdoutLine: {'line': b'    ])      ^\n'}
[1.084393] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.084447] (turtle_brick) StdoutLine: {'line': b'3     E128 continuation line under-indented for visual indent\n'}
[1.084501] (turtle_brick) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[1.084555] (turtle_brick) StdoutLine: {'line': b'27    E225 missing whitespace around operator\n'}
[1.084608] (turtle_brick) StdoutLine: {'line': b"79    E231 missing whitespace after ','\n"}
[1.084662] (turtle_brick) StdoutLine: {'line': b'2     E251 unexpected spaces around keyword / parameter equals\n'}
[1.084715] (turtle_brick) StdoutLine: {'line': b'3     E261 at least two spaces before inline comment\n'}
[1.084774] (turtle_brick) StdoutLine: {'line': b"3     E262 inline comment should start with '# '\n"}
[1.084827] (turtle_brick) StdoutLine: {'line': b"34    E265 block comment should start with '# '\n"}
[1.084880] (turtle_brick) StdoutLine: {'line': b'1     E271 multiple spaces after keyword\n'}
[1.084933] (turtle_brick) StdoutLine: {'line': b'8     E302 expected 2 blank lines, found 0\n'}
[1.084986] (turtle_brick) StdoutLine: {'line': b'7     E303 too many blank lines (2)\n'}
[1.085039] (turtle_brick) StdoutLine: {'line': b'9     E501 line too long (115 > 99 characters)\n'}
[1.085092] (turtle_brick) StdoutLine: {'line': b"33    F401 'ament_index_python.packages.get_package_share_path' imported but unused\n"}
[1.085146] (turtle_brick) StdoutLine: {'line': b"1     F841 local variable 'use_sim_time' is assigned to but never used\n"}
[1.085200] (turtle_brick) StdoutLine: {'line': b'42    W291 trailing whitespace\n'}
[1.085253] (turtle_brick) StdoutLine: {'line': b'6     W292 no newline at end of file\n'}
[1.085305] (turtle_brick) StdoutLine: {'line': b'26    W293 blank line contains whitespace\n'}
[1.085358] (turtle_brick) StdoutLine: {'line': b'2     W391 blank line at end of file\n'}
[1.085411] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085464] (turtle_brick) StdoutLine: {'line': b'13 files checked\n'}
[1.085517] (turtle_brick) StdoutLine: {'line': b'288 errors\n'}
[1.085571] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085636] (turtle_brick) StdoutLine: {'line': b"'E'-type errors: 178\n"}
[1.085688] (turtle_brick) StdoutLine: {'line': b"'F'-type errors: 34\n"}
[1.085740] (turtle_brick) StdoutLine: {'line': b"'W'-type errors: 76\n"}
[1.085793] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085845] (turtle_brick) StdoutLine: {'line': b'Checked files:\n'}
[1.085897] (turtle_brick) StdoutLine: {'line': b'\n'}
[1.085949] (turtle_brick) StdoutLine: {'line': b'* ./setup.py\n'}
[1.086001] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/arena.py\n'}
[1.086053] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/turtle_robot.py\n'}
[1.086149] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/catcher.py\n'}
[1.086213] (turtle_brick) StdoutLine: {'line': b'* ./turtle_brick/__init__.py\n'}
[1.086277] (turtle_brick) StdoutLine: {'line': b'* ./test/math_test.py\n'}
[1.086340] (turtle_brick) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[1.086403] (turtle_brick) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[1.086465] (turtle_brick) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[1.086527] (turtle_brick) StdoutLine: {'line': b'* ./test/brick.test.py\n'}
[1.086590] (turtle_brick) StdoutLine: {'line': b'* ./launch/show_turtle.launch.py\n'}
[1.086652] (turtle_brick) StdoutLine: {'line': b'* ./launch/run_turtle.launch.py\n'}
[1.086714] (turtle_brick) StdoutLine: {'line': b'* ./launch/turtle_arena.launch.py\n'}
[1.086790] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[1.086851] (turtle_brick) StdoutLine: {'line': b'option --max-complexity: please update from optparse string `type=` to argparse callable `type=` -- this will be an error in the future\n'}
[1.086912] (turtle_brick) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_pep257 __________________________________\x1b[0m\n'}
[1.086988] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_pep257.py\x1b[0m:23: in test_pep257\n'}
[1.087058] (turtle_brick) StdoutLine: {'line': b"    \x1b[94massert\x1b[39;49;00m rc == \x1b[94m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound code style errors / warnings\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[1.087123] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found code style errors / warnings\x1b[0m\n'}
[1.087185] (turtle_brick) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[1.087248] (turtle_brick) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[1.087322] (turtle_brick) StdoutLine: {'line': b'checking ./launch/run_turtle.launch.py\n'}
[1.087390] (turtle_brick) StdoutLine: {'line': b'checking ./launch/show_turtle.launch.py\n'}
[1.087453] (turtle_brick) StdoutLine: {'line': b'checking ./launch/turtle_arena.launch.py\n'}
[1.087516] (turtle_brick) StdoutLine: {'line': b'checking ./setup.py\n'}
[1.087578] (turtle_brick) StdoutLine: {'line': b'checking ./test/brick.test.py\n'}
[1.087641] (turtle_brick) StdoutLine: {'line': b'checking ./test/math_test.py\n'}
[1.087704] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_copyright.py\n'}
[1.087767] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_flake8.py\n'}
[1.087927] (turtle_brick) StdoutLine: {'line': b'checking ./test/test_pep257.py\n'}
[1.088021] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/__init__.py\n'}
[1.088100] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/arena.py\n'}
[1.088214] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D200: One-line docstring should fit on one line with quotes (found 2)\n'}
[1.088291] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.088347] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.088431] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:22 in public class `BState`: D213: Multi-line docstring summary should start at the second line\n'}
[1.088488] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.088543] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/arena.py:30 in public class `Arena`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.088634] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/catcher.py\n'}
[1.088700] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.088777] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.088830] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D208: Docstring is over-indented\n'}
[1.088886] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D210: No whitespaces allowed surrounding docstring text\n'}
[1.088970] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:18 in public class `State`: D213: Multi-line docstring summary should start at the second line\n'}
[1.089026] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D400: First line should end with a period (not 't')\n"}
[1.089082] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:18 in public class `State`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.089166] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/catcher.py:26 in public class `Catcher`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.089223] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D400: First line should end with a period (not 't')\n"}
[1.089278] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/catcher.py:26 in public class `Catcher`: D415: First line should end with a period, question mark, or exclamation point (not 't')\n"}
[1.089361] (turtle_brick) StdoutLine: {'line': b'checking ./turtle_brick/turtle_robot.py\n'}
[1.089417] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D204: 1 blank line required after class docstring (found 0)\n'}
[1.089500] (turtle_brick) StdoutLine: {'line': b'./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D205: 1 blank line required between summary line and description (found 0)\n'}
[1.089563] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D400: First line should end with a period (not ' ')\n"}
[1.089622] (turtle_brick) StdoutLine: {'line': b"./turtle_brick/turtle_robot.py:17 in public class `Turtle_robot`: D415: First line should end with a period, question mark, or exclamation point (not ' ')\n"}
[1.089680] (turtle_brick) StdoutLine: {'line': b'checking test/brick.test.py\n'}
[1.089738] (turtle_brick) StdoutLine: {'line': b'checking test/math_test.py\n'}
[1.089794] (turtle_brick) StdoutLine: {'line': b'checking test/test_copyright.py\n'}
[1.089851] (turtle_brick) StdoutLine: {'line': b'checking test/test_flake8.py\n'}
[1.089908] (turtle_brick) StdoutLine: {'line': b'checking test/test_pep257.py\n'}
[1.089965] (turtle_brick) StdoutLine: {'line': b'20 errors\n'}
[1.090022] (turtle_brick) StdoutLine: {'line': b'- generated xml file: /home/alyssa/homework2-alyssa225/build/turtle_brick/pytest.xml -\n'}
[1.090118] (turtle_brick) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[1.090197] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 288 code styl...\n'}
[1.090255] (turtle_brick) StdoutLine: {'line': b'FAILED test/test_pep257.py::test_pep257 - AssertionError: Found code style er...\n'}
[1.090318] (turtle_brick) StdoutLine: {'line': b'\x1b[31m============== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m1 skipped\x1b[0m, \x1b[33m2 warnings\x1b[0m\x1b[31m in 0.41s\x1b[0m\x1b[31m ==============\x1b[0m\n'}
[1.090378] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.090437] (turtle_brick) StderrLine: {'line': b'test/test_flake8.py::test_flake8\n'}
[1.090493] (turtle_brick) StderrLine: {'line': b'  Warning: SelectableGroups dict interface is deprecated. Use select.\n'}
[1.090549] (turtle_brick) StderrLine: {'line': b'\n'}
[1.090617] (turtle_brick) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/warnings.html\n'}
[1.090673] (turtle_brick) CommandEnded: {'returncode': 1}
[1.090921] (turtle_brick) TestFailure: {'identifier': 'turtle_brick'}
[1.090945] (turtle_brick) JobEnded: {'identifier': 'turtle_brick', 'rc': 0}
[1.091320] (-) EventReactorShutdown: {}
